trigger:
  batch: false
  branches:
    include: [master]
  paths:
    include:
      [
        server/azure-pipelines.api.yaml,
        server/src/FilterLists.Api/*,
        server/src/FilterLists.Services/*,
        server/src/FilterLists.Data/*,
        server/src/FilterLists.Data.Migrations/*,
        server/tests/FilterLists.Services.Tests/*,
        server/tests/FilterLists.Data.Tests/*,
        server/**/.editorconfig,
        .dockerignore,
        docker-compose.yml,
        docker-compose.prod.yml,
        docker-compose.data.tests.yml,
        docker-compose.services.tests.yml,
      ]

pr:
  autoCancel: false
  branches:
    include: [master]
  paths:
    include:
      [
        server/azure-pipelines.api.yaml,
        server/src/FilterLists.Api/*,
        server/src/FilterLists.Services/*,
        server/src/FilterLists.Data/*,
        server/src/FilterLists.Data.Migrations/*,
        server/tests/FilterLists.Services.Tests/*,
        server/tests/FilterLists.Data.Tests/*,
        server/**/.editorconfig,
        .dockerignore,
        docker-compose.yml,
        docker-compose.prod.yml,
        docker-compose.data.tests.yml,
        docker-compose.services.tests.yml,
      ]

pool:
  vmImage: ubuntu-latest

steps:
  - task: DockerCompose@0
    displayName: build test-data
    inputs:
      dockerComposeFile: docker-compose.data.tests.yml
      dockerComposeCommand: build api

  - task: Docker@2
    displayName: create volume test-data-results
    inputs:
      command: volume
      arguments: create test-data-results

  - task: DockerCompose@0
    displayName: up test-data db
    inputs:
      dockerComposeFile: docker-compose.data.tests.yml
      dockerComposeCommand: up -d mariadb

  - task: DockerCompose@0
    displayName: run test-data
    inputs:
      dockerComposeFile: docker-compose.data.tests.yml
      dockerComposeCommand: run api

  - task: DockerCompose@0
    displayName: build test-services
    inputs:
      dockerComposeFile: docker-compose.services.tests.yml
      dockerComposeCommand: build api

  - task: Docker@2
    displayName: create volume test-services-results
    inputs:
      command: volume
      arguments: create test-services-results

  - task: DockerCompose@0
    displayName: run test-services
    inputs:
      dockerComposeFile: docker-compose.services.tests.yml
      dockerComposeCommand: run api

  - task: Docker@2
    displayName: create container test-data-results
    inputs:
      command: container
      arguments: create --name test-data-results -v test-data-results:/results hello-world
    condition: succeededOrFailed()

  - task: Docker@2
    displayName: copy out test-data results
    inputs:
      command: cp
      arguments: test-data-results:/results $(System.DefaultWorkingDirectory)
    condition: succeededOrFailed()

  - task: Docker@2
    displayName: create container test-services-results
    inputs:
      command: container
      arguments: create --name test-services-results -v test-services-results:/results hello-world
    condition: succeededOrFailed()

  - task: Docker@2
    displayName: copy out test-services results
    inputs:
      command: cp
      arguments: test-services-results:/results $(System.DefaultWorkingDirectory)
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: publish test results
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: "**/*.trx"
    condition: succeededOrFailed()

  - task: DockerCompose@0
    displayName: build final
    inputs:
      dockerComposeFile: docker-compose.yml
      additionalDockerComposeFiles: docker-compose.prod.yml
      dockerComposeCommand: build api
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: Docker@2
    displayName: tag build number
    inputs:
      containerRegistry: collinbarrett2-dockerhub
      repository: collinbarrett2/filterlists.api
      command: tag
      arguments: collinbarrett2/filterlists.api:latest collinbarrett2/filterlists.api:$(Build.BuildId)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: Docker@2
    displayName: push
    inputs:
      containerRegistry: collinbarrett2-dockerhub
      repository: collinbarrett2/filterlists.api
      command: push
      tags: |
        latest
        $(Build.BuildId)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: CopyFiles@2
    displayName: stage docker-compose files
    inputs:
      SourceFolder: $(Build.SourcesDirectory)
      Contents: |
        docker-compose.yml
        docker-compose.prod.yml
      TargetFolder: $(Build.ArtifactStagingDirectory)
      CleanTargetFolder: true
      OverWrite: true
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: PublishBuildArtifacts@1
    displayName: publish docker-compose files
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: drop
      publishLocation: Container
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
