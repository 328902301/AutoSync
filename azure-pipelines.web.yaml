variables:
  triggerIncludePaths:
    [
      "azure-pipelines.web.yaml",
      "src/FilterLists.Web/*",
      ".dockerignore",
      "docker-compose.yml",
      "docker-compose.prod.yml",
    ]
  onSuccessAndMasterCondition: "and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))"

trigger:
  batch: false
  branches:
    include: ["master"]
  paths:
    include: $(variables.triggerIncludePaths)

pr:
  autoCancel: false
  branches:
    include: ["master"]
  paths:
    include: $(variables.triggerIncludePaths)

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: Docker@2
    displayName: "build"
    inputs:
      containerRegistry: "GitHub Docker Package Registry - FilterLists"
      repository: "collinbarrett/filterlists/filterlists.web"
      command: "build"
      Dockerfile: "src/FilterLists.Web/Dockerfile"
      buildContext: "."
      tags: |
        latest
        $(Build.BuildId)

  - task: Docker@2
    displayName: "push"
    inputs:
      containerRegistry: "GitHub Docker Package Registry - FilterLists"
      repository: "collinbarrett/filterlists/filterlists.web"
      command: "push"
      tags: |
        latest
        $(Build.BuildId)
    condition: $(variables.onSuccessAndMasterCondition)

  - task: CopyFiles@2
    displayName: "stage docker-compose files"
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)"
      Contents: |
        docker-compose.yml
        docker-compose.prod.yml
      TargetFolder: "$(Build.ArtifactStagingDirectory)"
      CleanTargetFolder: true
      OverWrite: true
    condition: $(variables.onSuccessAndMasterCondition)

  - task: PublishBuildArtifacts@1
    displayName: "publish docker-compose files"
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "drop"
      publishLocation: "Container"
    condition: $(variables.onSuccessAndMasterCondition)
