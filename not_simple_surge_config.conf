# 参考 https://github.com/scomper/Surge/blob/master/surge3.conf.ini
# 参考 https://gist.github.com/Blankwonder/dca87b84b1052f4a6a277dce73e9c01a
# 官方手册 - https://manual.nssurge.com/
# 理解原理 - https://manual.nssurge.com/book/understanding-surge/cn/
# 帮助中心 - https://nssurge.zendesk.com/
# 技术社区 - https://community.nssurge.com
# Surge 使用手册 - https://surge.mitsea.com/
# 以"#" ";" 和 "//" 开头的行为注释行
# 本配置主要参考https://github.com/BlueGrave 以及 https://divineengine.net/more/special/surge/ 特别感谢！
# 本配置使用方法：在自动选择将“输入你的机场订阅链接”替换成你的机场提供的订阅网址即可。
[General]
# 通用
# Internet 测试 URL
internet-test-url = http://captive.apple.com/generate_204
# 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204

# 测试超时（秒）:Surge 将向该 URL 发送一个 HTTP HEAD 请求。测试只关心是否收到了返回数据，并不关心数据内容。仅支持 http:// 协议
test-timeout = 3
# UDP 代理转发测试指定：默认向 8.8.8.8 查询 apple.com，可使用 proxy-test-udp 参数修改，如 proxy-test-udp = google.com@1.1.1.1
# proxy-test-udp = google.com@1.1.1.1

# 增强版 Wi-Fi 助理
# Surge 会在 Wi-Fi 网络不佳时尝试使用数据网络建立连接。该功能将对所有连接生效，请仅当使用不限量的数据流量时开启。
wifi-assist = false

# 混合网络：无论 Wi-Fi 信号如何，总是尝试并发使用 Wi-Fi 和数据网络连接。开启后，等同于对所有策略设置 hybrid = true，所有 TCP 连接在建立时均会并发尝试数据网络和 WiFi 连接，也就说如果不想对所有策略启用「混合网络」可以指定目标策略使用，如：
# [Proxy]
# HYBRID = direct, hybrid=true
# 但实际上可以不用这么写，因为 Surge 新增了两个内置策略：
# HYBRID：等价于 HYBRID = direct, hybrid=true
# NO-HYBRID ：等价于 NO-HYBRID = direct, hybrid=off
# 对于 DIRECT 的「混合网络」应用，可以使用直接使上述两个内置策略。
# 至于其他策略，「混合网络」的参数说明如下：
# hybrid=auto：默认，使用全局设置也就是使用 [General] 下的 all-hybrid 设置；
# hybrid=on 或 hybrid=true：对该策略启动并发连接；
# hybrid=off：即使在 All Hybrid 或 WiFi Assist 开启时，有 WiFi 就不使用数据网络；
# 除此之外，所有 DNS 查询操作也都将并发在数据网络和 WiFi 上进行。所以若想体验该功能，请手动配置公网 DNS，暂不支持 DOH。
# 该选项可显著改善在弱 Wi-Fi 和网络切换时的网络体验。该选项对所有 TCP 连接和 DNS 查询生效。请仅当使用不限量的数据流量套餐时开启。
all-hybrid = true
# 「Wi-Fi 助理」和「混合网络」的区别：
# WiFi Assist：使用 WiFi 尝试建立连接后，如果一秒钟内仍未完成，则再使用数据网络尝试连接。选择最先完成的 TCP 连接；
# Hybrid：直接并发建立两个 TCP 连接，选择最先完成的 TCP 连接.


# GeoIP 数据库，默认使用surge自带.Surge 默认是使用由 MaxMind 创建的 GeoLite2 数据库，但是它的信息不是那么的准确，从 Surge iOS 4.5.0 开始可以自定义 GeoIP 数据的 URL，需要为 MaxMind 的格式。
# 如果想使用第三方GeoIP，下面两个二选一即可，也可自行更换为其它第三方
# 在配置信息设置好 geoip-maxmind-url 后建议在图形界面打开「自动更新」开关（或者直接在图形界面中设置 URL 及开关）
# geoip-maxmind-url = https://cdn.jsdelivr.net/gh/Hackl0us/GeoIP2-CN@release/Country.mmdb
# geoip-maxmind-url = https://raw.githubusercontent.com/NobyDa/geoip/release/Private-GeoIP-CN.mmdb
# GeoIP 禁用自动更新
disable-geoip-db-auto-update = false

# 是否启动完整的 IPv6 支持 (默认值: false)参数：true：开启，false：关闭
ipv6 = false
# Surge VIF IPv6 Stack
# 允许 IPv6 通过 Surge VIF。当希望 Surge 处理连接到 IPv6 地址的原始 TCP 连接时非常有用。可选项：true，false，auto，always
ipv6-vif = auto
# 隐藏状态栏上的VPN图标，启动该选项可能导致「Cannot allocate memory」系统错误，请谨慎使用
# hide-vpn-icon = true

# Wi-Fi 访问
# Surge 可以作为 HTTP/SOCKS5 代理服务器向 Wi-Fi 网络下的其他设备提供服务器
allow-wifi-access = false
# Surge Mac 供外网访问的服务端口
# HTTP 服务端口 (默认值: 6152)
# http-listen = 0.0.0.0:6152
# SOCKS5 服务端口 (默认值: 6153)
# socks5-listen = 0.0.0.0:6153

# Surge iOS 供外网访问的服务端口
# HTTP 服务端口 (默认值: 6152)
# wifi-access-http-port = 6152
# SOCKS5 服务端口 (默认值: 6153)
# wifi-access-socks5-port = 6153

# 远程控制器
# 允许外部控制器访问 Surge，Surge Dashboard 或 Surge CLI 进行管理控制
# 默认仅允许外部控制器通过 USB 进行控制。如果想要允许由 Wi-Fi 控制可以将 127.0.0.1 改为 0.0.0.0
external-controller-access = zeaphyou@127.0.0.1:6170
http-api = zeaphyou@127.0.0.1:6171
# 使用HTTPS替代HTTP协议，需要先配置Mitm的CA证书，同时需要在客户端设备上手动安装并信任CA证书
http-api-tls = false
# 页面控制器：通过页面控制Surge， Safari输入127.0.0.1:6171,填入HTTP-API密码即可。
http-api-web-dashboard = true
# 允许热点共享
allow-hotspot-access = false

# 该选项将使得发往这些域名或者 IP 段的请求由 Surge VIF 进行处理（而不是 Surge Proxy），该选项用于修正和某些应用的兼容性问题。该选项一般只用于处理某些特殊的兼容性问题，并不能使请求绕过 Surge。（对于 Surge Mac，如果未开启「增强模式」，确实可以绕过）。
# 若要指定一个域，请输入域名。如：apple.com；
# 若要指定域中的所有网站，请在域名前使用 *，如：*apple.com；
# 若要指定域的特定部分，请指定完整部分。如：store.apple.com；
# 若要通过 IP 地址指定主机或网络，请输入特定的 IP 地址（如 192.168.2.11）或地址范围（如 192.168.2.* 或 192.168.2.0/24）；
# 注意：如果你输入一个 IP 地址或地址范围，你只能在使用该地址连接到该主机时绕过代理，而不能在通过解析到该地址的域名连接到主机时绕过代理。
# 已加入对部分检测代理的app的跳过
skip-proxy = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.168.0.0/16, 224.0.0.0/3, ::1/128, fc00::/7, fd00::/8, fe80::/10, ff00::/8, 2001::/32, 2001:db8::/32, 2002::/16, ::ffff:0:0:0:0/1, ::ffff:128:0:0:0/1, localhost, *.local, passenger.t3go.cn, e.crashlytics.com, captive.apple.com, app.yinxiang.com, injections.adguard.org, local.adguard.org, cable.auth.com, www.baidu.com, yunbusiness.ccb.com,*.bankcomm.com,*.ccb.com,*.boc.cn

# 兼容性（仅 iOS 版可用）
# 0：禁用
# 1：Proxy with Loopback Address
# 2：Proxy Only
# 3：TUN Only
# 4：VIF Proxy：不使用 127.0.0.1 的回环地址作为代理，使用 VIF 的虚拟代理地址，将产生额外的性能开销
# 5：No Default Route：不声明为默认路由，但声明若干个小路由以覆盖所有地址（与 Surge Mac 增强模式行为相同）。
# 这种配置下由于 VIF 不是主网络设备无法配置系统代理。部分应用在该模式下会认为 VPN 未开启以解决特殊兼容性问题，如 HomeKit Security Camera
# 所有兼容模式均不推荐长期开启，仅应用作特定问题的临时解决使用。
#####警告#######
# 请仅在指引下使用，开启后部分功能可能无法使用。
 compatibility-mode = 0
# (macOS 版本中，如果启用了 Set as System Proxy, 这些值会被写入到系统网络代理设置.)
# read-etc-hosts = true

# FOR MAC 
# 当 Wi-Fi 不是首选网络时 SSID 组策略使用默认策略（仅 macOS 版可用）
# use-default-policy-if-wifi-not-primary = false
# macOS Only
# enhanced-mode-by-rule = false
# Network Framework
# network-framework = false

# DNS相关设置
# 传统 DNS 服务器设置
dns-server = 119.29.29.29,223.5.5.5
# 加密 DNS 服务器设置
encrypted-dns-server = https://doh.pub/dns-query
# encrypted-dns-server = https://dns.alidns.com/dns-query
# encrypted-dns-server = https://dns.google/dns-query
# encrypted-dns-server = https://cloudflare-dns.com/dns-query
# encrypted-dns-server = https://dns.adguard.com/dns-query
# encrypted-dns-server = https://public.dns.iij.jp/dns-query
# 实验性 DNS ove QUIC 支持
# encrypted-dns-server = quic://dns.adguard.com
# encrypted-dns-server = h3://223.5.5.5/dns-query

# 使加密 DNS 请求通过代理策略执行
encrypted-dns-follow-outbound-mode = false
# 跳过证书验证
encrypted-dns-skip-cert-verification = false
# 从 /etc/hosts 中读取 DNS 记录（MAC）
# read-etc-hosts = true
# 对使用代理的请求强制使用本地 DNS 映射结果
# 默认情况下，当使用代理策略时，DNS 解析永远在代理服务器进行。
# 开启该选项后，对于存在于本地 DNS 映射中的域名，Surge 将使用本地映射结果的 IP 地址进行代理请求，而不再使用原始域名。
# 仅对使用了 IP 地址的本地映射记录生效。
use-local-host-item-for-proxy = true
# 本地 DNS 映射
# 该功能和 /etc/hosts 文件基本一致。
# 本地 DNS 映射位于 [Host] 字段下，格式为：域名 = IP 地址
# 除了直接指定主机名所对应的 IP 地址，还支持本地值指定域名、对特定域名自定义特定的 DNS 服务器。
# 以下是示例：
# 通配符
# *.example.com = 1.1.1.1
# 通配符支持 * 和 ?
# 本地值指定域名
# example.com = www.example.com
# 这相当于 CNAME 记录。
# 使用特定的 DNS 服务器
# 如域名 example.com 及其子域名指定使用 DNS 服务器 119.29.29.29 来解析：
# example.com = server:119.29.29.29
# *.example.com = server:119.29.29.29
# Surge 还支持配置部分域名回退到系统 DNS 解析：
# example.com = server:syslib
# 这可用于解决一些兼容性问题，比如一些 VPN 会利用 Split DNS 机制在系统中添加用于处理特定域名的 DNS 服务器，Surge 目前还不能支持这种复杂逻辑，可通过对 VPN 相关域名配置回退解决。

# TCP Force HTTP Hosts
# 使 Surge 将 TCP 连接视为 HTTP 请求。Surge HTTP 引擎将处理请求，并且所有高级功能都将可用，如截取、重写和脚本。
# 支持通配符 * 及 ?；
# 使用前缀 - 排除主机名；
# 默认情况下，只对 80 端口的请求进行处理（使用 example.com:443 指定端口或 example.com:0 表示所有端口）；
# <ip-address> 表示匹配所有主机名为 IP 地址的连接；
# <ipv4-address> 表示匹配所有主机名为 IPv4 地址的连接；
# <ipv6-address> 表示匹配所有主机名为 IPv6 地址的连接；
# 下面是一些示例：
# -*.apple.com：排除所有发往 *.apple.com 上的 80 端口的请求；
# www.google.com：对 www.google.com 上的 80 端口的请求强制使用 HTTP 处理；
# www.google.com:8080：对 www.google.com 上的 8080 端口的请求强制使用 HTTP 处理；
# www.google.com:0：对 www.google.com 上的所有端口的请求强制使用 HTTP 处理；
# *:0：对所有主机名上的所有端口使用强制 HTTP 处理。
# KOOWO - 119.18.193.135, 122.14.246.33, 123.59.31.1, 175.102.178.52
# TencentVideo/Youku/iQiyi - 116.253.24.*, 124.193.*, 124.14*, 119.79*, 175.6.26.*, 211.162.*, 220.112.* 220.169.153.*
force-http-engine-hosts = *.ott.cibntv.net, 119.18.193.135, 122.14.246.33, 123.59.31.1, 175.102.178.52, 116.253.24.*, 124.193.*, 124.14*, 119.79*, 175.6.26.*, 211.162.*, 220.112.* 220.169.153.*

# Always Real IP Hosts
# 当 Surge VIF 处理 DNS 问题时，此选项要求 Surge 返回一个真正的 IP 地址，而不是一个 Fake IP。
# DNS 数据包将被转发到上游 DNS 服务器。
# 例如由于游戏主机会使用 STUN 技术进行 NAT 穿透，需要进行一些额外的配置才能正常工作。
always-real-ip = *.lan, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, localhost.*.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, music.163.com, *.music.163.com, *.126.net, musicapi.taihe.com, music.taihe.com, songsearch.kugou.com, trackercdn.kugou.com, *.kuwo.cn, api-jooxtt.sanook.com, api.joox.com, joox.com, y.qq.com, *.y.qq.com, streamoc.music.tc.qq.com, mobileoc.music.tc.qq.com, isure.stream.qqmusic.qq.com, dl.stream.qqmusic.qq.com, aqqmusic.tc.qq.com, amobile.music.tc.qq.com, *.xiami.com, *.music.migu.cn, music.migu.cn, proxy.golang.org, *.mcdn.bilivideo.cn, *.cmpassport.com, id6.me, open.e.189.cn, mdn.open.wo.cn, auth.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*, speedtest.cros.wr.pvp.net

# VIF Excluded Routes
# Surge VIF 只能处理 TCP 和 UDP 协议。使用此选项可以绕过特定的 IP 范围，允许所有流量通过。
# ⚠️ 注意：此选项仅适用于 Surge VIF。Surge 代理服务器处理的请求不受影响。将「skip-proxy」和「tun-excluded-routes」组合起来，以确保特定的 HTTP 流量绕过 Surge。
# 此选项可能导致系统错误 ENOMEM (无法分配内存)。这看起来像是 iOS 系统中的一个 bug。如果可能，请不要使用此选项。
# tun-excluded-routes = 239.255.255.250/32

# VIF Included Routes
# 默认情况下，Surge VIF 接口会声明自己是默认路由。但是，由于 Wi-Fi 接口的路由较小，有些流量可能不会通过 Surge VIF 接口。使用此选项可以添加一条较小的路由。
# tun-included-routes = 192.168.1.12/32
# 路由防火墙
# 包含所有的网络请求
# include-all-networks = false
# 包含本地网络请求
# include-local-networks = false
# 高级
# 日志等级: warning, notify, info, verbose (默认值: notify)
# 不建议在日常使用中启用 verbose，因为这会严重降低性能。
loglevel = notify

# 排除简单主机名
exclude-simple-hostnames = true

# 新增参数 udp-policy-not-supported-behaviour 参数用于控制当 UDP 流量被匹配到一个不支持 UDP 转发的策略时的行为
# DIRECT：回退到 DIRECT 策略（默认）
# REJECT：回退到 REJECT 策略
# 如果你参与一些对战手游，建议关闭此选项。
# udp-policy-not-supported-behaviour = REJECT

# Hijack DNS
# 默认情况下，Surge 只对发送到 Surge DNS 地址(198.18.0.2)的 DNS 查询返回 Fack IP 地址。发送到标准 DNS 的查询将被转发。
# 如 Google 系智能硬件产品会无视 DHCP 配置强行使用 8.8.8.8 和 8.8.4.4，需要配置 Surge 强行劫持才可以正常工作。
# 另外还可以使用 hijack-dns = *:53 来劫持所有的 DNS 查询。
hijack-dns = 8.8.8.8:53, 1.1.1.1:53, 8.8.4.4:53

# Show Reject Error Page
# 当遇到 REJECT 策略时显示错误页
show-error-page-for-reject = true

# 实验性
# 开启后 Surge 在切换网络后不再重新进行 VPN 配置。
# 先前版本测试中使用该逻辑后部分用户会遇到问题，如产生循环请求。请自行测试是否应开启该功能
fast-switch = true

# 开启后会提高处理 UDP 流量的优先级，当系统负载高时会有比较明显的作用 (如高性能联机游戏)
udp-priority = true

[Replica]
# ---(实验性功能)---
# 0 为关闭，1 为开启
# 隐藏所有发往 *.Apple.com 和 *.icloud.com 的请求
# （该选项只是在抓取结果中隐藏了请求）
hide-apple-request = 1
# 隐藏 Crashlytics 请求
hide-crash-reporter-request = 1
# 隐藏 UDP 会话
hide-udp = 0
# 关键词过滤器
# none（关闭关键词过滤器） / whitelist（blacklist（仅记录包含关键字的请求）） / blacklist（仅记录不包含关键字的请求） / pattern（匹配通配符的请求）
keyword-filter-type = none
# 关键词
# keyword-filter = (null)
# ------
# 该段定义可用的代理策略
# 针对所有类型代理的选项:
# interface: 可选 (默认值: null)
# 强制使用特定的出口地址或网络设备 (仅 macOS 版可用)
# 例如: ProxyHTTP = http, 1.2.3.4, 443, username, password, interface = en2
# en1 = direct, interface = en1
# 针对启用了 TLS 的代理的选项:
# skip-common-name-verify: "true" 或 "false" (默认值: false)
# 如果启动该选择, Surge 不会校验证书名是否符合
keyword-filter = *

[Proxy]
Warp+GSC = wireguard, section-name=WGgoGetSomeCats,  test-url=http://cp.cloudflare.com/generate_204
WARP+GSCats = wireguard, section-name=GetSomeCats,  test-url=http://cp.cloudflare.com/generate_204

# 写法是 策略名 = 代理类型,代理地址，端口号，用户名，密码
# 不同的类型填写的具体项目会有差异，建议在 UI 界面中填写
# 策略名不可重复，策略名须先定义才能在其它部分引用
# Proxy01 = https,adc-us.com,443,username = 用户名,password = 密码
# Proxy02 = ss, abc-kt.com, 443, encrypt-method = rc4-md5, password = 密码
# Proxy03 = socks5, abc-cn.com, 443, username = 用户名, password = 密码
# Proxy chain：可以通过一个代理跳板使用另一个代理，可以无限嵌套使用。
# ProxyB = trojan, example.com, 443, password=password1, skip-cert-verify=true, underlying-proxy=ProxyA/Proxies
# Surge <--> ProxyA/Proxies <--> ProxyB <--> Internet
# Proxy = select, Auto, Proxy01 , Proxy02, Proxy03
# - 新增 IPv4 & IPv6 偏好参数，对于所有策略，可附带参数 ip-version=，可选参数有：
# * dual：默认行为，在双栈网络上将并发使用 v4 和 v6 地址并选取最快速的结果。
# * prefer-v4：若DNS解析获得了 A 与 AAAA 记录，优先使用 A 记录，否则使用 AAAA 记录。
# * prefer-v6：若DNS解析获得了 A 与 AAAA 记录，优先使用 AAAA 记录，否则使用 A 记录。
# * v4-only：仅使用 A 记录，若未获得A记录则失败。
# * v6-only：仅使用 AAAA 记录，若未获得 AAAA 记录则失败。
# 可配合 direct 类型策略使用，如：IPV6-ONLY = direct, ip-version=v6-only
# DIRECT = direct, ip-version=prefer-v4
# HYBRID = direct, hybrid=true, ip-version=dual


[Proxy Group]

# 机场信息（encode地址链接: https://www.urlencoder.org）
# 该段定义可用的策略组
# 有 5 种策略组类型: "select", "url-test"，"fallback"，"ssid" 和 "load-balance"
# select: 具体哪个子策略将被使用，由用户界面上进行选择。
# url-test: 具体哪个子策略将被使用，通过测试到具体 URL 的访问速度选择
# 参数:
# url: 必填
# 测试时用到的目标 URL.
# interval: 可选, 秒 (默认值: 600s)
# 每次测试的间隔时间。指定在多长时间后，上次的测试结果将被抛弃。
# 所有类 url-test 组的测试时机为：
# 首次使用时进行测试；
# 后续使用该策略组时，如果上次测试的时间间隔已大于 interval 设置时间，则再次触发测试；
# 当目前选中策略产生不可恢复性错误时，直接触发测试。
# 网络切换后，将清理之前的测试结果，当策略组被使用时触发首次测试。
# tolerance: 可选, 毫秒 (默认值: 100ms)
# 只有当新的优选线路，比原优选线路的响应时间，大于该值的时候，才会触发线路变更。
# timeout: 可选, 秒 (默认值: 5s)
# 测试的最长等待时间，如果某策略在该时间后依然没有完成，放弃该策略。
# evaluate-before-use: 可选，true or false
# 默认情况下，在首次使用策略组时将直接使用子策略中的第一个策略，同时触发延迟测试。如果配置了 evaluate-before-use=true，那么首次使用时将等待测试完毕后选择最佳策略
# fallback: 具体哪个子策略将被使用，通过测试到具体 URL 的可用性决定
# 与 url-test 组基本一致，区别是只关心子策略是否可用而不关心具体延迟，然后从可用策略中选择靠前的策略。可以通过调小 timeout 参数将缓慢线路也标记为不可用。该类型没有 tolerance 参数。
# ssid: 具体哪个子策略将被使用，根据 Wi-FI 的 SSID 决定
# 参数:
# default: 必填
# 默认策略。
# cellular: 可选
# 在数据网络下的策略。 若不填，那么默认策略将被使用。
# load-balance 策略组
# 负载均衡组，随机从子策略中选取一个策略使用。
# 当配置了 url 参数时，会按照 fallback 组的行为进行可用性检查，然后仅从可用的子策略中随机选取。
# 除 url、timeout、interval外，还有一个参数：
# • persistent：当 persistent=true 时，对于同一目标主机名，将尽量使用同一个策略。避免因出口 IP 不同而触发目标网站的风险控制。但当可用性改变时可能导致策略变化。
# hidden=1，隐藏策略组
# 以代理服务器的选择模式实现广告的通过选择
# AdBlock = select, Ad-GIF,Ad-Block,Ad-Pass
# 场景选择模式
# 缺省走 Auto；蜂窝网络走 Proxy01；
# 接入 Wi-Fi 时走 Auto（SSIDNAME 改成需要判断的 Wi-Fi 的名称）
# Scene = ssid, default = Auto, cellular = Proxy01, "SSIDNAME" = Auto
# 自动选择代理
# Auto = fallback, Proxy01, Proxy02, Proxy03, url = http://www.bing.com/
# Video 策略群组的写法，将用于视频服务的代理放在一个群组（Netflix会判断代理的地域）
# Video = url-test, policy-path=groupHK.list, url = http://www.bing.com/
# Video 策略组的简单写法，两种写法可选一个
# Video = url-test, Proxy02, Proxy03, url = http://www.bing.com
# 策略组中还是尽量把各种流媒体的选择给列出来了，便于根据自己需要进行选择和增删
全球加速 = fallback, 香港节点,  Warp+GSC, WARP+GSCats, 日本节点, 台湾节点, 狮城节点, 美国节点, 自动选择, no-alert=0, hidden=0, include-all-proxies=0
电报线路 = select,  狮城节点, Warp+GSC, 香港节点, 台湾节点, 日本节点, 美国节点, WARP+GSCats,  no-alert=0, hidden=0, include-all-proxies=0
推特线路 = select, 日本节点, 美国节点, 狮城节点, 香港节点, 台湾节点, WARP+GSCats,Warp+GSC, no-alert=0, hidden=0, include-all-proxies=0
港台剧集 = select, DIRECT, 香港节点, 台湾节点,  no-alert=0, hidden=0, include-all-proxies=0
油管影音 = select, 香港节点, 台湾节点, 狮城节点, 日本节点,  Warp+GSC, 美国节点, 其它区域, WARP+GSCats,  no-alert=0, hidden=0, include-all-proxies=0
奈飞剧集 = select, 狮城节点, 香港节点, 台湾节点, 日本节点, 美国节点,  Warp+GSC, WARP+GSCats,  其它区域, no-alert=0, hidden=0, include-all-proxies=0
迪斯尼+ = select, 美国节点, 香港节点, 台湾节点, 狮城节点, 日本节点, Warp+GSC, WARP+GSCats, no-alert=0, hidden=0, include-all-proxies=0
国际影视 = select, 自动选择,  香港节点, 台湾节点, 狮城节点, 日本节点, 美国节点,Warp+GSC, WARP+GSCats,  no-alert=1, hidden=0, include-all-proxies=0
漏网之鱼 = fallback, 全球加速,Warp+GSC, WARP+GSCats, DIRECT, no-alert=1, hidden=0, include-all-proxies=0
狮城节点 = select, policy-regex-filter=坡|SG|🇸🇬|Singapore, no-alert=1, hidden=0, evaluate-before-use=true, include-all-proxies=0, include-other-group="自动选择", persistent=0
香港节点 = select, evaluate-before-use=true, policy-regex-filter=港|HK|Hong|hk|🇭🇰, no-alert=1, hidden=0, include-all-proxies=0, include-other-group="自动选择", persistent=0
台湾节点 = select, evaluate-before-use=true, policy-regex-filter=湾|TW|Taiwan|tw, no-alert=1, hidden=0, include-all-proxies=0, include-other-group="自动选择", persistent=0
日本节点 = select, policy-regex-filter=日|JP|Japan|🇯🇵, no-alert=1, evaluate-before-use=true, hidden=0, include-all-proxies=0, include-other-group="自动选择", persistent=0
美国节点 = select, policy-regex-filter=美|US|🇺🇸, no-alert=1, hidden=0, evaluate-before-use=true, include-all-proxies=0, include-other-group="自动选择", persistent=0
韩国节点 = select, policy-regex-filter=韩, no-alert=0, hidden=0, include-all-proxies=0, include-other-group="自动选择"
其它区域 = select, policy-regex-filter=^(?!.*(港|美|坡|韩|日|台|US|SG|JP|TW|HK)), no-alert=0, hidden=0, include-all-proxies=0, include-other-group="自动选择"
自动选择 = url-test, url=http://cp.cloudflare.com/generate_204, interval=3600, tolerance=50, update-interval=0, no-alert=1, hidden=0, include-all-proxies=0, policy-path=输入你的机场订阅链接

[Rule]

# 规则定义部分
# 触发通知，匹配规则时弹出 notification-text 定义的字符串
# Rulesets，规则集（每 24 小时后台自动更新）
# 规则集包含多条子规则，可以是另一个本地 list 文件，或者是一个 URL
# 内置了两个规则集：SYSTEM 和 LAN
# > Surge And Github 外部资源更新时发出通知
# AND,((DOMAIN,raw.githubusercontent.com), (USER-AGENT,Surge*)),全球加速,notification-text="♻️外部资源更新",notification-interval=3600
# ADGUAD去广告
# DOMAIN-SET,https://anti-ad.net/surge2.txt,REJECT
# 去广告（更换为神机规则
DOMAIN-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/AdvertisingPlus.list,REJECT
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list,REJECT
# 保护隐私
# DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Privacy/Privacy_Domain.list,REJECT
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Privacy/Privacy.list,REJECT
# 反运营商劫持或恶意网站
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Hijacking/Hijacking.list,REJECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Download/Download.list,DIRECT
# YouTube
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTubeMusic/YouTubeMusic.list,油管影音
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list,油管影音
# Netflix
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list,奈飞剧集
# Disney+
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Disney/Disney.list,迪斯尼+
# 阻止电报频繁请求
AND,((PROCESS-NAME,Telegram), (OR,((IP-CIDR,0.0.0.0/8), (IP-CIDR,224.0.0.0/4)))),REJECT
# Telegram
# RULE-SET,https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.Telegram.list,电报线路
# OR,((IP-ASN,44907,no-resolve), (IP-ASN,59930,no-resolve), (IP-ASN,62014,no-resolve), (IP-ASN,62041,no-resolve), (IP-ASN,211157,no-resolve)),电报线路
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Telegram/Telegram.list,电报线路
# Twitter
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Twitter.list,推特线路
# Spotify
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Spotify/Spotify.list,台湾节点
# 国内影视海外版
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingSE.list,港台剧集
# GlobalMedia
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Streaming.list,国际影视
# OneDrive
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/OneDrive/OneDrive.list,DIRECT
# 对于一些对战游戏因为都是基于UDP，开启此选项后可避免一些延迟。默认关闭
PROTOCOL,UDP,DIRECT
# Google Drive
# RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Google/GoogleDrive.list,全球加速
# Google Voice
# RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Google/GoogleVoice.list,全球加速
# Google
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Google/Google.list,全球加速
# Speedtest
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Speedtest/Speedtest.list,全球加速
# Apple
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Apple/Apple.list,DIRECT
# ChinaMedia
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingCN.list,DIRECT
# 国外网站
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list,全球加速

# Surge 的自动 REJECT 保护丢包，防止应用循环请求
IP-CIDR,0.0.0.0/32,REJECT,no-resolve
# Local Area Network 局域网
RULE-SET,LAN,DIRECT
# GeoIP CN，基于 GeoIP 数据库判断域名和 IP 的归属地
GEOIP,CN,DIRECT
# DNS 查询失败走 Final 规则
FINAL,漏网之鱼,dns-failed

[Host]
# 该段定义本地 DNS 记录
# 该功能等同于 /etc/hosts，加上了泛解析和别名支持。
# DNS 全部交给系统处理
# * = server:syslib
# 本地值
# 特定 DNS 服务器
*.tw = server:1.1.1.1
testflight.apple.com = server:8.8.8.8
router.asus.com = server:syslib
*.tmall.com = server:223.5.5.5
*.taobao.com = server:223.5.5.5
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.alipay*.com = server:223.5.5.5
*.alibaba*.com = server:223.5.5.5
*.alimama*.com = server:223.5.5.5
*.qq.com = server:119.29.29.29
*.tencent.com = server:119.29.29.29
*.weixin.com = server:119.29.29.29
*.qpic.cn = server:119.29.29.29
*.jd.com = server:119.29.29.29
*.bilibili.com = server:119.29.29.29
hdslb.com = server:119.29.29.29
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
*.10010.com = server:119.29.29.29
*.unicompayment.com = server:119.29.29.29
*.vercel.app = server:119.29.29.29
*.vercel.com = server:119.29.29.29
*.ximalaya.com = server:119.29.29.29
*.baidu.com = server:119.29.29.29
*.bdstatic.com = server:119.29.29.29

[URL Rewrite]

# 该段定义针对 HTTP 请求的 URL 重定向规则
# 有两种重定向方式: "header" 和 "302"
# Header 模式 header
# Surge 会修改发出的 http header，必要时还会修改 Host 字段。客户端将
# 感知不到这个重定向过程. 不支持重定向到一个 HTTPS 的地址。
# 302 模式 header
# Surge 直接简单的返回一个 302

# Redirect Google Search Service
^(http|https):\/\/(www.)?(g|google)\.cn https://www.google.com 302
^https?://(.*?[.])?(?:g|google).cn https://$1google.com 302
# Redirect Google Maps Service
^(http|https):\/\/(ditu|maps).google\.cn https://maps.google.com 302
# Weibo Short URL
^http:\/\/t\.cn http://sinaurl.cn 302

[Header Rewrite]
# 重定向 HTTP 请求或者篡改请求 Header
# Surge 可以在请求被发往目标服务器之前篡改请求的 Header

# 该段仅在 iOS 版本下生效。 
# 你可以为某些特定的 WiFi 网络设置设置参数
# 参数:
# suspend: "true" 或 "false"
# 在该网络下 Surge 将暂停工作。 请注意，如果你在该网络下直接启动 Surge，那么 
# Surge 依然会工作。只有当从其他网络切换到该网络时，Surge 才会暂停。
[SSID Setting]
# 连接到 Apple Store 的 Wi-Fi网络时 Surge 暂停工作
# 需要 Web 验证登录的 Wi-Fi 网络以及路由器已经科学上网的 Surge 挂起
# "Apple Store" suspend = true
# 计费网络模式，当连接到热点名为 iPhone的网络时自动切换为计费模式
# "iPhone" cellular-mode = true

# 新增 cellular-fallback 参数，可用于单独控制一些 Wi-Fi 下的 all-hybrid 和 wifi-assist 行为
# 使用 [General] 中的 all-hybrid 和 wifi-assist 配置
cellular-fallback=default
# cellular-fallback=off 关闭 all-hybrid 和 wifi-assist
# cellular-fallback=hybrid 开启 all-hybrid 
# cellular-fallback=wifi-assist 开启 wifi-assist

# SSID Setting 段和 SUBNET 规则的表达式升级：
#   可使用 MCCMNC:100-200 匹配特定数据网络
#   可使用 SSID:value 特定匹配 SSID，支持通配符
#   可使用 BSSID:value 特定匹配 BSSID，支持通配符
#   可使用 ROUTER:value 特定匹配路由地址
#   可使用 TYPE:WIFI 匹配所有 WiFi 网络
#   可使用 TYPE:CELLULAR 匹配所有数据网络
#   可使用 TYPE:WIRED 匹配所有有线网络（iOS 上支持 USB 网络适配器）
#   如无前缀则按照旧版规则匹配 SSID、BSSID、路由地址
# SSID Setting 段内容从上至下依次匹配，匹配到第一个结果后立刻终止
# 中国用户若使用 TFO 建议强制关闭数据网络上的 TFO，避免产生问题，然后在已测试过的网络上强制开启。只有这样配置后方可充分享受 TFO 的优势。
# 强制关闭数据网络 TFO
TYPE:CELLULAR tfo-behaviour=force-disabled
# "My Home" tfo-behaviour=force-enabled

[MITM]
skip-server-cert-verify = true
# 跳过服务端证书验证
h2 = true
# 用于 TCP 连接
tcp-connection = false
# 可以指定一个单一的IP地址或使用 CIDR 设置特定设备启用 MitM，均支持 IPv4 和 IPv6
# client-source-address = 0.0.0.0/0, ::/0
# 如针对某个设备不启用可使用
# client-source-address = -192.168.1.2, 0.0.0.0/0


# 自带2个warp+节点，你们也可以加入我的team：getsomecats，验证方式为：gmail

[WireGuard WGgoGetSomeCats]
private-key = oFl4IF42oioy2rU9Dc2af5vi6X6+zbFDnY/CUckU23g=
self-ip = 172.16.0.2
self-ip-v6 = 2606:4700:110:8f71:49f:13f4:55d6:a577
prefer-ipv6 = true
dns-server = 162.159.36.1, 2606:4700:4700::1111
mtu = 1400
peer = (public-key = bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=, allowed-ips = "0.0.0.0/0, ::0/0", endpoint = 162.159.195.8:2408, keepalive = 45)


[WireGuard GetSomeCats]
private-key = eKycj9KyGKX4Gyj9ntOXIwc3stSSN8LmQ8U7Tvq7sW8=
self-ip = 172.16.0.2
self-ip-v6 = 2606:4700:110:81bc:1fc5:5bf3:78d:754f
prefer-ipv6 = true
dns-server = 162.159.36.1, 2606:4700:4700::1111
mtu = 1400
peer = (public-key = bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=, allowed-ips = "0.0.0.0/0, ::0/0", endpoint = 162.159.193.6:2408, keepalive = 45)




