# 通用
[General]
# 隐藏状态栏上的 VPN 图标
hide-vpn-icon = false

# 增强版 WiFi 助理：开启后，Surge会在 WiFi 网络不佳时尝试使用数据网络建立连接。
wifi-assist = true
# 混合网络：开启后，等同于对所有策略设置 hybrid = true，所有 TCP 连接在建立时均会并发尝试数据网络和 WiFi 连接。
# 除此之外，所有 DNS 查询操作也都将并发在数据网络和 WiFi 上进行。所以若想体验该功能，请手动配置公网 DNS，暂不支持 DOH。
all-hybrid = false

# 进行网络测试的网址
internet-test-url = http://captive.apple.com
# 测试代理策略时的 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
# 测试超时（秒）
test-timeout = 3
# 默认向 8.8.8.8 查询 apple.com，可使用 proxy-test-udp 参数修改，如 proxy-test-udp = google.com@1.1.1.1
# proxy-test-udp = google.com@1.1.1.1

# GeoIP 数据库
geoip-maxmind-url = https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb
# GeoIP 禁用自动更新
disable-geoip-db-auto-update = false

# 是否启动完整的 IPv6 支持 (默认值: false)
ipv6 = false
# IPV6 VIF
# ipv6-vif = auto

# Wi-Fi 访问
# Surge 作为 HTTP/SOCKS5 代理服务器向 Wi-Fi 网络下的其他设备提供服务器
allow-wifi-access = false
# 允许热点共享
allow-hotspot-access = false
# Surge iOS 供外网访问的服务端口
# HTTP 服务端口 (默认值: 6152)
wifi-access-http-port = 6152
# SOCKS5 服务端口 (默认值: 6153)
wifi-access-socks5-port = 6153

# 远程控制器 用于Boxjs等，注意此处的用户名密码端口等需要与boxjs上的一致。
external-controller-access = kokoryh@0.0.0.0:6170

# 允许外部控制器访问 Surge，Surge Dashboard 或 Surge CLI 进行管理控制
# Safari输入 127.0.0.1:6171 ,填入 HTTP-API 密码即可。
http-api = kokoryh@0.0.0.0:6171
http-api-tls = false
http-api-web-dashboard = true

# 兼容性 (仅 iOS 版可用)
# compatibility-mode = 0
# 跳过某个域名或者 IP 段，这些目标主机将不会由 Surge Proxy 处理。有一些App例如国网等会检测是否配置了代理，跳过代理可以跳过检测，对于部分App例如交行买单吧无效，需在兼容性里面开启Tun only模式方可跳过检测。
# 已加入对部分检测代理的app的跳过
skip-proxy = injections.adguard.org, local.adguard.org, cable.auth.com, www.baidu.com, www.abchina.com.cn, localhost, *.local, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.1, 169.254.0.0/16, 172.16.0.0/12, 192.168.0.0/24, 224.0.0.0/4, 240.0.0.0/4, 255.255.255.255/32, fe80::/10

# 路由防火墙
# 包含所有网络请求
include-all-networks = false
# 包含本地网络请求
include-local-networks = false

# 高级
# 日志等级: warning, notify, info, verbose (默认值: notify)
loglevel = notify
show-error-page-for-reject = true
# Always Real IP Hosts
# 当 Surge VIF 处理 DNS 问题时，此选项要求 Surge 返回一个真正的 IP 地址，而不是一个假 IP 地址。
always-real-ip = *.lan, cable.auth.com, captive.apple.com, *.cmpassport.com, id6.me, open.e.189.cn
#
# Hijack DNS
# 默认情况下，Surge 只返回发送到 Surge DNS 地址的 DNS 查询的假 IP 地址(198.18.0.2)。
# 有些设备或软件总是使用硬编码的 DNS 服务器。 (例如 Google Speakers 总是使用 8.8.8.8)。 您可以使用此选项劫持查询，以获得一个假地址。
# hijack-dns = 8.8.8.8:53, 1.1.1.1:53
#
# TCP Force HTTP Hosts
# 让 Surge 把 TCP 连接当作 HTTP 请求来处理。 Surge HTTP 引擎将处理这些请求，所有的高级功能，如捕获、重写和脚本等都可以使用。
# KOOWO - 119.18.193.135, 122.14.246.33, 123.59.31.1, 175.102.178.52
# TencentVideo/Youku/iQiyi - 116.253.24.*, 124.193.*, 124.14*, 119.79*, 175.6.26.*, 211.162.*, 220.112.* 220.169.153.*
# force-http-engine-hosts = *.ott.cibntv.net, 119.18.193.135, 122.14.246.33, 123.59.31.1, 175.102.178.52, 116.253.24.*, 124.193.*, 124.14*, 119.79*, 175.6.26.*, 211.162.*, 220.112.* 220.169.153.*
#
# VIF Excluded Routes
# Surge VIF 只能处理 TCP 和 UDP 协议。使用此选项可以绕过特定的 IP 范围，允许所有流量通过。
tun-excluded-routes = 0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.168.0.0/16, 192.88.99.0/24, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32
#
# VIF Included Routes
# 默认情况下，Surge VIF 接口会声明自己是默认路由。但是，由于 Wi-Fi 接口的路由较小，有些流量可能不会通过 Surge VIF 接口。使用此选项可以添加一条较小的路由。
# tun-included-routes = 192.168.1.12/32

# 排除简单主机名
exclude-simple-hostnames = true

# 新增参数 udp-policy-not-supported-behaviour 参数用于控制当 UDP 流量被匹配到一个不支持 UDP 转发的策略时的行为
# DIRECT：回退到 DIRECT 策略（默认）
# REJECT：回退到 REJECT 策略
# 如果没有代理服务器支持 UDP 转发，可修改为 DIRECT 或注释掉，但需注意同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险 (打游戏建议使用 DIRECT)
# udp-policy-not-supported-behaviour = REJECT

# Network Framework
# network-framework = false

# DNS 设置
# 从 /etc/hosts 读取 DNS 记录
read-etc-hosts = true
# 强制使用特定的 DNS 服务器
dns-server = 223.5.5.5, 119.29.29.29, system
# 加密DNS协议DOH DoQ H3等，一般不建议使用。
# encrypted-dns-server = https://dns.alidns.com/dns-query
# encrypted-dns-server = https://doh.pub/dns-query
# encrypted-dns-server = https://dns.google/dns-query
# encrypted-dns-server = https://cloudflare-dns.com/dns-query
# encrypted-dns-server = https://dns.adguard.com/dns-query
# encrypted-dns-server = https://public.dns.iij.jp/dns-query
# 实验性 DNS ove QUIC 支持
# encrypted-dns-server = quic://dns.adguard.com
# encrypted-dns-server = h3://223.5.5.5/dns-query
# encrypted-dns-format = wireformat
# encrypted-dns-format = json
# encrypted-dns-follow-outbound-mode = true
# 新增参数 doh-skip-cert-verification = true ，用于关闭 DOH 的服务端证书验证
# encrypted-dns-skip-cert-verification = true
# If use-local-host-item-for-proxy is true, Surge sends the proxy request with the IP address defined in the [Host] section, instead of the original domain.
# 代理请求本地 DNS 映射
# use-local-host-item-for-proxy = true


# 该段定义抓取流量的过滤 (该部分建议直接在ui上进行操作，此处仅对配置项做解释)
[Replica]
# ---(实验性功能)---
# 0 为关闭，1 为开启
# 隐藏所有发往 *.Apple.com 和 *.icloud.com 的请求
# 该选项只是在截取结果中隐藏了请求，请求依旧会被出站模式和其他功能影响
hide-apple-request = 1
# 隐藏崩溃追踪器(如Firebase，Bugsnag，Crashlytics)的请求
# 过多请求可能导致最近请求列表被大量占据
hide-crash-reporter-request = 1
# 隐藏 UDP 会话
hide-udp = 0
# 关键词过滤器
# none (关闭关键词过滤器) / whitelist (仅记录包含关键字的请求) / blacklist (仅记录不包含关键字的请求) / pattern (匹配通配符的请求)
keyword-filter-type = none
# 关键词
# keyword-filter-disabled = 
# keyword-filter = 


# 该段定义可用的代理策略
# 针对所有类型代理的选项:
#   interface: 可选 (默认值: null)
#   强制使用特定的出口地址或网络设备 (仅 macOS 版可用)
#   例如: ProxyHTTP = http, 1.2.3.4, 443, username, password, interface = en2
#   en1 = direct, interface = en1
# 针对启用了 TLS 的代理的选项:
#   skip-common-name-verify: "true" 或 "false" (默认值: false)
#   如果启动该选择, Surge 不会校验证书名是否符合
[Proxy]
# 写法是 策略名 = 代理类型,代理地址，端口号，用户名，密码
# 不同的类型填写的具体项目会有差异，建议在 UI 界面中填写
# 策略名不可重复，策略名须先定义才能在其它部分引用
# Proxy01 = https,adc-us.com,443,username = 用户名,password = 密码
# Proxy02 = ss, abc-kt.com, 443, encrypt-method = rc4-md5, password = 密码
# Proxy03 = socks5, abc-cn.com, 443, username = 用户名, password = 密码

# Proxy chain：可以通过一个代理跳板使用另一个代理，可以无限嵌套使用。
# ProxyB = trojan, example.com, 443, password=password1, skip-cert-verify=true, underlying-proxy=ProxyA/Proxies
# Surge <--> ProxyA/Proxies <--> ProxyB <--> Internet

# 利用服务器定义的方式实现的广告通过选择
#   Ad-Pass 不拦截广告
#   Ad-Block 直接拒绝
#   Ad-GIF 返回一个透明像素图
# Ad-Pass = direct
# Ad-Block = reject
# Ad-GIF = reject-tinygif

# - 新增策略参数 hybrid = true，开启后，在 WiFi 与数据网络同时存在的情况下，将并发使用两个网络去建立 TCP 连接，并选择最快完成的通道。
# - 新增内置策略 HYBRID，其定义等价为 HYBRID = direct, hybrid=true，可为需要在意延迟的应用配置，如竞技游戏。
# - hybrid=true 描述在连接内网地址时会被自动忽略。
# - 可通过请求的 Notes 和 Local Address 确认连接通道。
# - 修正 WiFi Assist 功能未能正常工作的问题。
# WiFi Assist 和 hybrid=true 的区别：
# - WiFi Assist：使用 WiFi 尝试建立连接后，如果一秒钟内仍未完成，则再使用数据网络尝试连接。选择最先完成的 TCP 连接。
# - hybrid=true：直接并发建立两个 TCP 连接，选择最先完成的 TCP 连接。
# - 新增 IPv4 & IPv6 偏好参数，对于所有策略，可附带参数 ip-version=，可选参数有：
#   * dual：默认行为，在双栈网络上将并发使用 v4 和 v6 地址并选取最快速的结果。
#   * prefer-v4：若DNS解析获得了 A 与 AAAA 记录，优先使用 A 记录，否则使用 AAAA 记录。
#   * prefer-v6：若DNS解析获得了 A 与 AAAA 记录，优先使用 AAAA 记录，否则使用 A 记录。
#   * v4-only：仅使用 A 记录，若未获得A记录则失败。
#   * v6-only：仅使用 AAAA 记录，若未获得 AAAA 记录则失败。
# 可配合 direct 类型策略使用，如：IPV6-ONLY = direct, ip-version=v6-only
# DIRECT = direct, ip-version=prefer-v4
# HYBRID = direct, hybrid=true, ip-version=dual

# Direct = direct, test-url=http://wifi.vivo.com.cn/generate_204, test-udp=baidu.com@119.29.29.29


# 该段定义可用的策略组
# 有 5 种策略组类型: "select", "url-test"，"fallback"，"ssid" 和 "load-balance"
# select: 具体哪个子策略将被使用，由用户界面上进行选择。
# url-test: 具体哪个子策略将被使用，通过测试到具体 URL 的访问速度选择
#   参数:
#   url: 必填
#   测试时用到的目标 URL.
#   interval: 可选, 秒 (默认值: 600s)
#   每次测试的间隔时间。指定在多长时间后，上次的测试结果将被抛弃。
#   所有类 url-test 组的测试时机为：
#     首次使用时进行测试；
#     后续使用该策略组时，如果上次测试的时间间隔已大于 interval 设置时间，则再次触发测试；
#     当目前选中策略产生不可恢复性错误时，直接触发测试。
#     网络切换后，将清理之前的测试结果，当策略组被使用时触发首次测试。
#   tolerance: 可选, 毫秒 (默认值: 100ms)
#     只有当新的优选线路，比原优选线路的响应时间，大于该值的时候，才会触发线路变更。
#   timeout: 可选, 秒 (默认值: 5s)
#     测试的最长等待时间，如果某策略在该时间后依然没有完成，放弃该策略。
#   evaluate-before-use: 可选，true or false
#     默认情况下，在首次使用策略组时将直接使用子策略中的第一个策略，同时触发延迟测试。如果配置了 evaluate-before-use=true，那么首次使用时将等待测试完毕后选择最佳策略
# fallback: 具体哪个子策略将被使用，通过测试到具体 URL 的可用性决定
#   与 url-test 组基本一致，区别是只关心子策略是否可用而不关心具体延迟，然后从可用策略中选择靠前的策略。可以通过调小 timeout 参数将缓慢线路也标记为不可用。该类型没有 tolerance 参数。
# ssid: 具体哪个子策略将被使用，根据 Wi-FI 的 SSID 决定
#   参数:
#   default: 必填
#   默认策略。
#   cellular: 可选
#   在数据网络下的策略。 若不填，那么默认策略将被使用。
# load-balance 策略组
# 负载均衡组，随机从子策略中选取一个策略使用。
# 当配置了 url 参数时，会按照 fallback 组的行为进行可用性检查，然后仅从可用的子策略中随机选取。
# 除 url、timeout、interval外，还有一个参数：
#   • persistent：当 persistent=true 时，对于同一目标主机名，将尽量使用同一个策略。避免因出口 IP 不同而触发目标网站的风险控制。但当可用性改变时可能导致策略变化。
# hidden=1，隐藏策略组
[Proxy Group]
# Proxy = select, Auto, Proxy01 , Proxy02, Proxy03
# 以代理服务器的选择模式实现广告的通过选择
# AdBlock = select, Ad-GIF,Ad-Block,Ad-Pass
# 场景选择模式
#   缺省走 Auto；蜂窝网络走 Proxy01；
#   接入 Wi-Fi 时走 Auto（SSIDNAME 改成需要判断的 Wi-Fi 的名称）
# Scene = ssid, default = Auto, cellular = Proxy01, "SSIDNAME" = Auto
# 自动选择代理
# Auto = fallback, Proxy01, Proxy02, Proxy03, url = http://www.bing.com/
# Video 策略群组的写法，将用于视频服务的代理放在一个群组（Netflix会判断代理的地域）
# Video = url-test, policy-path=groupHK.list, url = http://www.bing.com/
# Video 策略组的简单写法，两种写法可选一个
# Video = url-test, Proxy02, Proxy03, url = http://www.bing.com


[Rule]
# 规则定义部分
# 触发通知，匹配规则时弹出 notification-text 定义的字符串
# DOMAIN-SUFFIX,scomper.me,DIRECT,notification-text="Welcome to scomper's blog."
# AND,((SRC-IP,10.211.55.3), (DOMAIN-SUFFIX,scomper.me)),Proxy
# Rulesets，规则集（每 24 小时后台自动更新）
# 规则集包含多条子规则，可以是另一个本地 list 文件，或者是一个 URL
# 内置了两个规则集：SYSTEM 和 LAN
# 内置规则集的具体内容可在 Surge Mac 设置界面查看
# RULE-SET,SYSTEM,DIRECT
# RULE-SET,LAN,DIRECT


# 该段定义本地 DNS 记录
# 该功能等同于 /etc/hosts，加上了泛解析和别名支持。
[Host]
# DNS 全部交给系统处理
# * = server:syslib
# 本地值
# 特定 DNS 服务器
# *.tw = server:1.1.1.1
# testflight.apple.com = server:8.8.8.8
# router.asus.com = server:syslib
# *.tmall.com = server:223.5.5.5
# *.taobao.com = server:223.5.5.5
# *.alicdn.com = server:223.5.5.5
# *.aliyun.com = server:223.5.5.5
# *.alipay*.com = server:223.5.5.5
# *.alibaba*.com = server:223.5.5.5
# *.alimama*.com = server:223.5.5.5
# *.qq.com = server:119.29.29.29
# *.tencent.com = server:119.29.29.29
# *.weixin.com = server:119.29.29.29
# *.qpic.cn = server:119.29.29.29
# *.jd.com = server:119.29.29.29
# *.bilibili.com = server:119.29.29.29
# hdslb.com = server:119.29.29.29
# *.163.com = server:119.29.29.29
# *.126.com = server:119.29.29.29
# *.126.net = server:119.29.29.29
# *.127.net = server:119.29.29.29
# *.netease.com = server:119.29.29.29
# *.10010.com = server:119.29.29.29
# *.unicompayment.com = server:119.29.29.29
# *.vercel.app = server:119.29.29.29
# *.vercel.com = server:119.29.29.29
# *.ximalaya.com = server:119.29.29.29
# *.baidu.com = server:119.29.29.29
# *.bdstatic.com = server:119.29.29.29


# 该段定义针对 HTTP 请求的 URL 重定向规则
# 有两种重定向方式: "header" 和 "302"
# Header 模式
# Surge 会修改发出的 http header，必要时还会修改 Host 字段。客户端将
# 感知不到这个重定向过程. 不支持重定向到一个 HTTPS 的地址。
# 302 模式
# Surge 直接简单的返回一个 302 重定向回应。
[URL Rewrite]


# 重定向 HTTP 请求或者篡改请求 Header
# Surge 可以在请求被发往目标服务器之前篡改请求的 Header
[Header Rewrite]


[Map Local]


# 该段仅在 iOS 版本下生效。 
# 你可以为某些特定的 WiFi 网络设置设置参数
# 参数:
# suspend: "true" 或 "false"
# 在该网络下 Surge 将暂停工作。 请注意，如果你在该网络下直接启动 Surge，那么 
# Surge 依然会工作。只有当从其他网络切换到该网络时，Surge 才会暂停。
[SSID Setting]
# 连接到 Apple Store 的 Wi-Fi网络时 Surge 暂停工作
# 需要 Web 验证登录的 Wi-Fi 网络以及路由器已经科学上网的 Surge 挂起
# "Apple Store" suspend = true
# 计费网络模式，当连接到热点名为 iPhone X 的网络时自动切换为计费模式
# "iPhone X" cellular-mode = true

# 新增 cellular-fallback 参数，可用于单独控制一些 Wi-Fi 下的 all-hybrid 和 wifi-assist 行为
# 使用 [General] 中的 all-hybrid 和 wifi-assist 配置
# cellular-fallback=default
# cellular-fallback=off 关闭 all-hybrid 和 wifi-assist
# cellular-fallback=hybrid 开启 all-hybrid 
# cellular-fallback=wifi-assist 开启 wifi-assist

# SSID Setting 段和 SUBNET 规则的表达式升级：
#   可使用 MCCMNC:100-200 匹配特定数据网络
#   可使用 SSID:value 特定匹配 SSID，支持通配符
#   可使用 BSSID:value 特定匹配 BSSID，支持通配符
#   可使用 ROUTER:value 特定匹配路由地址
#   可使用 TYPE:WIFI 匹配所有 WiFi 网络
#   可使用 TYPE:CELLULAR 匹配所有数据网络
#   可使用 TYPE:WIRED 匹配所有有线网络（iOS 上支持 USB 网络适配器）
#   如无前缀则按照旧版规则匹配 SSID、BSSID、路由地址
# SSID Setting 段内容从上至下依次匹配，匹配到第一个结果后立刻终止
# 中国用户若使用 TFO 建议强制关闭数据网络上的 TFO，避免产生问题，然后在已测试过的网络上强制开启。只有这样配置后方可充分享受 TFO 的优势。
# 强制关闭数据网络 TFO
# TYPE:CELLULAR tfo-behaviour=force-disabled
# "My Home" tfo-behaviour=force-enabled


[MITM]
# 跳过服务端证书验证
skip-server-cert-verify = true
# 用于 TCP 连接
# tcp-connection = true
# 开启 MITM over HTTP/2
h2 = true
# 可以指定一个单一的IP地址或使用 CIDR 设置特定设备启用 MitM，均支持 IPv4 和 IPv6
# client-source-address = 0.0.0.0/0, ::/0
# 如针对某个设备不启用可使用
# client-source-address = -192.168.1.2, 0.0.0.0/0
hostname = 
ca-passphrase = 
ca-p12 = 


[Script]
