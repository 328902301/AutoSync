# Sample Quantumult Configuration eng
#
# Line started with ";" or "#" or "//" shall be comments.
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
#
# SS-URI scheme can be found at https://shadowsocks.org/en/spec/SIP002-URI-Scheme.html
#
# Quantumult uses HEAD method send HTTP request to the server_check_url to test the proxy's status, the results should be two latencies, the first one is TCP handshake to the proxy server, the second one is the total time that Quantumult successfully received the HTTP response from the server_check_url. The lightning icon means that the TCP fast open is successful. If the server in section [server_local] or section [server_remote] has its own server_check_url, its own server_check_url will be used instead of the server_check_url in section [general].
#
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试（测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间），来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
#
# The dns_exclusion_list contains the domains that disabled the placeholder IP(198.18.*), domains that are not in the dns_exclusion_list all have placeholder IP enabled and have turned on the resolve-on-remote setting.
#
# The udp_whitelist contains the destination UDP port, empty means all the ports are in udp_whitelist. UDP packtes(through Quantumult tunnel interface) with destination ports that are not in the udp_whitelist will be dropped. This setting has nothing to do with the policy and has nothing to do with the proxy(server) port either.
#
# The traffic to excluded_routes will not be handled by Quantumult. It is better to reboot your device after modification.
#
# The resource_parser_url sample can be found at https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
#
# The DNS servers fetched from current network(system) will always be used for better performance(you can disable this feature by using "no-system", but you should at least add one customized DNS server like "server = 223.5.5.5").
# When no-ipv6 is set, the DNS module of Quanumult X Tunnel will directly let the AAAA query fail but still allow the A query from IPv6 DNS servers.
# The result of query will only be used for evaluating filter or connecting through direct policy, when connecting through server the result will not be used and Quantumult will never know the destination IP of related domain.
# When doh-server is set, all other regular(has no specific domain related to it) servers will be ignored.
# When multiple doh-server(s) are set, only the first will be used.
# When the doh-server in use is NOT based on HTTP/2, the DoH will be temporarily disabled and the regular servers will be used until next start of the VPN connection.
# Specially directly set 127.0.0.1 for a domain is not allowed in here. if you want some domain(eg: example.com) to be 127.0.0.1, just add "host, example.com, reject" to the "filter_local" section. The reject action will return DNS response with 127.0.0.1 to the query.
#
# static policy points to the server in candidates you manually selected.
# available policy points to the first available server in candidates based on server_check_url(concurrent url latency test will be immediately launched when the policy has been triggered and the policy result is unavailable. If no network request is taking the policy at that time, that means the policy is in the idle state and the test won't be launched even if the server is down. At that time you can update the server status by manually launching the test, but it doesn't make any sense).
# round-robin policy points to the next server in candidates for next connection.
# url-latency-benchmark policy points to the server with the best (the param tolerance ms will be considered) url latency result. When the user starts the url test in Quantumult X container app manually, the policy result will also be updated. This type policy has a param called check-interval (seconds), if this policy has been activated by any request then the interval will be considered.
# ssid policy points to the server depending on the network environment.
# Param resource-tag-regex and server-tag-regex only work for static, available and round-robin type of polices.
#
# Params "tag" and "enabled" are optional.
# The default sync interval for all kinds of remote resources is 86400 seconds.
# You can set update-interval = 172800 to customize your auto sync interval(seconds), negative number means disable auto sync.
#
# Params "tag", "force-policy" and "enabled" are optional.
# When there is a force-policy, then the policy in filter of remote resource will be ignored and the force-policy will be used.
#
# Only obfs = http, obfs = ws, obfs = wss can have optional "obfs-uri" field.
# The obfs-host param in wss will be used for TLS handshake and for HTTP header host field, if obfs-host is not set for wss the server address will be used.
# The UDP relay for VMess and Trojan is not currently supported.
# When using obfs = ws and obfs = wss the server side can be deployed by v2ray-plugin with mux = 0 or by v2ray-core.
# The obfs plugin tls1.2_ticket_auth has one more RTT than tls1.2_ticket_fastauth and obfs tls, you'd better use tls1.2_ticket_fastauth instead.
# The method chacha20-ietf-poly1305 and chacha20-poly1305 have the same effect in VMess configuration.
#
# Params "tag" and "enabled" are optional.
#
# Optional field tls13 is only for shadowsocks obfs = wss
# shadowsocks = example.com:80, method = chacha20, password = pwd, obfs = http, obfs-host = bing.com, obfs-uri = /resource/file, fast-open = false, udp-relay = false, server_check_url = http://www.apple.com/generate_204, tag = ss-01
# shadowsocks = example.com:80, method = chacha20, password = pwd, obfs = http, obfs-host = bing.com, obfs-uri = /resource/file, fast-open = false, udp-relay = false, tag = ss-02
#　shadowsocks = example.com:443, method = chacha20, password = pwd, obfs = tls, obfs-host = bing.com, fast-open = false, udp-relay = false, tag = ss-03
;shadowsocks = example.com:443, method = chacha20, password = pwd, ssr-protocol = auth_chain_b, ssr-protocol-param = def, obfs = tls1.2_ticket_fastauth, obfs-host = bing.com, tag = ssr
;shadowsocks = example.com:80, method = aes-128-gcm, password = pwd, obfs = ws, fast-open = false, udp-relay = false, tag = ss-ws-01
;shadowsocks = example.com:80, method = aes-128-gcm, password = pwd, obfs = ws, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = ss-ws-02
;shadowsocks = example.com:443, method = aes-128-gcm, password = pwd, obfs = wss, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = ss-ws-tls-01
;shadowsocks = example.com:443, method = aes-128-gcm, password = pwd, obfs = wss, obfs-uri = /ws, tls13 = true, fast-open = false, udp-relay = false, tag = ss-ws-tls-02
#
# Optional field tls13 is only for vmess obfs = over-tls and obfs = wss
# vmess = example.com:80, method = none, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open = false, udp-relay = false, tag = vmess-01
# vmess = example.com:80, method = aes-128-gcm, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open = false, udp-relay = false, tag = vmess-02
# vmess = example.com:443, method = none, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs = over-tls, fast-open = false, udp-relay = false, tag = vmess-tls-01
# vmess = 192.168.1.1:443, method = none, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs = over-tls, obfs-host = example.com, fast-open = false, udp-relay = false, tag = vmess-tls-02
# vmess = 192.168.1.1:443, method = none, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs = over-tls, obfs-host = example.com, tls13 = true, fast-open = false, udp-relay = false, tag = vmess-tls-03
# vmess = example.com:80, method = chacha20-poly1305, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs = ws, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = vmess-ws-01
# vmess = 192.168.1.1:80, method = chacha20-poly1305, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs = ws, obfs-host = example.com, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = vmess-ws-02
# vmess = example.com:443, method = chacha20-poly1305, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs = wss, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = vmess-ws-tls-01
# vmess = 192.168.1.1:443, method = chacha20-poly1305, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs = wss, obfs-host = example.com, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = vmess-ws-tls-02
# vmess = 192.168.1.1:443, method = chacha20-poly1305, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs = wss, obfs-host = example.com, obfs-uri = /ws, tls13 = true, fast-open = false, udp-relay = false, tag = vmess-ws-tls-03
#
# Optional field tls13 is only for http over-tls = true
# The obfs field is not supported for http
# http = example.com:80,fast-open = false, udp-relay = false, tag = http-01
# http = example.com:80, username = name, password = pwd, fast-open = false, udp-relay = false, tag = http-02
# http = example.com:443, username = name, password = pwd, over-tls = true, tls-host = example.com, tls-verification = true, fast-open = false, udp-relay = false, tag = http-tls-01
# http = example.com:443, username = name, password = pwd, over-tls = true, tls-host = example.com, tls-verification = true, tls13 = true, fast-open = false, udp-relay = false, tag = http-tls-02
#
# Optional field tls13 is only for trojan over-tls = true
# The obfs field is not supported for trojan
# trojan = example.com:443, password = pwd, over-tls = true, tls-verification = true, fast-open = false, udp-relay = false, tag = trojan-tls-01
# trojan = example.com:443, password = pwd, over-tls = true, tls-verification = true, tls13 = true, fast-open = false, udp-relay = false, tag = trojan-tls-02
# trojan = 192.168.1.1:443, password = pwd, over-tls = true, tls-host = example.com, tls-verification = true, fast-open = false, udp-relay = false, tag = trojan-tls-03
# trojan = 192.168.1.1:443, password = pwd, over-tls = true, tls-host = example.com, tls-verification = true, tls13 = true, fast-open = false, udp-relay = false, tag = trojan-tls-04
#
# The "reject" returns HTTP status code 404 with no content.
# The "reject-200" returns HTTP status code 200 with no content.
# The "reject-img" returns HTTP status code 200 with content of 1px gif.
# The "reject-dict" returns HTTP status code 200 with content of empty json object.
# The "reject-array" returns HTTP status code 200 with content of empty json array.
# The "request-header" works for all the http headers not just one single header, so you can match two or more headers including CRLF in one regular expression.
# The "echo-response" just reply back the body of the content type response for matched URL, the body file should be saved at "On My iPhone - Quantumult X - Data".
# The length and encoding related HTTP header fields will be automatically processed by Quantumult if the "rewrite" is body related, so you should not handle them by yourself. The max supported original response body size is 4 MB(iOS 13+) for script-response-body.
# The body related rewrite will not be executed if the body is empty.
# When using javascript in rewrite, you can use those objects: $request, $response, $notify(title, subtitle, message), console.log(message) and Quantumult's built-in objects all have prefix "$".
# Supports: $request.scheme, $request.method, $request.url, $request.path, $request.headers, $response.statusCode, $response.headers, $response.body
# The $notify(title, subtitle, message) will post iOS notifications if Quantumult notification has been enabled.
# The $prefs is for persistent store: $prefs.valueForKey(key), $prefs.setValueForKey(value, key), $prefs.removeValueForKey(key), $prefs.removeAllValues().
# The console.log(message)  will output logs to Quantumult log file.
# The setTimeout(function() { }, interval) will run function after interval(ms).
# The scripts for script-request-header, script-request-body, script-response-header, script-response-body, script-echo-response and script-analyze-echo-response should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X
# The difference between script-analyze-echo-response and script-echo-response is that the former will wait for the request body.
#
# The $task.fetch() compose a HTTP request and deal with the response, only text body is supported. A $task.fetch() can be embeded in the completion handler of another $task.fetch(), if you want serial requests not current requests.
# The scripts should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
# The default HTTP request timeout is 10 seconds.
#
# Supports 5 or 6 fields of cron excluding the command field.
#
# Deploy a local HTTP server and use JavaScript for data processing.
# The input variables are $reqeust.url, $reqeust.path, $reqeust.headers, $reqeust.body
# The output using $done like $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") to sendback the response.
# Further more you can use a signature or any other validation method to verify if the request is legitimate.
# After the deployment you should visit it through http://127.0.0.1:9999/your-path/your-api/.
#
# Only the TLS SNI or destination address in "hostname" will be handled by MitM.
#
# By default when MitM enabled for the HTTPS request, Quantumult X fetches the certificate(the certificate will be cached) from the original site, keeps most of the needed original certificate informations and re-signs it using the MitM root CA, this is the recommended(and more compatible) way of creating MitM certificate.
# Occasionally some users like to debug the HTTPS request that its domain does not exist, so the original certificate doesn't even exist. This is when the param simple_cert_hostname comes up. The HTTPS request with TLS SNI names that are in the simple_cert_hostname(and hostname) will using the pure local generated MitM  certificate.
#
# Important !!! You should always keep your CA passphrase and p12 private.
#
#
#
#
#
#
# Sample Quantumult Configuration chs
#
# 以 ";" 或 "#" 或 "//" 开头的行为注释行，去掉前面的符号，该行才有效。
#
# general 模块内为一些通用的设置参数项。
# 【general】
# Quantumult X 会对 server_check_url 指定的网址进行相应测试，以确认节点的可用性。
# 你同样可以在 server_local/remote 中，为节点、订阅单独指定 server_check_url 参数。
# 【server_check_url】 = http://www.qualcomm.cn/generate_204
#
# 资源解析器，可用于自定义各类远程资源的转换，如节点、规则 filter、复写 rewrite 等，url 地址可远程&本地。位于【本地&iCloud/Quantumult X/Scripts】目录下。
# 下行为 KOP-XIAO 解析器，具体内容直接参照链接里的使用说明。
# 【resource_parser_url】 = https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js
#
# 【geo_location_checker】用于节点页面的节点信息展示，可完整自定义展示内容与方式。
# 下行为 KOP-XIAO 所使用的 api 及获取、展示节点信息的 js 。
# 【geo_location_checker】 = http://ip-api.com/json/?lang = zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js
#
# 运行模式模块，【running_mode_trigger】设置，即根据网络自动切换 分流/直连/全局代理 等模式。
# 【running-mode-trigger】模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活。
#
# 【running_mode_trigger】 = filter, filter, asus-5g:all_direct, asus: all_proxy
# 上述写法，前两个 filter 表示 在 4G 网络跟一般 Wi-Fi 下，走 filter(分流)模式，asus-5g 则切换为全局直连，asus 切换为全局代理。
# 如需使用，相应 SSID 换成你自己 Wi-Fi 名即可。
#
# 【ssid_suspended_list】，让 Quantumult X 在特定 Wi-Fi 网络下暂停工作(仅 task 模块会继续工作)，多个 Wi-Fi 用 “,” 连接。
# 【ssid_suspended_list】 = Asus, Shawn-Wifi
#
# 【dns exclusion list】中的域名将不使用 fake-ip 方式. 其它域名则全部采用 fake-ip 及远程解析的模式。
# 【dns_exclusion_list】 = *.qq.com, qq.com
#
# UDP 白名单，留空则默认所有为端口。不在 UDP 白名单列表中的端口，将被丢弃处理。
# 【udp_whitelist】 = 53, 123, 1900, 80-443
#
# 下列表中的内容将不经过 Quantumult X 的处理。
# 【excluded_routes】 = 192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
# 【icmp_auto_reply】 = true
#
# 【dns】
# 指定的 DNS 服务器。
# 【server】 = 114.114.114.114
# 【server】 = 202.141.176.93 
# 【server】 = 202.141.178.13
# 【server】 = 117.50.10.10
# 【server】 = 223.5.5.5
# 【server】 = 119.29.29.29:53
# 【server】 = 119.28.28.28
# 指定域名解析 DNS 。
# 【server】 = /*.taobao.com/223.5.5.5
# 【server】 = /*.tmall.com/223.5.5.5
# 【server】 = /*.alipay.com/223.5.5.5
# 【server】 = /*.alicdn.com/223.5.5.5
# 【server】 = /*.aliyun.com/223.5.5.5
# 【server】 = /*.jd.com/119.28.28.28
# 【server】 = /*.qq.com/119.28.28.28
# 【server】 = /*.tencent.com/119.28.28.28
# 【server】 = /*.weixin.com/119.28.28.28
# 【server】 = /*.bilibili.com/119.29.29.29
# 【server】 = /hdslb.com/119.29.29.29
# 【server】 = /*.163.com/119.29.29.29
# 【server】 = /*.126.com/119.29.29.29
# 【server】 = /*.126.net/119.29.29.29
# 【server】 = /*.127.net/119.29.29.29
# 【server】 = /*.netease.com/119.29.29.29
# 【server】 = /*.mi.com/119.29.29.29
# 【server】 = /*.xiaomi.com/119.29.29.29
# 【server】 = /*testflight.apple.com/23.76.66.98
# 【server】 = 8.8.8.8
# 【server】 = /example1.com/8.8.4.4
# 【server】 = /*.example2.com/223.5.5.5
# 【server】 = /example4.com/[2001:4860:4860::8888]:53
# 【address】 = /example5.com/192.168.16.18
# 【address】 = /example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
#
# 【task_local】
# 任务模块，可用于签到,天气话费查询等。
# js文件放于 iCloud&本机/Quantumult X/Scripts 路径下。TF版本可直接使用远程 js 链接。
#
# 【2 12 * * *】 sample.js, tag = 本地示范(左滑编辑，右滑执行), img-url = https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png
# 【13 12 * * *】 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-task.js, tag = 远程示范(点击缓存/更新脚本), img-url = https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png
# 从 “分” 开始的5位 cron 写法，具体 cron 表达式可自行 Google 。
# 比如上述语句 代表每天 12 点 2 分，自动执行一次；
# 【tag】参数为 task 命名标识；
# 【img-url】参数用于指定 task 的图标(108*108)。
#
# 以下为策略组【policy】部分
# 【static】策略组中，你需要手动选择想要的 节点&策略组 。
# 【available】策略组将按顺序选择你列表中第一个可用的节点。
# 【round-robin】策略组，将按列表的顺序轮流使用其中的节点。
# 【ssid】策略组，将根据你所设定的网络来自动切换节点/策略组。
# 【img-url】参数用于指定策略组图标，可远程&本地。位于【本地&iCloud/Quantumult X/Images】目录下。 (108*108 大小)。
# 【direct/proxy/reject】则只能用本地图标，名字分别为 direct.png, proxy.png, reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)。
#
# 【policy】
# 【static】 = 🍎 苹果服务, direct, proxy, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Apple.png
# 【static】 = 💻 国外影视, proxy, direct, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/ForeignMedia.png
# 【static】 = 📽 国内视频, direct, proxy, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/DomesticMedia.png
# 【static】 = 🎬 YouTube, proxy, direct, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/YouTube.png
# 【static】 = 📺 Netflix, proxy, direct, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Netflix_Letter.png
# 【static】 = 🌏 国外网站, proxy,direct,🇭🇰️ 香港(正则示范), img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Global.png
# 【static】 = 🕹 终极清单,direct, proxy, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png
# 【static】 = 🇭🇰️ 香港(正则示范), server-tag-regex = 香港|🇭🇰️|HK|Hong, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/HK.png

# 【server-tag-regex】以及【resource-tag-regex】参数用于正则筛选来建立策略组。
# 具体可参见教程部分: https://shrtm.nu/DAFP
#
# 以下是 Quantumult X 的3普通种策略组类型写法。
# 【static】 = policy-name-1, Sample-A, Sample-B, Sample-C
# 【available】 = policy-name-2, Sample-A, Sample-B, Sample-C
# 【round-robin】 = policy-name-3, Sample-A, Sample-B, Sample-C
# 下面是ssid策略组示范。
# 【ssid】 = policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C
#
# 【tag】与【enabled】为可选参数，分别表示 “标签”及“开启状态”, true 为开启，false 关闭。
# 【update-interval】为更新时间参数，单位 秒, 默认更新时间为 24*60*60 = 86400 秒，也就是24小时。
# 【opt-parser = true/false】用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器。
#
# 服务器远程订阅
# 【server_remote】
# 远程服务器订阅模块，可直接订阅 SSR & SS 链接，以及 Quantumult X 格式的 vmess/trojan/https 订阅。
# 其它格式可用 opt-parser 参数开启解析器导入使用。
# 【img-url】参数用于指定图标，格式要求同样为 108*108 的 png 图片，可远程&本地。
# https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.txt#rename = [香港], tag = 示范(请先导入自己订阅/节点), update-interval = 86400, opt-parser = true,  img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Quantumult_X.png, enabled = true
# https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server-complete.txt, tag = 示范(导入后更新并删除示范),  img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Quantumult_X.png, enabled = true
#
# 支持 本地&iCloud 的节点文件，位于【本地&iCloud/Quantumult X/Profiles】目录下。
# 【servers.txt】, tag = 本地服务器, img-url = https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, enabled = false
#
# 规则分流远程订阅
# 【filter_remote】
# 远程分流模块，可使用【force-policy】来强制使用策略偏好, 替换远程规则内所指定的策略组。
# 同样的
# 【update-interval】为更新时间参数，单位 秒, 默认更新时间为 24*60*60 = 86400 秒，也就是24小时。
# 【opt-parser = true/false】用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器。
#
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Advertising.list, tag = 🚦去广告, update-interval = 86400, opt-parser = true, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Hijacking.list, tag = 🚫 运营商劫持, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/StreamingCN.list, force-policy = 📽 国内视频, tag = 📽 国内视频, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Video/Netflix.list, tag = 📺 Netflix, force-policy = 📺 Netflix, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Video/YouTube.list, tag = 🎬 YouTube, force-policy = 🎬 YouTube, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Streaming.list, tag = 💻 国外影视,force-policy = 💻 国外影视, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Global.list, tag = 🌍 国外网站, force-policy = 🌏 国外网站, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/Apple/Apple.list, tag =  Apple服务, force-policy = 🍎 苹果服务,enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/Apple/BlockiOSUpdate.list, tag =  屏蔽更新,enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/China.list, tag = 🐼 国内网站, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/ChinaIP.list, tag = 🇨🇳️ 国内IP池, enabled = true
#
# 支持 本地&iCloud 规则文件，位于【本地&iCloud/Quantumult X/Profiles】目录下。
# 【filter.txt】, tag = 本地分流, enabled = false
#
# 复写远程订阅
# 【rewrite_remote】
# 远程复写模块，内包含主机名 hostname 以及复写 rewrite 规则。
# 【update-interval】为更新时间参数，单位 秒, 默认更新时间为 24*60*60 = 86400 秒，也就是24小时。
# 【opt-parser = true/false】用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器。
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag = 神机复写(⛔️去广告), update-interval = 86400, opt-parser = false, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag = 神机复写(😄️通用), update-interval = 86400, opt-parser = false, enabled = true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Unlock/TikTokJP.conf, tag = 神机复写(🎵️TikTok-JP), update-interval = 86400, opt-parser = false, enabled = true
# Youtube premium 会员请勿开启此条
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag = 神机复写(🈲YouTube-AD) , update-interval = 86400, opt-parser = false, enabled = false
#
# 支持 本地&iCloud 的复写规则文件，位于【本地&iCloud/Quantumult X/Profiles】路径下。
# 【rewrite.txt】, tag = 本地复写, opt-parser = false, enabled = false
#
# 本地服务器部分
# 【server_local】
# 以下示范都是 ip(域名):端口。
# 比如 vmess-a.203.167.55.4:777 ，实际是 203.167.55.4:777。
# 前面的 ss-a，ws-tls这些，只是为了让你快速找到自己节点的类型。
# 实际使用时，请不要真的 傻乎乎的 写 vmess-a.203.167.55.4:777 这种。
#
# shadowsocks 以及 shadowsocksR 类型。
# shadowsocks = ss-a.example.com:80, method = chacha20, password = pwd, obfs = http, obfs-host = bing.com, obfs-uri = /resource/file, fast-open = false, udp-relay = false, server_check_url = http://www.apple.com/generate_204, tag = Sample-A
# shadowsocks = ss-b.example.com:80, method = chacha20, password = pwd, obfs = http, obfs-host = bing.com, obfs-uri = /resource/file, fast-open = false, udp-relay = false, tag = Sample-B
# shadowsocks = ss-c.example.com:443, method = chacha20, password = pwd, obfs = tls, obfs-host = bing.com, fast-open = false, udp-relay = false, tag = Sample-C
# shadowsocks = ssr-a.example.com:443, method = chacha20, password = pwd, ssr-protocol = auth_chain_b, ssr-protocol-param = def, obfs = tls1.2_ticket_fastauth, obfs-host = bing.com, tag = Sample-D
# shadowsocks = ws-a.example.com:80, method = aes-128-gcm, password = pwd, obfs = ws, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = Sample-E
# shadowsocks = ws-b.example.com:80, method = aes-128-gcm, password = pwd, obfs = ws, fast-open = false, udp-relay = false, tag = Sample-F
# shadowsocks = ws-tls-a.example.com:443, method = aes-128-gcm, password = pwd, obfs = wss, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = Sample-G
#
# vmess 类型。
# ws，wss(ws+tls), over-tls, tcp 
#
# ws 类型。
# vmess = ws-c.example.com:80, method = chacha20-ietf-poly1305, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host = ws-c.example.com, obfs = ws, obfs-uri = /ws, fast-open = false, udp-relay = false, tag = Sample-H
#
# wss(ws+tls) 类型。
# vmess = ws-tls-b.example.com:443, method = chacha20-ietf-poly1305, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host = ws-tls-b.example.com, obfs = wss, obfs-uri = /ws, tls-verification = true,fast-open = false, udp-relay = false, tag = Sample-I
#
# tcp 类型。
# vmess = vmess-a.example.com:80, method = aes-128-gcm, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open = false, udp-relay = false, tag = Sample-J
# vmess = vmess-b.example.com:80, method = none, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open = false, udp-relay = false, tag = Sample-K
#
# over-tls 类型。
# vmess = vmess-over-tls.example.com:443, method = none, password = 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host = vmess-over-tls.example.com, obfs = over-tls, tls-verification = true, fast-open = false, udp-relay = false, tag = Sample-L
#
# http(s) 类型。
# http = http.example.com:80, username = name, password = pwd, fast-open = false, udp-relay = false, tag = http
# http = https.example.com:443, username = name, password = pwd, over-tls = true, tls-verification = true, tls-host = example.com, tls-verification = true, fast-open = false, udp-relay = false, tag = http-tls
#
# trojan 类型。
# trojan = example.com:443, password = pwd, over-tls = true, tls-verification = true, fast-open = false, udp-relay = false, tag = trojan-tls-01
# trojan = 192.168.1.1:443, password = pwd, over-tls = true, tls-host = example.com, tls-verification = true, fast-open = false, udp-relay = false, tag = trojan-tls-02
#
# 本地分流规则(对于完全相同的某条规则，本地的将优先生效)。
# 【filter_local】
# 【user-agent】, ?abc*, proxy
# 【host】, www.google.com, proxy
# 【host-keyword】, adsite, reject
# 【host-suffix】, googleapis.com, proxy
# 【ip-cidr】, 10.0.0.0/8, direct
# 【ip-cidr】, 127.0.0.0/8, direct
# 【ip-cidr】, 172.16.0.0/12, direct
# 【ip-cidr】, 192.168.0.0/16, direct
# 【ip-cidr】, 224.0.0.0/24, direct
# 已采用 ip 池数据，因此注释掉 geoip cn
# 【geoip】, cn, direct
#
# 不在上述规则中(远程以及本地)的剩余请求，将走final 指定的节点/策略，这里即是 → 🕹 终极清单, 请根据自己的需求来选择直连或节点、策略
# 【final】, 🕹 终极清单
#
# 本地复写规则
# 【rewrite_local】
#
# 以下为 证书&主机名 部分
# 【mitm】
# 以下模块去掉 ";" 才生效
# 请自行在 APP 的UI中生成证书 并安装&信任
# 【skip_validating_cert】 = false
# 【force_sni_domain_name】 = false
# 【hostname】 = *.example.com, *.sample.com
# 【passphrase】 = 
# 【p12】 = 
#
#
#
#
#
#
# Sample Quantumult Configuration import


[general]
;profile_img_url = http://www.example.com/example.png
resource_parser_url = https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js
server_check_url = http://www.google.com/generate_204
geo_location_checker = http://ip-api.com/json/?lang = zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js
;running_mode_trigger = filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct
dns_exclusion_list = *.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me
;ssid_suspended_list = LINK_22E174, LINK_22E175
;udp_whitelist = 53, 123, 1900, 80-443
fallback_udp_policy = direct
;excluded_routes = 192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
;icmp_auto_reply = true


[dns]
;no-system
no-ipv6
;server = 8.8.8.8
server = 114.114.114.114
server = 117.50.10.10
server = 119.28.28.28
server = 119.29.29.29
server = 202.141.176.93 
server = 202.141.178.13
server = 223.5.5.5
server = /*.taobao.com/223.5.5.5
server = /*.tmall.com/223.5.5.5
server = /*.alipay.com/223.5.5.5
server = /*.alicdn.com/223.5.5.5
server = /*.aliyun.com/223.5.5.5
server = /*.jd.com/119.28.28.28
server = /*.qq.com/119.28.28.28
server = /*.tencent.com/119.28.28.28
server = /*.weixin.com/119.28.28.28
server = /*.bilibili.com/119.29.29.29
server = /hdslb.com/119.29.29.29
server = /*.163.com/119.29.29.29
server = /*.126.com/119.29.29.29
server = /*.126.net/119.29.29.29
server = /*.127.net/119.29.29.29
server = /*.netease.com/119.29.29.29
server = /*.mi.com/119.29.29.29
server = /*.xiaomi.com/119.29.29.29
;doh-server = https://dns.alidns.com/dns-query
;doh-server = https://223.6.6.6/dns-query
;server = 8.8.4.4:53, excluded_ssids = SSID1
;server = /example0.com/system
;server = /example1.com/8.8.4.4
;server = /*.example2.com/223.5.5.5
;server = /example4.com/[2001:4860:4860::8888]:53
;address = /example5.com/192.168.16.18
;address = /example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]


[policy]
static = 🍎 苹果服务, direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Apple.png
static = 💻 国外影视, proxy, direct, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/ForeignMedia.png
static = 📽 国内视频, direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/DomesticMedia.png
static = 🎬 YouTube, proxy, direct, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/YouTube.png
static = 📺 Netflix, proxy, direct, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Netflix_Letter.png
static = 🌏 国外网站, proxy, direct, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Global.png
static = 🕹 终极清单, direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png
;static = policy-name-1, Sample-A, Sample-B, Sample-C, img-url = http://example.com/icon.png
;available = policy-name-2, Sample-A, Sample-B, Sample-C
;round-robin = policy-name-3, Sample-A, Sample-B, Sample-C
;ssid = policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C
;static = policy-name-5, resource-tag-regex = ^sample, server-tag-regex = ^example, img-url = http://example.com/icon.png
;available = policy-name-6, resource-tag-regex = ^sample, server-tag-regex = ^example
;round-robin = policy-name-7, resource-tag-regex = ^sample, server-tag-regex = ^example
;url-latency-benchmark = policy-name-8, resource-tag-regex = ^sample, server-tag-regex = ^example, check-interval = 600, tolerance = 0


[server_remote]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.txt, tag = Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.txt, opt-parser = true, tag = Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.txt, update-interval = -1, tag = Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server-complete.txt, tag = Sample-02, as-policy = static, img-url = http://example.com/icon.png, enabled = false


[filter_remote]
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Unbreak.list, tag = 规则修正, force-policy = direct, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Guard/Advertising.list, tag = 广告拦截, force-policy = reject, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Guard/Hijacking.list, tag = 运营劫持, force-policy = reject, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Guard/Privacy.list, tag = 隐私保护, force-policy = reject, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/StreamingMedia/Streaming.list, tag = 国际媒体, force-policy = 💻 国外影视, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/StreamingMedia/StreamingSE.list, tag = 港台番剧, force-policy = 💻 国外影视, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Extra/Telegram/Telegram.list, tag = Telegram, force-policy = 💻 国外影视, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Global.list, tag = 全球加速, force-policy = 🌏 国外网站, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Extra/Apple/Apple.list, tag = 苹果服务, force-policy = 🍎 苹果服务, update-interval = 172800, opt-parser = ture, enabled = true
https://limbopro.com/Adblock4limbo.list, tag = 毒奶去广告, force-policy = 💻 国外影视, update-interval = 172800, opt-parser = true, enabled = false
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/China.list, tag = 国内网站, force-policy = 📽 国内视频, update-interval = 172800, opt-parser = ture, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Extra/ChinaIP.list, tag = ChinaIP, force-policy = 📽 国内视频, update-interval = 172800, opt-parser = ture, enabled = true
https://raw.githubusercontent.com/NobyDa/ND-AD/master/QuantumultX/AD_Block.txt, tag = NobyDa去广告, force-policy = 🌏 国外网站, update-interval = 172800, opt-parser = ture, enabled = false
https://raw.githubusercontent.com/NobyDa/ND-AD/master/QuantumultX/AD_Block_Plus.txt, tag = NobyDa去广告(严格), force-policy = 🌏 国外网站, update-interval = 172800, opt-parser = ture, enabled = false
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/filter.txt, tag = Sample, force-policy = your-policy-name, enabled = false


[rewrite_remote]
https://github.com/DivineEngine/Profiles/raw/master/Surge/Module/General.sgmodule, tag = General, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Module/Turn-Off-Google-Safesearch.sgmodule, tag = Off-GG-Safesearch, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Module/Wikiwand.sgmodule, tag = Wikiwand, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Module/Block/Advertising.sgmodule, tag = Advertising, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Module/Block/AdvertisingPlus.sgmodule, tag = AdvertisingPlus, update-interval = 172800, opt-parser = true, enabled = false
https://github.com/DivineEngine/Profiles/raw/master/Surge/Module/Block/SoftwareUpdate.sgmodule, tag = SoftwareUpdate, update-interval = 172800, opt-parser = true, enabled = true
https://github.com/DivineEngine/Profiles/raw/master/Surge/Module/Block/YouTubeAds.sgmodule, tag = YouTubeAds, update-interval = 172800, opt-parser = true, enabled = true
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/JS.conf, tag = JS, update-interval = 172800, opt-parser = true, enabled = true
https://limbopro.com/Adblock4limbo.conf, tag = 毒奶去广告, update-interval = 172800, opt-parser = true, enabled = true
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-import-rewrite.txt, tag = Sample, enabled = true


[server_local]


[filter_local]
;user-agent, ?abc*, proxy
;host, www.google.com, proxy
;host-keyword, adsite, reject
;host-suffix, googleapis.com, proxy
;ip6-cidr, 2001:4860:4860::8888/32, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 203.107.1.1/24, reject
ip-cidr, 224.0.0.0/24, direct
ip6-cidr, fe80::/10, direct
;geoip, cn, direct
final, proxy


[rewrite_local]
;^http://example\.com/resource1/1/ url reject
;^http://example\.com/resource1/2/ url reject-img
;^http://example\.com/resource1/3/ url reject-200
;^http://example\.com/resource1/4/ url reject-dict
;^http://example\.com/resource1/5/ url reject-array
;^http://example\.com/resource2/ url 302 http://example.com/new-resource2/
;^http://example\.com/resource3/ url 307 http://example.com/new-resource3/
;^http://example\.com/resource4/ url request-header ^GET /resource4/ HTTP/1\.1(\r\n) request-header GET /api/ HTTP/1.1$1
;^http://example\.com/resource4/ url request-header (\r\n)User-Agent:.+(\r\n) request-header $1User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36$2
;^http://example\.com/resource5/ url request-body "info":\[.+\],"others" request-body "info":[],"others"
;^http://example\.com/resource5/ url response-body "info":\[.+\],"others" response-body "info":[],"others"
;^http://example\.com/resource5/ url echo-response text/html echo-response index.html
;^http://example\.com/resource6/ url script-response-body response-body.js
;^http://example\.com/resource7/ url script-echo-response script-echo.js
;^http://example\.com/resource8/ url script-response-header response-header.js
;^http://example\.com/resource9/ url script-request-header request-header.js
;^http://example\.com/resource10/ url script-request-body request-body.js


[task_local]
;* * * * * sample-task.js
;* * * * * sample-task2.js, img-url = https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, tag = Sample, enabled = true


[http_backend]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-backend.js, tag = fileConverter, path = ^/example/v1/
;preference.js, tag = userPreference, path = ^/preference/v1/, img-url = https://example.com, enabled = true
;convert.js, tag = fileConverter, path = ^/convert/v1/


[mitm]
;passphrase = 
;p12 = 
;skip_validating_cert = false
;force_sni_domain_name = false
;hostname = *.example.com, *.sample.com, non-existed-domain.com, *.non-connected-domain.com
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
