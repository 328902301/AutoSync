using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace FilterLists.Api.Migrations
{
    public partial class InitialEfCoreSeeding : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.InsertData(
                table: "languages",
                columns: new[] { "Id", "Iso6391", "Iso6392", "Iso6392B", "Iso6392T", "Iso6393", "LocalName", "Name" },
                values: new object[,]
                {
                    { (short)1, "ab", "abk", "abk", "abk", "abk", "Аҧсуа", "Abkhaz" },
                    { (short)119, "ak", "aka", "aka", "aka", "aka", "Akan", "Akan" },
                    { (short)120, "sq", "sqi", "alb", "sqi", "sqi", "Shqip", "Albanian" },
                    { (short)121, "am", "amh", "amh", "amh", "amh", "አማርኛ", "Amharic" },
                    { (short)122, "ar", "ara", "ara", "ara", "ara", "العربية", "Arabic" },
                    { (short)123, "an", "arg", "arg", "arg", "arg", "Aragonés", "Aragonese" },
                    { (short)124, "hy", "hye", "arm", "hye", "hye", "Հայերեն", "Armenian" },
                    { (short)125, "as", "asm", "asm", "asm", "asm", "অসমীয়া", "Assamese" },
                    { (short)126, "av", "ava", "ava", "ava", "ava", "Авар", "Avaric" },
                    { (short)118, "af", "afr", "afr", "afr", "afr", "Afrikaans", "Afrikaans" },
                    { (short)127, "ae", "ave", "ave", "ave", "ave", "avesta", "Avestan" },
                    { (short)129, "az", "aze", "aze", "aze", "aze", "Azərbaycanca", "Azerbaijani" },
                    { (short)130, "bm", "bam", "bam", "bam", "bam", "Bamanankan", "Bambara" },
                    { (short)131, "ba", "bak", "bak", "bak", "bak", "Башҡортса", "Bashkir" },
                    { (short)132, "eu", "eus", "baq", "eus", "eus", "Euskara", "Basque" },
                    { (short)133, "be", "bel", "bel", "bel", "bel", "Беларуская", "Belarusian" },
                    { (short)134, "bn", "ben", "ben", "ben", "ben", "বাংলা", "Bengali" },
                    { (short)135, "bh", "bih", "bih", "bih", "bih", "भोजपुरी", "Bihari" },
                    { (short)137, "fo", "fao", "fao", "fao", "fao", "Føroyskt", "Faroese" },
                    { (short)128, "ay", "aym", "aym", "aym", "aym", "Aymar", "Aymara" },
                    { (short)117, "aa", "aar", "aar", "aar", "aar", "Afaraf", "Afar" },
                    { (short)116, "bi", "bis", "bis", "bis", "bis", "Bislama", "Bislama" },
                    { (short)115, "br", "bre", "bre", "bre", "bre", "Brezhoneg", "Breton" },
                    { (short)95, "ca", "cat", "cat", "cat", "cat", "Català", "Catalan" },
                    { (short)96, "ch", "cha", "cha", "cha", "cha", "Chamoru", "Chamorro" },
                    { (short)97, "ce", "che", "che", "che", "che", "Нохчийн", "Chechen" },
                    { (short)98, "ny", "nya", "nya", "nya", "nya", "Chichewa", "Chichewa" },
                    { (short)99, "zh", "zho", "chi", "zho", "zho", "中文", "Chinese" },
                    { (short)100, "cv", "chv", "chv", "chv", "chv", "Чӑвашла", "Chuvash" },
                    { (short)101, "kw", "cor", "cor", "cor", "cor", "Kernewek", "Cornish" },
                    { (short)102, "co", "cos", "cos", "cos", "cos", "Corsu", "Corsican" },
                    { (short)103, "cr", "cre", "cre", "cre", "cre", "ᓀᐦᐃᔭᐍᐏᐣ", "Cree" },
                    { (short)105, "cs", "ces", "cze", "ces", "ces", "Čeština", "Czech" },
                    { (short)106, "da", "dan", "dan", "dan", "dan", "Dansk", "Danish" },
                    { (short)107, "dv", "div", "div", "div", "div", "Divehi", "Divehi" },
                    { (short)108, "nl", "nld", "dut", "nld", "nld", "Nederlands", "Dutch" },
                    { (short)109, "dz", "dzo", "dzo", "dzo", "dzo", "རྫོང་ཁ", "Dzongkha" },
                    { (short)110, "en", "eng", "eng", "eng", "eng", "English", "English" },
                    { (short)111, "eo", "epo", "epo", "epo", "epo", "Esperanto", "Esperanto" },
                    { (short)112, "et", "est", "est", "est", "est", "Eesti", "Estonian" },
                    { (short)113, "bg", "bul", "bul", "bul", "bul", "Български", "Bulgarian" },
                    { (short)114, "ee", "ewe", "ewe", "ewe", "ewe", "Eʋegbe", "Ewe" },
                    { (short)138, "fj", "fij", "fij", "fij", "fij", "Na Vosa Vaka-Viti", "Fijian" },
                    { (short)139, "fi", "fin", "fin", "fin", "fin", "Suomi", "Finnish" },
                    { (short)140, "iu", "iku", "iku", "iku", "iku", "ᐃᓄᒃᑎᑐᑦ", "Inuktitut" },
                    { (short)141, "ja", "jpn", "jpn", "jpn", "jpn", "日本語", "Japanese" },
                    { (short)166, "ka", "kat", "geo", "kat", "kat", "ქართული", "Georgian" },
                    { (short)167, "de", "deu", "ger", "deu", "deu", "Deutsch", "German" },
                    { (short)168, "el", "ell", "gre", "ell", "ell", "Ελληνικά", "Greek" },
                    { (short)169, "gn", "grn", "grn", "grn", "grn", "Avañe'ẽ", "Guaraní" },
                    { (short)170, "gu", "guj", "guj", "guj", "guj", "ગુજરાતી", "Gujarati" },
                    { (short)171, "ht", "hat", "hat", "hat", "hat", "Kreyòl Ayisyen", "Haitian" },
                    { (short)172, "za", "zha", "zha", "zha", "zha", "Cuengh", "Zhuang" },
                    { (short)173, "ha", "hau", "hau", "hau", "hau", "هَوُسَ", "Hausa" },
                    { (short)174, "hz", "her", "her", "her", "her", "Otjiherero", "Herero" },
                    { (short)175, "hi", "hin", "hin", "hin", "hin", "हिन्दी", "Hindi" },
                    { (short)176, "ho", "hmo", "hmo", "hmo", "hmo", "Hiri Motu", "Hiri Motu" },
                    { (short)177, "hu", "hun", "hun", "hun", "hun", "Magyar", "Hungarian" },
                    { (short)178, "ia", "ina", "ina", "ina", "ina", "Interlingua", "Interlingua" },
                    { (short)179, "id", "ind", "ind", "ind", "ind", "Bahasa Indonesia", "Indonesian" },
                    { (short)180, "ie", "ile", "ile", "ile", "ile", "Interlingue", "Interlingue" },
                    { (short)181, "ga", "gle", "gle", "gle", "gle", "Gaeilge", "Irish" },
                    { (short)182, "ig", "ibo", "ibo", "ibo", "ibo", "Igbo", "Igbo" },
                    { (short)183, "he", "heb", "heb", "heb", "heb", "עברית", "Hebrew" },
                    { (short)184, "zu", "zul", "zul", "zul", "zul", "isiZulu", "Zulu" },
                    { (short)165, "gl", "glg", "glg", "glg", "glg", "Galego", "Galician" },
                    { (short)94, "my", "mya", "bur", "mya", "mya", "မြန်မာဘာသာ", "Burmese" },
                    { (short)164, "ff", "ful", "ful", "ful", "ful", "Fulfulde", "Fula" },
                    { (short)162, "ik", "ipk", "ipk", "ipk", "ipk", "Iñupiak", "Inupiaq" },
                    { (short)142, "jv", "jav", "jav", "jav", "jav", "Basa Jawa", "Javanese" },
                    { (short)143, "kl", "kal", "kal", "kal", "kal", "Kalaallisut", "Kalaallisut" },
                    { (short)144, "kn", "kan", "kan", "kan", "kan", "ಕನ್ನಡ", "Kannada" },
                    { (short)145, "kr", "kau", "kau", "kau", "kau", "Kanuri", "Kanuri" },
                    { (short)146, "ks", "kas", "kas", "kas", "kas", "كشميري", "Kashmiri" },
                    { (short)147, "kk", "kaz", "kaz", "kaz", "kaz", "Қазақша", "Kazakh" },
                    { (short)148, "km", "khm", "khm", "khm", "khm", "ភាសាខ្មែរ", "Khmer" },
                    { (short)149, "ki", "kik", "kik", "kik", "kik", "Gĩkũyũ", "Kikuyu" },
                    { (short)151, "ky", "kir", "kir", "kir", "kir", "Кыргызча", "Kyrgyz" },
                    { (short)152, "kv", "kom", "kom", "kom", "kom", "Коми", "Komi" },
                    { (short)153, "kg", "kon", "kon", "kon", "kon", "Kongo", "Kongo" },
                    { (short)154, "ko", "kor", "kor", "kor", "kor", "한국어", "Korean" },
                    { (short)155, "ku", "kur", "kur", "kur", "kur", "Kurdî", "Kurdish" },
                    { (short)156, "kj", "kua", "kua", "kua", "kua", "Kuanyama", "Kwanyama" },
                    { (short)157, "la", "lat", "lat", "lat", "lat", "Latina", "Latin" },
                    { (short)158, "lb", "ltz", "ltz", "ltz", "ltz", "Lëtzebuergesch", "Luxembourgish" },
                    { (short)159, "it", "ita", "ita", "ita", "ita", "Italiano", "Italian" },
                    { (short)160, "is", "isl", "ice", "isl", "isl", "Íslenska", "Icelandic" },
                    { (short)161, "io", "ido", "ido", "ido", "ido", "Ido", "Ido" },
                    { (short)163, "fr", "fra", "fre", "fra", "fra", "Français", "French" },
                    { (short)93, "lg", "lug", "lug", "lug", "lug", "Luganda", "Ganda" },
                    { (short)150, "rw", "kin", "kin", "kin", "kin", "Kinyarwanda", "Kinyarwanda" },
                    { (short)91, "ln", "lin", "lin", "lin", "lin", "Lingála", "Lingala" },
                    { (short)26, "lu", "lub", "lub", "lub", "lub", "Tshiluba", "Luba-Katanga" },
                    { (short)27, "lv", "lav", "lav", "lav", "lav", "Latviešu", "Latvian" },
                    { (short)28, "gv", "glv", "glv", "glv", "glv", "Gaelg", "Manx" },
                    { (short)29, "mk", "mkd", "mac", "mkd", "mkd", "Македонски", "Macedonian" },
                    { (short)30, "mg", "mlg", "mlg", "mlg", "mlg", "Malagasy", "Malagasy" },
                    { (short)31, "ms", "msa", "may", "msa", "msa", "Bahasa Melayu", "Malay" },
                    { (short)32, "ml", "mal", "mal", "mal", "mal", "മലയാളം", "Malayalam" },
                    { (short)33, "mt", "mlt", "mlt", "mlt", "mlt", "Malti", "Maltese" },
                    { (short)25, "lt", "lit", "lit", "lit", "lit", "Lietuvių", "Lithuanian" },
                    { (short)34, "mi", "mri", "mao", "mri", "mri", "Māori", "Māori" },
                    { (short)36, "mh", "mah", "mah", "mah", "mah", "Kajin M̧ajeļ", "Marshallese" },
                    { (short)37, "mn", "mon", "mon", "mon", "mon", "Монгол", "Mongolian" },
                    { (short)38, "na", "nau", "nau", "nau", "nau", "Dorerin Naoero", "Nauru" },
                    { (short)39, "nv", "nav", "nav", "nav", "nav", "Diné Bizaad", "Navajo" },
                    { (short)40, "nd", "nde", "nde", "nde", "nde", "isiNdebele", "Northern Ndebele" },
                    { (short)41, "ne", "nep", "nep", "nep", "nep", "नेपाली", "Nepali" },
                    { (short)92, "li", "lim", "lim", "lim", "lim", "Limburgs", "Limburgish" },
                    { (short)44, "no", "nor", "nor", "nor", "nor", "Norsk", "Norwegian" },
                    { (short)35, "mr", "mar", "mar", "mar", "mar", "मराठी", "Marathi" },
                    { (short)23, "ii", "iii", "iii", "iii", "iii", "ꆈꌠ꒿ Nuosuhxop", "Nuosu" },
                    { (short)22, "sd", "snd", "snd", "snd", "snd", "سنڌي", "Sindhi" },
                    { (short)21, "nr", "nbl", "nbl", "nbl", "nbl", "isiNdebele", "Southern Ndebele" },
                    { (short)2, "oc", "oci", "oci", "oci", "oci", "Occitan", "Occitan" },
                    { (short)3, "oj", "oji", "oji", "oji", "oji", "ᐊᓂᔑᓈᐯᒧᐎᓐ", "Ojibwe" },
                    { (short)4, "cu", "chu", "chu", "chu", "chu", "Словѣ́ньскъ", "Old Church Slavonic" },
                    { (short)5, "om", "orm", "orm", "orm", "orm", "Afaan Oromoo", "Oromo" },
                    { (short)6, "or", "ori", "ori", "ori", "ori", "ଓଡି଼ଆ", "Oriya" },
                    { (short)7, "os", "oss", "oss", "oss", "oss", "Ирон æвзаг", "Ossetian" },
                    { (short)8, "pa", "pan", "pan", "pan", "pan", "ਪੰਜਾਬੀ", "Panjabi" },
                    { (short)9, "pi", "pli", "pli", "pli", "pli", "पाऴि", "Pāli" },
                    { (short)10, "fa", "fas", "per", "fas", "fas", "فارسی", "Persian" },
                    { (short)11, "pl", "pol", "pol", "pol", "pol", "Polski", "Polish" },
                    { (short)12, "ps", "pus", "pus", "pus", "pus", "پښتو", "Pashto" },
                    { (short)13, "pt", "por", "por", "por", "por", "Português", "Portuguese" },
                    { (short)14, "qu", "que", "que", "que", "que", "Runa Simi", "Quechua" },
                    { (short)15, "rm", "roh", "roh", "roh", "roh", "Rumantsch", "Romansh" },
                    { (short)16, "rn", "run", "run", "run", "run", "Kirundi", "Kirundi" },
                    { (short)17, "ro", "ron", "rum", "ron", "ron", "Română", "Romanian" },
                    { (short)18, "ru", "rus", "rus", "rus", "rus", "Русский", "Russian" },
                    { (short)19, "sa", "san", "san", "san", "san", "संस्कृतम्", "Sanskrit" },
                    { (short)20, "sc", "srd", "srd", "srd", "srd", "Sardu", "Sardinian" },
                    { (short)45, "lo", "lao", "lao", "lao", "lao", "ພາສາລາວ", "Lao" },
                    { (short)46, "se", "sme", "sme", "sme", "sme", "Sámegiella", "Northern Sami" },
                    { (short)42, "ng", "ndo", "ndo", "ndo", "ndo", "Owambo", "Ndonga" },
                    { (short)48, "tr", "tur", "tur", "tur", "tur", "Türkçe", "Turkish" },
                    { (short)72, "gd", "gla", "gla", "gla", "gla", "Gàidhlig", "Scottish Gaelic" },
                    { (short)47, "sg", "sag", "sag", "sag", "sag", "Sängö", "Sango" },
                    { (short)74, "si", "sin", "sin", "sin", "sin", "සිංහල", "Sinhala" },
                    { (short)75, "sk", "slk", "slo", "slk", "slk", "Slovenčina", "Slovak" },
                    { (short)76, "sl", "slv", "slv", "slv", "slv", "Slovenščina", "Slovene" },
                    { (short)77, "so", "som", "som", "som", "som", "Soomaaliga", "Somali" },
                    { (short)78, "st", "sot", "sot", "sot", "sot", "Sesotho", "Southern Sotho" },
                    { (short)79, "es", "spa", "spa", "spa", "spa", "Español", "Spanish" },
                    { (short)80, "su", "sun", "sun", "sun", "sun", "Basa Sunda", "Sundanese" },
                    { (short)81, "sw", "swa", "swa", "swa", "swa", "Kiswahili", "Swahili" },
                    { (short)82, "ss", "ssw", "ssw", "ssw", "ssw", "SiSwati", "Swati" },
                    { (short)83, "sv", "swe", "swe", "swe", "swe", "Svenska", "Swedish" },
                    { (short)84, "ta", "tam", "tam", "tam", "tam", "தமிழ்", "Tamil" },
                    { (short)85, "te", "tel", "tel", "tel", "tel", "తెలుగు", "Telugu" },
                    { (short)86, "tg", "tgk", "tgk", "tgk", "tgk", "Тоҷикӣ", "Tajik" },
                    { (short)87, "th", "tha", "tha", "tha", "tha", "ภาษาไทย", "Thai" },
                    { (short)88, "ti", "tir", "tir", "tir", "tir", "ትግርኛ", "Tigrinya" },
                    { (short)89, "bo", "bod", "tib", "bod", "bod", "བོད་ཡིག", "Tibetan Standard" },
                    { (short)90, "tl", "tgl", "tgl", "tgl", "tgl", "Tagalog", "Tagalog" },
                    { (short)71, "sh", "scr", "scr", "scr", "hbs", "Srpskohrvatski", "Serbo-Croatian" },
                    { (short)70, "tk", "tuk", "tuk", "tuk", "tuk", "Türkmençe", "Turkmen" },
                    { (short)73, "sn", "sna", "sna", "sna", "sna", "ChiShona", "Shona" },
                    { (short)68, "sm", "smo", "smo", "smo", "smo", "Gagana Sāmoa", "Samoan" },
                    { (short)49, "ts", "tso", "tso", "tso", "tso", "Xitsonga", "Tsonga" },
                    { (short)50, "tt", "tat", "tat", "tat", "tat", "Татарча", "Tatar" },
                    { (short)51, "tw", "twi", "twi", "twi", "twi", "Twi", "Twi" },
                    { (short)52, "ty", "tah", "tah", "tah", "tah", "Reo Mā’ohi", "Tahitian" },
                    { (short)53, "ug", "uig", "uig", "uig", "uig", "ئۇيغۇرچه", "Uyghur" },
                    { (short)54, "uk", "ukr", "ukr", "ukr", "ukr", "Українська", "Ukrainian" },
                    { (short)69, "tn", "tsn", "tsn", "tsn", "tsn", "Setswana", "Tswana" },
                    { (short)56, "uz", "uzb", "uzb", "uzb", "uzb", "O‘zbek", "Uzbek" },
                    { (short)57, "ve", "ven", "ven", "ven", "ven", "Tshivenḓa", "Venda" },
                    { (short)55, "ur", "urd", "urd", "urd", "urd", "اردو", "Urdu" },
                    { (short)59, "vo", "vol", "vol", "vol", "vol", "Volapük", "Volapük" },
                    { (short)58, "vi", "vie", "vie", "vie", "vie", "Tiếng Việt", "Vietnamese" },
                    { (short)66, "yo", "yor", "yor", "yor", "yor", "Yorùbá", "Yoruba" },
                    { (short)65, "yi", "yid", "yid", "yid", "yid", "ייִדיש", "Yiddish" },
                    { (short)64, "xh", "xho", "xho", "xho", "xho", "isiXhosa", "Xhosa" },
                    { (short)67, "to", "ton", "ton", "ton", "ton", "faka Tonga", "Tonga" },
                    { (short)62, "wo", "wol", "wol", "wol", "wol", "Wolof", "Wolof" },
                    { (short)61, "cy", "cym", "wel", "cym", "cym", "Cymraeg", "Welsh" },
                    { (short)60, "wa", "wln", "wln", "wln", "wln", "Walon", "Walloon" },
                    { (short)63, "fy", "fry", "fry", "fry", "fry", "Frysk", "Western Frisian" }
                });

            migrationBuilder.InsertData(
                table: "licenses",
                columns: new[] { "Id", "DescriptionUrl", "Name", "PermissiveAdaptation", "PermissiveCommercial" },
                values: new object[,]
                {
                    { (short)25, "https://creativecommons.org/licenses/by-nc-sa/2.5/", "CC BY-NC-SA 2.5", true, false },
                    { (short)26, "https://creativecommons.org/licenses/by-nc-nd/3.0/", "CC BY-NC-ND 3.0", false, false },
                    { (short)27, "https://opensource.org/licenses/BSD-2-Clause", "BSD-2-Clause", true, true },
                    { (short)28, "https://creativecommons.org/publicdomain/zero/1.0/", "CC0 1.0 Universal", true, true },
                    { (short)29, "https://spdx.org/licenses/Beerware.html", "The Beer-Ware License", true, true },
                    { (short)30, "https://creativecommons.org/licenses/by-sa/2.1/jp/deed.en", "CC BY-SA 2.1 JP", true, true },
                    { (short)31, "https://creativecommons.org/licenses/by-nc/3.0/", "CC BY-NC 3.0", true, false },
                    { (short)32, null, "Permissive non-commercial", true, false },
                    { (short)33, "https://www.mozilla.org/MPL/2.0/", "Mozilla Public License v2.0", true, true },
                    { (short)43, "https://www.gnu.org/licenses/agpl-3.0.html", "AGPLv3", true, true },
                    { (short)35, "https://github.com/DandelionSprout/Dandelicence/blob/master/DandelicenceNewestVersion.md", "Dandelicence", true, true },
                    { (short)36, "https://creativecommons.org/licenses/by-nd/3.0/", "CC BY-ND 3.0", false, true },
                    { (short)37, "https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html", "Lesser GPL v2.1", true, true },
                    { (short)38, null, "Generic copyfree", true, true },
                    { (short)39, null, "Generic copyleft", true, true },
                    { (short)40, "https://pgl.yoyo.org/license/", "McRae General Public License", true, false },
                    { (short)41, "http://www.affero.org/oagpl.html", "AGPLv1", true, true },
                    { (short)42, "http://www.affero.org/agpl2.html", "AGPLv2", true, true },
                    { (short)24, "https://creativecommons.org/licenses/by/4.0/", "CC BY 4.0", true, true },
                    { (short)34, "https://www.gnu.org/licenses/lgpl-3.0.en.html", "Lesser GPL v3", true, true },
                    { (short)23, "https://dbad-license.org/", "\"Don't Be A Dick\" Public License", true, true },
                    { (short)11, "https://unlicense.org/", "The Unlicense", true, true },
                    { (short)21, "https://osint.bambenekconsulting.com/license.txt", "OSINT", true, true },
                    { (short)22, "https://raw.githubusercontent.com/googlehosts/hosts/master/LICENSE", "GoogleHosts", false, false },
                    { (short)1, "https://creativecommons.org/licenses/by-nc-nd/4.0/", "CC BY-NC-ND 4.0", false, false },
                    { (short)2, "https://opensource.org/licenses/MIT", "The MIT License", true, true },
                    { (short)4, "https://www.gnu.org/licenses/gpl-3.0.en.html", "GPLv3", true, true },
                    { (short)5, "https://en.wikipedia.org/wiki/All_rights_reserved", "All Rights Reserved", false, false },
                    { (short)6, "https://creativecommons.org/licenses/by-nc-sa/3.0/", "CC BY-NC-SA 3.0", true, false },
                    { (short)7, null, "Permissive", true, true },
                    { (short)8, "https://creativecommons.org/licenses/by-sa/4.0/", "CC BY-SA 4.0", true, true },
                    { (short)9, "https://creativecommons.org/licenses/by-nc-sa/4.0/", "CC BY-NC-SA 4.0", true, false },
                    { (short)3, null, "Restricted", false, false },
                    { (short)12, "https://creativecommons.org/licenses/by-sa/3.0/", "CC BY-SA 3.0", true, true },
                    { (short)13, "https://creativecommons.org/licenses/by-nc/4.0/", "CC BY-NC 4.0", true, false },
                    { (short)14, "http://www.wtfpl.net/", "WTFPL", true, true },
                    { (short)15, "https://creativecommons.org/licenses/by-nd/4.0/", "CC BY-ND 4.0", false, true },
                    { (short)16, "https://creativecommons.org/licenses/by/3.0/", "CC BY 3.0", true, true },
                    { (short)17, "https://opensource.org/licenses/ISC", "ISC", true, true },
                    { (short)18, "https://www.apache.org/licenses/LICENSE-2.0", "Apache 2.0", true, true },
                    { (short)19, "https://www.gnu.org/licenses/old-licenses/gpl-2.0.html", "GPLv2", true, true },
                    { (short)10, "https://opensource.org/licenses/BSD-3-Clause", "BSD-3-Clause", true, true },
                    { (short)20, null, "Public Domain", true, true }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)97, "easylisthebrew@gmail.com", "https://github.com/easylist/EasyListHebrew", "EasyListHebrew" },
                    { (short)98, "easylist.china@gmail.com", "https://abpchina.org/forum/", "EasyList China" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)99, "https://margevicius.lt/", "gymka" },
                    { (short)100, "https://stanev.org/", "Alex Stanev" },
                    { (short)101, null, "BLOGRAM" },
                    { (short)102, "https://notabug.org/anonymous74100?tab=activity", "anonymous74100" },
                    { (short)106, "https://github.com/sipp11", "sipp11" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)104, "mail@perflyst.de", "https://github.com/Perflyst", "Perflyst" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)105, "https://github.com/crazy-max", "CrazyMax" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)107, "bogachenkove@gmail.com", "https://github.com/bogachenko", "Bogachenko Vyacheslav" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)108, "nolamiller1203+githubmochifilter@gmail.com", "https://pokapoka.shoooter.net/", "eEIi0A5L", "mochi_adfilter" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)109, "https://github.com/deathbybandaid", "Deathbybandaid" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)96, "blog@zoso.ro", "https://www.zoso.ro/", "Zoso", "zoso" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)103, "costa@firehol.org", "https://firehol.org/", "FireHOL" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)95, "https://github.com/k2jp", "k2jp" },
                    { (short)85, "https://github.com/FadeMind", "FadeMind" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)93, "steveb@stevenblack.com", "http://stevenblack.com/", "Steven Black", "steveblack" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)79, "info@dshield.org", "https://dshield.org/", "DShield" },
                    { (short)80, "email@kowabit.de", "https://www.kowabit.de/", "kowabit" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)81, "https://github.com/chadmayfield", "Chad Mayfield", "chadrmayfield" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)82, "https://getadblock.com/", "AdBlock" },
                    { (short)83, "https://forum.xda-developers.com/member.php?u=4546389", "jerryn70" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)84, "mail.energized@protonmail.com", "https://github.com/EnergizedProtection", "Team Boltz", "adroitadorkhan" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)94, "https://github.com/yourduskquibbles", "yourduskquibbles" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[,]
                {
                    { (short)110, "https://akamaru.de/", "Akamaru", "Akamaru_Pie" },
                    { (short)87, null, "Aegis Team", "TeamAEGISgg" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)88, "support@riskanalytics.com", "https://www.riskanalytics.com/", "RiskAnalytics" },
                    { (short)89, "support@it-mate.co.uk", "https://hosts-file.net/", "Hosts-File Dot Net" },
                    { (short)90, "jmdugan_pubprofile_1522347973@biocontact.org", "https://biocontact.org/jmdugan/", "Jonathan Dugan" },
                    { (short)91, "pgl@yoyo.org", "https://pgl.yoyo.org/", "Peter Lowe" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)92, "https://forums.lanik.us/viewforum.php?f=102", "RU AdList" },
                    { (short)86, "http://rlwpx.free.fr/", "Airelle" },
                    { (short)111, "https://github.com/MrBukLau", "Buk Lau" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)121, "mitchellkrog@gmail.com", "https://github.com/mitchellkrogza", "mitchellkrogza" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)113, "https://github.com/koenrh", "Koen Rouwhorst" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)78, "github@paulbutler.org", "https://paulbutler.org", "Paul Butler", "paulgb" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)144, "https://github.com/Cybo1927", "Cybo1927" },
                    { (short)143, "https://github.com/Nebula-Mechanica", "Nebula-Mechanica" },
                    { (short)142, "https://github.com/caffeinewriter", "caffeinewriter" },
                    { (short)141, "https://github.com/hawkeye116477", "hawkeye116477" },
                    { (short)140, "https://github.com/mmotti", "mmotti" },
                    { (short)139, "https://www.github.developerdan.com/hosts/", "lightswitch05" },
                    { (short)138, "https://github.com/HankAviator", "HankAviator" },
                    { (short)137, "https://github.com/Sinfonietta", "Sinfonietta" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)136, "author@i-dont-care-about-cookies.eu", "https://www.i-dont-care-about-cookies.eu/", "Daniel Kladnik" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)135, "https://github.com/CitizenXVIL", "CitizenXVIL" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)134, "elias.ojala+github@kapsi.fi", "https://github.com/theel0ja", "Elias Ojala" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)133, "https://gioxx.org/", "Giovanni Francesco Solone", "gioxx" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)132, "https://github.com/mtxadmin", "mtxadmin" },
                    { (short)131, "http://columwalsh.ie/", "Colum Walsh" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)130, "https://github.com/RooneyMcNibNug", "RooneyMcNibNug", "rooneymcnibnug" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)129, "https://hostsfile.mine.nu/", "Andy Short" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)114, "neofelhz@gmail.com", "https://nfz.moe/", "neo Felhz", "neoFelhz" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)115, "https://www.stopforumspam.com/", "StopForumSpam.com", "StopForumSpam" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)116, "github@chrisbuijs.com", "https://github.com/cbuijs/", "Chris Buijs" },
                    { (short)117, "admin@intr0.com", "https://intr0.com/", "intr0" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)118, "https://github.com/ookangzheng", "ookangzheng" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)119, "hector@molinero.dev", "https://github.com/hectorm", "Héctor Molinero Fernández" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)112, "https://github.com/olegwukr", "olegwukr" },
                    { (short)120, "https://github.com/ngosang", "Diego Heras" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)123, "reddestdream@gmail.com", "https://github.com/ReddestDream", "ReddestDream" },
                    { (short)124, "jcb@bambenekconsulting.com", "https://www.bambenekconsulting.com", "John Bambenek" },
                    { (short)125, "jwspamspy@pobox.com", "https://joewein.de/", "Joe Wein" },
                    { (short)126, "radicalbotanical@aol.com", "https://github.com/bongochong", "Chongo Bong" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)127, "https://quidsup.net/", "QuidsUp" },
                    { (short)128, "https://github.com/kano1", "kano1" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)122, "dev@oz.nu", "https://github.com/oznu", "oznu" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)77, "https://github.com/SkeletalDemise", "SkeletalDemise" },
                    { (short)16, "https://forums.lanik.us/memberlist.php?mode=viewprofile&u=1488", "Famlam" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)75, "https://github.com/xd4rker", "xd4rker", "xd4rker" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)34, "polishjarvis@gmail.com", "https://github.com/PolishFiltersTeam/", "Polish Filters Team" },
                    { (short)33, "kadrep@outlook.com", "https://github.com/azet12/", "azet12" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)32, "https://github.com/MajkiIT", "MajkiIT" },
                    { (short)31, "https://github.com/arcetera", "arcetera" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)30, "anudeep@protonmail.com", "https://github.com/anudeepND", "Anudeep", "anudeepND" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)29, "https://github.com/bkrucarci", "Bekir" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)27, "https://ker.af/", "Rafael Keramidas", "iamkeraf" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)26, "https://github.com/elypter", "elypter" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)25, "badmojr@gmail.com", "https://forum.xda-developers.com/member.php?u=8758244", "badmojr" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)24, "https://github.com/metaphoricgiraffe", "metaphoricgiraffe" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)23, "cosntacptamem@abuse.ch", "https://abuse.ch/", "abuse.ch", "abuse_ch" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)22, "imreeil42@gmail.com", "https://sproutsluckycorner.wordpress.com/", "Imre Kristoffer Eilertsen" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)21, "https://github.com/hoshsadiq/adblock-nocoin-list", "Hosh" },
                    { (short)20, "https://github.com/taylr", "Matt Taylor" },
                    { (short)19, "https://www.blogger.com/profile/09662737599549871224", "Mike Burgess" },
                    { (short)18, "https://github.com/SlowMemory", "SlowMemory" },
                    { (short)17, "https://forums.lanik.us/memberlist.php?mode=viewprofile&u=1400", "Khrin" },
                    { (short)76, "https://github.com/hit3shjain", "hit3shjain" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[,]
                {
                    { (short)2, null, "AppliliZ", "280blocker" },
                    { (short)3, null, "Brad Conte", "bradconte" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)4, "https://forum.xda-developers.com/member.php?u=4877037", "BSDgeek_Jake" },
                    { (short)5, null, "Michael Trimm" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)6, "info@eyeo.com", "https://eyeo.com/", "eyeo GmbH", "eyeo" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)35, "bjorn@bjornstar.com", "https://bjornstar.com/", "Bjorn Stromberg" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)7, "https://easylist.to/", "The EasyList Authors" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)10, "https://www.malwaredomainlist.com/", "Malware Domain List Community", "_MDL_" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)11, "https://forums.lanik.us/memberlist.php?mode=viewprofile&u=542", "Lian" },
                    { (short)12, "https://forums.lanik.us/memberlist.php?mode=viewprofile&u=2266", "Crits" },
                    { (short)13, "https://forums.lanik.us/memberlist.php?mode=viewprofile&u=1260", "smed79" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)14, "mp3geek@gmail.com", "https://www.fanboy.co.nz/", "Ryan Brown", "fanboynz" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)15, "https://forums.lanik.us/memberlist.php?mode=viewprofile&u=333", "MonztA" },
                    { (short)8, "https://github.com/mayve", "mayve" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)36, "martin@herndl.org", "https://github.com/monojp", "Martin Herndl" },
                    { (short)28, "blablabla@alleblock.pl", "https://github.com/maciejtarmas", "Maciej Tarmas" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)38, "https://kowith337.github.io/", "Kowith Singkornkeeree", "kowith337" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)56, "https://github.com/cb-software", "cb-software" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)57, "https://github.com/gorhill", "Raymond Hill", "gorhill" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)58, "https://github.com/toshiya44", "Toshiya" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)59, "jamie@jamiedubs.com", "https://jamiedubs.com/", "Jamie Wilkinson", "jamiew" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)62, "https://github.com/raghavdua1995", "Raghav Dua" },
                    { (short)37, "https://github.com/vokins", "vokins" },
                    { (short)55, "https://github.com/haykam821", "haykam821" },
                    { (short)64, "https://github.com/lassekongo83", "Mattias" },
                    { (short)68, "https://github.com/betterwebleon/", "betterwebleon" },
                    { (short)69, "https://github.com/notracking", "notracking" },
                    { (short)70, "https://github.com/KonoromiHimaries", "KonoromiHimaries" },
                    { (short)71, "https://forums.lanik.us/memberlist.php?mode=viewprofile&u=9300", "invisible666" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)72, "endolith@gmail.com", "https://github.com/endolith", "endolith" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)73, "https://github.com/UnluckyLuke", "UnluckyLuke" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)66, "https://gist.github.com/BBcan177", "BBcan177", "BBcan177" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)54, "https://github.com/hl2guide", "deanoman" },
                    { (short)63, "https://github.com/jspenguin2017", "Hugo Xu" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)52, "tomas@getadblock.com", "https://github.com/tomasko126", "Tomáš Taro" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[] { (short)53, "https://github.com/Hubird-au", "Hubird-au" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[,]
                {
                    { (short)40, "gato@intaa.net", "https://warui.intaa.net/", "Warui", "gatolabo" },
                    { (short)41, "multiverse2011@gmail.com", "https://github.com/multiverse2011", "Multiverse2011", "multiverse2011" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)42, "https://cosmonote.blogspot.com", "Cosmonote" },
                    { (short)43, "https://github.com/Lerist", "Lerist" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[] { (short)39, "me@pureapp.in.th", "https://www.pureapp.in.th/", "Pakkapon Phongthawee" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)45, "support@disconnect.me", "https://disconnect.me", "Disconnect", "disconnectme" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)44, "http://vxvault.net/", "VXVault", "siri_urz" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)47, "https://github.com/reek", "Reek" },
                    { (short)48, "https://github.com/eladkarako", "Elad Karako" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)49, "zerodot1@bk.ru", "https://github.com/ZeroDot1", "ZeroDot1", "hobbygrafix" });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "EmailAddress", "HomeUrl", "Name" },
                values: new object[,]
                {
                    { (short)50, "webmaster@squidblacklist.org", "https://www.squidblacklist.org/", "Squid Blacklist" },
                    { (short)51, "lolipopplus@protonmail.com", "https://github.com/Rictusempra", "Rictusempra" }
                });

            migrationBuilder.InsertData(
                table: "maintainers",
                columns: new[] { "Id", "HomeUrl", "Name", "TwitterHandle" },
                values: new object[] { (short)46, "https://adguard.com/", "AdGuard", "adguard" });

            migrationBuilder.InsertData(
                table: "software",
                columns: new[] { "Id", "DownloadUrl", "HomeUrl", "IsAbpSubscribable", "Name" },
                values: new object[,]
                {
                    { (short)30, "https://www.isc.org/bind/", "https://www.isc.org/bind/", false, "BIND" },
                    { (short)26, "https://f-droid.org/packages/org.blokada.alarm/", "https://blokada.org", false, "Blokada" },
                    { (short)24, "https://www.slimjet.com/en/dlpage.php", "https://www.slimjet.com", true, "Slimjet" },
                    { (short)27, "https://github.com/henrypp/hostsmgr/releases", "https://www.henrypp.org/product/hostsmgr", false, "hostsmgr" },
                    { (short)28, "https://zenz-solutions.de/personaldnsfilter/", "https://zenz-solutions.de/personaldnsfilter/", false, "personalDNSfilter" },
                    { (short)29, "https://nlnetlabs.nl/projects/unbound/download/", "https://nlnetlabs.nl/projects/unbound/about/", false, "Unbound" },
                    { (short)31, "https://github.com/AdguardTeam/AdGuardHome/releases", "https://github.com/AdguardTeam/AdGuardHome", false, "AdGuard Home" },
                    { (short)38, "https://github.com/fengyc/URLRedirector/#urlredirector", "https://github.com/fengyc/URLRedirector/", false, "URLRedirector" },
                    { (short)33, null, null, false, "Legacy Unix derivatives" },
                    { (short)34, null, null, false, "Windows command line" },
                    { (short)35, "https://shadowsocks.org/en/download/clients.html", "https://shadowsocks.org/en/index.html", false, "Shadowsocks" },
                    { (short)36, "https://github.com/shadowsocksrr/shadowsocksr-csharp/releases", "https://github.com/shadowsocksrr/shadowsocksr-csharp", false, "ShadowsocksR" },
                    { (short)37, "https://apps.apple.com/app/shadowrocket/id932747118", "https://liguangming.com/Shadowrocket", false, "Shadowrocket" },
                    { (short)39, null, "https://www.reddit.com/r/pfBlockerNG/", false, "pfBlockerNG" },
                    { (short)23, "http://www.thekelleys.org.uk/dnsmasq/", "http://www.thekelleys.org.uk/dnsmasq/doc.html", false, "dnsmasq" },
                    { (short)40, "https://www.opera.com/", "https://www.opera.com/", true, "Opera's built-in adblocker" },
                    { (short)32, "https://adnauseam.io/", "https://adnauseam.io/", true, "AdNauseam" },
                    { (short)22, "https://diversion.ch/diversion/installation.html", "https://diversion.ch/", false, "Diversion" },
                    { (short)25, "https://github.com/gorhill/uMatrix#umatrix", "https://github.com/gorhill/uMatrix", true, "uMatrix" },
                    { (short)20, "https://www.obdev.at/products/littlesnitch/download.html", "https://www.obdev.at/products/littlesnitch/index.html", false, "Little Snitch" },
                    { (short)21, "https://www.privoxy.org/sf-download-mirror/", "https://www.privoxy.org/", false, "Privoxy" },
                    { (short)1, "https://github.com/gorhill/uBlock#installation", "https://github.com/gorhill/uBlock", true, "uBlock Origin" },
                    { (short)2, "https://adblockplus.org/", "https://adblockplus.org/", true, "Adblock Plus" },
                    { (short)3, "https://adguard.com/en/download.html", "https://adguard.com/", true, "AdGuard" },
                    { (short)4, "https://f-droid.org/packages/org.jak_linux.dns66/", "https://github.com/julian-klode/dns66", false, "DNS66" },
                    { (short)6, "https://getadblock.com/", "https://getadblock.com/", true, "AdBlock" },
                    { (short)7, "https://f-droid.org/packages/org.adaway/", "https://adaway.org/", false, "AdAway" },
                    { (short)8, "https://addons.mozilla.org/firefox/addon/personal-blocklist/", "https://addons.mozilla.org/firefox/addon/personal-blocklist/", false, "Personal Blocklist for Firefox" },
                    { (short)5, "https://github.com/NanoAdblocker/NanoCore#nano-adblocker-core", "https://github.com/NanoAdblocker/NanoCore", true, "Nano Adblocker" },
                    { (short)11, "https://github.com/scottlerch/HostsFileEditor/releases", "https://hostsfileeditor.com/", false, "Hosts File Editor" },
                    { (short)12, "https://github.com/2ndalpha/gasmask/releases", "https://github.com/2ndalpha/gasmask", false, "Gas Mask" },
                    { (short)13, "https://github.com/xd4rker/MinerBlock/releases", "https://github.com/xd4rker/MinerBlock", false, "MinerBlock" },
                    { (short)14, "https://pi-hole.net/", "https://pi-hole.net/", false, "Pi-hole" },
                    { (short)16, "https://support.microsoft.com/en-gb/help/18520/download-internet-explorer-11-offline-installer", "https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/hh273399(v=vs.85)", false, "Internet Explorer (TPL)" },
                    { (short)17, "https://greasyfork.org/scripts/1682-google-hit-hider-by-domain-search-filter-block-sites", "https://www.jeffersonscher.com/gm/google-hit-hider/", false, "Google Hit Hider by Domain" },
                    { (short)18, "https://firehol.org/installing/", "https://firehol.org/", false, "FireHOL" },
                    { (short)10, "http://einaregilsson.com/redirector/", "http://einaregilsson.com/redirector/", false, "Redirector" },
                    { (short)19, null, "https://www.samsungknox.com", false, "Samsung Knox" }
                });

            migrationBuilder.InsertData(
                table: "syntaxes",
                columns: new[] { "Id", "DefinitionUrl", "Name" },
                values: new object[,]
                {
                    { (short)31, null, "URLRedirector" },
                    { (short)30, "https://docs.pi-hole.net/ftldns/regex/tutorial/", "Pi-hole regular expressions" },
                    { (short)25, null, "Response Policy Zones (RPZ)" },
                    { (short)27, null, "Windows command line script" },
                    { (short)26, null, "BIND" },
                    { (short)32, null, "IPs (IPv4; some CIDR)" },
                    { (short)28, "https://help.eyeo.com/en/adblockplus/how-to-write-filters#basic", "Adblocker-syntax domains" },
                    { (short)33, null, "IPs (IPv4 + IPv6; no CIDR)" },
                    { (short)42, null, "IPs (IPv4 + IPv6; some CIDR)" },
                    { (short)35, "https://en.wikipedia.org/wiki/Hosts_(file)", "Hosts (localhost IPv4 + IPv6)" },
                    { (short)36, "https://en.wikipedia.org/wiki/Hosts_(file)", "Hosts (localhost IPv6)" },
                    { (short)37, "https://en.wikipedia.org/wiki/Hosts_(file)", "Non-localhost hosts (IPv6)" },
                    { (short)38, null, "Adblock Plus Advanced" },
                    { (short)39, null, "IPs (IPv6 only; no CIDR)" },
                    { (short)40, null, "IPs (IPv6 only; some CIDR)" },
                    { (short)41, null, "IPs (IPv6 only; CIDR only)" },
                    { (short)24, null, "Unbound" },
                    { (short)43, null, "IPs (IPv4 + IPv6; CIDR only)" },
                    { (short)34, null, "IPs (IPv4; CIDR only)" },
                    { (short)23, null, "Unix-format hosts.deny file" },
                    { (short)29, null, "Socks5" },
                    { (short)21, "https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#include-file-name", "uBlock Origin !#include-tag compilation" },
                    { (short)22, null, "DNS servers" },
                    { (short)1, "https://en.wikipedia.org/wiki/Hosts_(file)", "Hosts (localhost IPv4)" },
                    { (short)2, null, "Domains" },
                    { (short)4, "https://github.com/gorhill/uBlock/wiki/Static-filter-syntax", "uBlock Origin Static" },
                    { (short)6, "https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters", "AdGuard" },
                    { (short)7, "https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide", "uMatrix / uBlock Origin Dynamic" },
                    { (short)8, null, "URLs" },
                    { (short)9, null, "IPs (IPv4; no CIDR)" },
                    { (short)10, "https://blogs.msdn.microsoft.com/ie/2010/12/07/ie9-and-privacy-introducing-tracking-protection/", "Tracking Protection List (IE)" },
                    { (short)3, "https://adblockplus.org/filters", "Adblock Plus" },
                    { (short)12, "https://github.com/NanoAdblocker/NanoCore/tree/master/notes", "Nano Adblocker Static" },
                    { (short)13, "https://github.com/xd4rker/MinerBlock", "MinerBlock" },
                    { (short)14, "https://en.wikipedia.org/wiki/Hosts_(file)", "Non-localhost hosts (IPv4)" },
                    { (short)15, null, "IPs (Start-end-range only)" },
                    { (short)16, null, "Domains with wildcards" },
                    { (short)17, "https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#scriptlet-injection", "uBlock Origin scriptlet injection" },
                    { (short)18, "https://help.obdev.at/littlesnitch/lsc-rule-group-subscriptions", "Little Snitch subscription-style rules" },
                    { (short)19, "https://www.privoxy.org/user-manual/actions-file.html", "Privoxy action file" },
                    { (short)11, null, "Redirector" },
                    { (short)20, null, "dnsmasq domains list" }
                });

            migrationBuilder.InsertData(
                table: "tags",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { (short)19, "Blocks resources from certain companies", "anti-corp" },
                    { (short)20, "Lists that are of special interest to IT admins", "admin" },
                    { (short)21, "Lists that remove news stories of subjectively low quality", "clickbait" },
                    { (short)22, "Blocks religious or superstitious content", "religious" },
                    { (short)23, "Blocks pages from link-shortening services", "shorteners" },
                    { (short)24, "Blocks piracy-focusing sites", "piracy" },
                    { (short)28, "Blocks requests that ask you to subscribe to newsletters", "newsletters" },
                    { (short)26, "Blocks software updates", "updates" },
                    { (short)27, "Userstyles in adblocker syntax that change the appearance of sites", "userstyle" },
                    { (short)29, "Prevents \"How can I help you?\" prompts from popping up", "helpprompt" },
                    { (short)30, "Blocks certain cultural content", "cultural" },
                    { (short)31, "Removes empty boxes that remain after other things were blocked", "empty-box" },
                    { (short)18, "Removes website-embedded fonts", "fonts" },
                    { (short)25, "Blocks political content", "politics" },
                    { (short)17, "Blocks gambling resources", "gambling" },
                    { (short)6, "Blocks malicious resources", "malware" },
                    { (short)15, "Blocks specific topics/things", "topical" },
                    { (short)32, "Blocks prompts to subscribe to push notifications", "push-notes" },
                    { (short)1, "Blocks cryptomining and/or cryptojacking", "crypto" },
                    { (short)2, "Blocks advertisements", "ads" },
                    { (short)3, "Blocks trackers and other privacy-invasive resources", "privacy" },
                    { (short)4, "Blocks social media scripts, trackers, widgets, comment sections, etc.", "social" },
                    { (short)5, "Blocks adblock detection scripts", "anti-adblock" },
                    { (short)16, "Removes obstructing or annoying overlays", "overlay" },
                    { (short)7, "Blocks phishing and/or scam resources", "phishing" },
                    { (short)9, "Blocks subjectively annoying resources", "annoyances" },
                    { (short)10, "Unblocks categorical resources", "whitelist" },
                    { (short)11, "Blocks adult, NSFW, pornographic, etc. resources", "nsfw" },
                    { (short)12, "Redirects traffic through proxies to get around firewalls", "proxy" },
                    { (short)13, "Extends or blocks functionality from search engines", "search" },
                    { (short)14, "Intended for research only", "research" },
                    { (short)8, "Blocks cookie notices primarily in response to the EU Cookie Law", "cookies" },
                    { (short)33, "Blocks promotions of websites' own mobile apps", "app-download" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1512, null, "This is a community list with a blacklist of IP addresses.", null, null, null, "https://www.badips.com/", "https://www.badips.com/documentation#3", (short)2, "BadIPs", null, null, null, new DateTime(2019, 4, 21, 15, 18, 22, 0, DateTimeKind.Unspecified), "https://www.badips.com/info", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)87, null, "Needed to unbreak web sites, mostly because of hosts file-based filters.", "https://github.com/uBlockOrigin/uAssets/blob/master/filters/unbreak.txt", null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uAssets Unbreak", null, new DateTime(2016, 4, 1, 12, 8, 37, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 13, 8, 43, 47, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/unbreak.txt", "https://gitcdn.xyz/repo/uBlockOrigin/uAssets/master/filters/unbreak.txt", "https://rawcdn.githack.com/uBlockOrigin/uAssets/master/filters/unbreak.txt" },
                    { (short)86, null, "Block sites with skimming scripts.", "https://raw.githubusercontent.com/byaka/ublock-antiskimming-list/master/build/data.txt", null, null, "https://github.com/byaka/ublock-antiskimming-list", "https://github.com/byaka/ublock-antiskimming-list/issues", (short)5, "uBlock Antiskimming List", null, new DateTime(2016, 10, 18, 15, 20, 50, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2017, 11, 28, 14, 12, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/byaka/ublock-antiskimming-list/master/build/data.txt", "https://gitcdn.xyz/repo/byaka/ublock-antiskimming-list/master/build/data.txt", "https://rawcdn.githack.com/byaka/ublock-antiskimming-list/master/build/data.txt" },
                    { (short)85, null, "A filterlist with additional filters for uBlock Origin. Contains filters specific to uBlock Origin (like popunder filters) and some filters that have not yet been added to other filterlists.", "https://github.com/IDKwhattoputhere/uBlock-Filters-Plus", null, null, "https://github.com/IDKwhattoputhere/uBlock-Filters-Plus", "https://github.com/IDKwhattoputhere/uBlock-Filters-Plus/issues", (short)8, "uBlock Filters Plus", null, new DateTime(2018, 6, 8, 17, 32, 45, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 6, 8, 17, 32, 45, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/IDKwhattoputhere/uBlock-Filters-Plus/master/uBlock-Filters-Plus.txt", "https://gitcdn.xyz/repo/IDKwhattoputhere/uBlock-Filters-Plus/master/uBlock-Filters-Plus.txt", "https://rawcdn.githack.com/IDKwhattoputhere/uBlock-Filters-Plus/master/uBlock-Filters-Plus.txt" },
                    { (short)83, null, "This project was built based on Anti-Adblock Killer (by Reek), but is now significantly different. Anti-Adblock Killer Script was completely re-implemented. Anti-Adblock Killer Filter was mostly copied and concatenated to uBlock Protector List.", "https://github.com/jspenguin2017/uBlockProtector/", null, null, "https://jspenguin2017.github.io/uBlockProtector/", "https://github.com/jspenguin2017/uBlockProtector/issues", (short)4, "Nano Defender Integration", null, new DateTime(2018, 5, 23, 21, 53, 55, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 6, 19, 16, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/NanoAdblocker/NanoFilters/master/NanoMirror/NanoDefender.txt", "https://rawcdn.githack.com/NanoAdblocker/NanoFilters/master/NanoMirror/NanoDefender.txt", null },
                    { (short)82, null, "A filterlist with additional filters for uBlock Origin to block third-party, tracking, annoyances and all other unwarranted resources from loading. Contains filters specific to uBlock Origin and some filters that have not yet been added to other filterlists.", "https://github.com/uBlock-user/uBO-Personal-Filters", null, null, "https://github.com/uBlock-user/uBO-Personal-Filters", null, (short)2, "uBO-Personal-Filters", null, new DateTime(2016, 12, 3, 20, 18, 12, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 13, 8, 13, 50, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlock-user/uBO-Personal-Filters/master/uPF.txt", "https://gitcdn.xyz/repo/uBlock-user/uBO-Personal-Filters/master/uPF.txt", "https://rawcdn.githack.com/uBlock-user/uBO-Personal-Filters/master/uPF.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)61, null, "A Polish filters that protects against scams such as SMS subscriptions.", "https://github.com/PolishFiltersTeam/KAD", null, "polishjarvis@gmail.com", null, "https://kadantiscam.netlify.com/", "https://github.com/PolishFiltersTeam/KAD/issues", (short)8, "KAD - Scams", null, new DateTime(2016, 4, 8, 12, 11, 44, 0, DateTimeKind.Unspecified), "https://kadantiscam.netlify.com/#contact", (short)4, new DateTime(2019, 4, 12, 16, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/KAD/master/KAD.txt", "https://gitcdn.xyz/repo/PolishFiltersTeam/KAD/master/KAD.txt", "https://rawcdn.githack.com/PolishFiltersTeam/KAD/master/KAD.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)59, null, "A filter list for Adblock which covers filters for Korean websites.", "https://github.com/gfmaster/adblock-korea-contrib", null, null, "https://github.com/gfmaster/adblock-korea-contrib", "https://github.com/gfmaster/adblock-korea-contrib/issues", (short)5, "Korean Adblock List", null, new DateTime(2014, 11, 18, 6, 6, 9, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 9, 15, 14, 39, 15, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/gfmaster/adblock-korea-contrib/master/filter.txt", "https://gitcdn.xyz/repo/gfmaster/adblock-korea-contrib/master/filter.txt", "https://rawcdn.githack.com/gfmaster/adblock-korea-contrib/master/filter.txt" },
                    { (short)27, null, "A text file with filters to aid in blocking online trackers, for use in a blocker such as uBlock Origin.", "https://github.com/metaphoricgiraffe/tracking-filters", null, null, "https://github.com/metaphoricgiraffe/tracking-filters", "https://github.com/metaphoricgiraffe/tracking-filters/issues", (short)11, "Privacy Filters", null, new DateTime(2015, 6, 15, 6, 6, 48, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 12, 9, 5, 1, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/metaphoricgiraffe/tracking-filters/master/trackingfilters.txt", "https://gitcdn.xyz/repo/metaphoricgiraffe/tracking-filters/master/trackingfilters.txt", "https://rawcdn.githack.com/metaphoricgiraffe/tracking-filters/master/trackingfilters.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)2021, null, null, null, "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://facebook.adblockplus.me/", null, (short)5, "Facebook News Feed Annoyances Blocker", null, null, (short)3, "https://easylist-downloads.adblockplus.org/fb_annoyances_newsfeed.txt", null, null },
                    { (short)2020, null, null, null, "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://facebook.adblockplus.me/", null, (short)5, "Facebook Sidebar Blocker", null, null, (short)3, "https://easylist-downloads.adblockplus.org/fb_annoyances_sidebar.txt", null, null },
                    { (short)2019, null, null, null, "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://facebook.adblockplus.me/", null, (short)5, "Facebook Annoyances Blocker", null, null, (short)3, "https://easylist-downloads.adblockplus.org/fb_annoyances_full.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)88, null, "Privacy filters for uBlock Origin.", null, null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uAssets Privacy", null, new DateTime(2016, 4, 1, 12, 17, 3, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 6, 9, 17, 3, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/privacy.txt", "https://gitcdn.xyz/repo/uBlockOrigin/uAssets/master/filters/privacy.txt", "https://rawcdn.githack.com/uBlockOrigin/uAssets/master/filters/privacy.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1999, null, "This is used to block all .g00. and .g01. crap that domains like msn.com and sportingnews.com use to obfuscate loaded/loading resources", null, null, null, "https://github.com/Cybo1927/Hosts", "https://github.com/Cybo1927/Hosts/issues", (short)11, "Cybo's Blackout", null, null, (short)3, "https://raw.githubusercontent.com/Cybo1927/Hosts/master/Dark%20Mode/Blackout", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1988, null, "This list aims to restore MeWe to its late 2017 state, before public post sharing and the «Pages» function eroded its carefree walled gardens.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "MeWe Happy Time Fun Club", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/MeWeHappyTimeFunClub.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/MeWeHappyTimeFunClub.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/MeWeHappyTimeFunClub.txt" },
                    { (short)1987, null, "Twitch is a platform to stream videogames, everyday life, and advertisements disguised as gaming expos. But at least from a traditional standpoint, many Twitch userbase in-jokes have taken forms that would've been considered racist in many other settings, including emotes that are used to accuse black people of being terrorists, women of being whiny, or businessmen game characters of being Jewish. If you wish for a more squeaky-clean experience that simply considers humans to be humans, here's a list for you.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Say No to Racism on Twitch", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/SayNoToRacismOnTwitch.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/SayNoToRacismOnTwitch.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/SayNoToRacismOnTwitch.txt" },
                    { (short)1984, null, "Imgur is an image uploading site that tries far, far too hard to be a meme site. Here's a list that will revert it back to being an image uploading site again.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Imgur: Pure Imagery Experience", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/ImgurPureImageryExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/ImgurPureImageryExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/ImgurPureImageryExperience.txt" },
                    { (short)1976, null, "A lot of trashy \"reviewers\" and \"forums\" seem to have an extremely unhealthy fascination with trashing the same few cartoons over and over for no reason other than group pressure, making a lot of the internet a pretty unhealthy place to discuss and research cartoons on. Here's how to get away from such places.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Hivemind cartoon trashing' List", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiHivemindCartoonTrashingList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiHivemindCartoonTrashingList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiHivemindCartoonTrashingList.txt" },
                    { (short)1967, null, "This is a list to remove the kinds of ads that very few well-established international adblocker lists would want to remove, due to many of them not meeting those lists' strict criteria of what an ad actually is. So that's where this list comes into play.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Ad Removal List for Unusual Ads", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AdRemovalListForUnusualAds.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AdRemovalListForUnusualAds.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AdRemovalListForUnusualAds.txt" },
                    { (short)1966, null, "PornHub is a site full of distractions and things that you are quite literally not into. If you wish to focus on the things there that you really are into, you can use this list.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "PornHub: Pure Trail Mix Experience", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/PornHubPureTrailMixExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/PornHubPureTrailMixExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/PornHubPureTrailMixExperience.txt" },
                    { (short)1965, null, "Do you feel unfairly targeted by relatively non-threatening pastes on «Have I Been Pwned»? Perhaps you once used your E-mail address in the actual goddamn E-mail field on 4chan 7 years ago, or you're part of a large E-mail-based DnD group? Or maybe for any other reason? In that case, this list will make Have I Been Pwned largely ignore any paste results for your E-mail address(es).", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Have I Been Pwned Paste Remover", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/HaveIBeenPwnedPasteRemover.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/HaveIBeenPwnedPasteRemover.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/HaveIBeenPwnedPasteRemover.txt" },
                    { (short)1964, null, "Adventure Time is a very popular cartoon made by completely inexperienced art students who disregard young viewers and insert it full of adult morals and completely nonsensical plotlines instead. This list is how to get an arm's length away from it.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Adventure Time' List", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiAdventureTimeList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiAdventureTimeList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiAdventureTimeList.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1961, null, null, null, null, null, "https://github.com/xorcan/hosts/", null, (short)4, "xorcan Türk element-ad-list (Turkish)", null, null, (short)3, "https://raw.githubusercontent.com/xorcan/hosts/master/xelement.txt", null, null },
                    { (short)1946, null, "The one and only rule set applied by AnonymousPoster is this on blockrules.txt in complementary to EasyList.", null, null, null, "https://gitlab.com/AnonymousPoster/ublockorigin-rules", null, (short)40, "AnonymousPoster – Andblock Rules", null, null, (short)3, "https://anonymousposter.gitlab.io/ublockorigin-rules/blockrules.txt", null, null },
                    { (short)1891, null, null, null, null, null, "https://github.com/deletescape/noads", "https://github.com/deletescape/noads/issues", (short)35, "noads.online anti scumware list", null, null, (short)3, "https://raw.githubusercontent.com/deletescape/noads/master/lists/fo-scumware.txt", null, null },
                    { (short)1996, null, "This is used to block all .g00. and .g01. crap that domains like msn.com and sportingnews.com use to obfuscate loaded/loading resources", null, null, null, "https://github.com/Cybo1927/Hosts", "https://github.com/Cybo1927/Hosts/issues", (short)11, "Cybo's Anti-g00", null, null, (short)3, "https://raw.githubusercontent.com/Cybo1927/Hosts/master/Anti/Anti%20g00", null, null },
                    { (short)1890, null, null, null, null, null, "https://github.com/deletescape/noads", "https://github.com/deletescape/noads/issues", (short)35, "noads.online Switzerland specific filters", null, null, (short)3, "https://raw.githubusercontent.com/deletescape/noads/master/lists/add-switzerland.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)89, null, "Filters optimized for uBlock.", "https://github.com/uBlockOrigin/uAssets/blob/master/filters/filters.txt", null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uAssets Filters", null, new DateTime(2016, 4, 1, 12, 6, 54, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 13, 12, 2, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/filters.txt", "https://gitcdn.xyz/repo/uBlockOrigin/uAssets/master/filters/filters.txt", "https://rawcdn.githack.com/uBlockOrigin/uAssets/master/filters/filters.txt" },
                    { (short)91, null, "To block sites known for delivering adware/crapware. For sites documented to put users at risk of installing adware/crapware etc. The purpose is to at least ensure a user is warned of the risks ahead.", "https://github.com/uBlockOrigin/uAssets/blob/master/filters/badware.txt", null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uAssets Badware", null, new DateTime(2016, 4, 1, 12, 15, 40, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 7, 16, 50, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/badware.txt", "https://gitcdn.xyz/repo/uBlockOrigin/uAssets/master/filters/badware.txt", "https://rawcdn.githack.com/uBlockOrigin/uAssets/master/filters/badware.txt" },
                    { (short)405, null, "Filters optimized for uBlock Origin, to be used with Fanboy's and/or Adguard's 'Annoyances' list(s)", "https://github.com/uBlockOrigin/uAssets/blob/master/filters/annoyances.txt", null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uAssets Annoyances", null, new DateTime(2017, 12, 17, 14, 31, 17, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 13, 20, 50, 45, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/annoyances.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)383, "https://discordapp.com/invite/013MqTM1p1qm52VcZ", "Removes uncovered AD, AD frames, and adblock warnings from specific popular websites", "https://austinhuang.me/0131-block-list/", "https://austinhuang.me/donate", "im@austinhuang.me", null, "https://austinhuang.me/0131-block-list/", "https://github.com/austinhuang0131/0131-block-list/issues", (short)8, "0131 Block List", null, new DateTime(2018, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://austinhuang.me/contact", (short)4, new DateTime(2019, 2, 11, 8, 56, 9, 0, DateTimeKind.Unspecified), "https://austinhuang.me/0131-block-list/list.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)382, null, "Blocks ads/popups/fake thumbs/fake redirections/spam bookmark buttons and more from porn websites", "https://raw.githubusercontent.com/WowDude/PornList/master/PornList.txt", null, null, "https://github.com/WowDude/PornList", "https://github.com/WowDude/PornList/issues", (short)16, "PornList", null, new DateTime(2018, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 10, 24, 12, 39, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/WowDude/PornList/master/PornList.txt", null, null },
                    { (short)380, null, "Very experimental custom filters", "https://github.com/toshiya44/myAssets/blob/master/README.md", null, null, "https://github.com/toshiya44/myAssets", "https://github.com/toshiya44/myAssets/issues", (short)4, "Toshiya's Filter List - Experimental", null, new DateTime(2016, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 2, 23, 6, 37, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/toshiya44/myAssets/master/filters-exp.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)379, null, "These filters will cause a button labeled: \"Disqus blocked by uBlock Origin: click to unblock\" to be embedded where Disqus comments would normally be loaded. Click the button to force the comments to be loaded.", "https://gist.github.com/gorhill/ef1b62d606473c68d524", null, null, "https://gist.github.com/gorhill/ef1b62d606473c68d524", null, (short)5, "Disqus Click-to-Load", null, new DateTime(2016, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, "https://gist.githubusercontent.com/gorhill/ef1b62d606473c68d524/raw/f8181faac18cb5172c7c9bca8e5a3b22f0c925d0/gistfile1.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)375, null, "A comprehensive, all-in-one adblock list for thorough blocking of trackers, popup ads, ads, unwanted cookies, fake news, cookie warning messages, unwanted comment sections, crypto-coin mining, YouTube clutter and social network hassles.", "https://hl2guide.github.io/All-in-One-Customized-Adblock-List/", null, null, "https://hl2guide.github.io/All-in-One-Customized-Adblock-List/", "https://github.com/hl2guide/All-in-One-Customized-Adblock-List/issues", (short)2, "All-in-One Customized Adblock List", null, new DateTime(2018, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 14, 19, 2, 57, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/hl2guide/All-in-One-Customized-Adblock-List/master/deanoman-adblocklist.txt", null, null },
                    { (short)371, null, "AFNIL’s intention is to merge third-party lists of known fakenews sites and make them usable for programs that can block.", "https://afnil-antifakenewsinternationallist.github.io/", null, null, "https://afnil-antifakenewsinternationallist.github.io/", "https://github.com/AFNIL-AntiFakeNewsInternationalList/AFNIL/issues", (short)4, "AFNIL - Anti Fake News International List", null, new DateTime(2017, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 1, 15, 13, 9, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/AFNIL-AntiFakeNewsInternationalList/AFNIL/master/AFNIL-ABP-uBO.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)369, null, "Official filter list file used for blocking ads on Czech and Slovak websites.", "https://github.com/tomasko126/easylistczechandslovak", null, "tomastaro@adblock.sk", "https://easylist-czech-and-slovak.tenderapp.com/", "https://adblock.sk/", "https://github.com/tomasko126/easylistczechandslovak/issues", (short)8, "EasyList Czech and Slovak - uBlock", null, new DateTime(2017, 12, 3, 6, 22, 1, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 11, 17, 32, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/tomasko126/easylistczechandslovak/master/filters_ublock.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)356, null, "ReStyle annoying pages", "https://github.com/eladkarako/hosts/blob/master/build/hosts_adblock_anti_annoyances_style_inject.txt", "https://www.paypal.me/e1adkarak0", null, "https://github.com/eladkarako/hosts", null, (short)11, "HOSTS AdBlock - Anti-Annoyance - ReStyle Annoying Pages", null, new DateTime(2018, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 22, 22, 9, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eladkarako/hosts/master/build/hosts_adblock_anti_annoyances_style_inject.txt", null, null },
                    { (short)354, null, "Block annoying page-scripts", "https://github.com/eladkarako/hosts/blob/master/build/hosts_adblock_anti_annoyances_block_inline_script.txt", "https://www.paypal.me/e1adkarak0", null, "https://github.com/eladkarako/hosts", null, (short)11, "HOSTS AdBlock - Anti-Annoyance - Block Annoying Page-Scripts", null, new DateTime(2018, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 2, 21, 13, 48, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eladkarako/hosts/master/build/hosts_adblock_anti_annoyances_block_inline_script.txt", null, null },
                    { (short)353, null, "Block annoying connections", "https://github.com/eladkarako/hosts/blob/master/build/hosts_adblock_anti_annoyances_block.txt", "https://www.paypal.me/e1adkarak0", null, "https://github.com/eladkarako/hosts", null, (short)11, "HOSTS AdBlock - Anti-Annoyance - Block Annoying Connections", null, new DateTime(2018, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 22, 22, 9, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eladkarako/hosts/master/build/hosts_adblock_anti_annoyances_block.txt", null, null },
                    { (short)90, null, "These filters are experimental and may cause breakage. They are being evaluated/fine-tuned for inclusion in the default set of filters.", "https://github.com/uBlockOrigin/uAssets/blob/master/filters/experimental.txt", null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uAssets Experimental", null, new DateTime(2016, 4, 1, 12, 19, 27, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2016, 11, 15, 14, 1, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/experimental.txt", "https://gitcdn.xyz/repo/uBlockOrigin/uAssets/master/filters/experimental.txt", "https://rawcdn.githack.com/uBlockOrigin/uAssets/master/filters/experimental.txt" },
                    { (short)344, "https://riot.im/app/#/room/!IPhdjtOfWxVbiddKOo:matrix.org?via=matrix.org", "Blocks internal advertising, paid subscriptions, own stores on Polish sites.", null, null, null, "https://github.com/KonoromiHimaries/PolishSubFilters/", null, (short)9, "Polish Internal Filters", null, new DateTime(2018, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 29, 17, 17, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/KonoromiHimaries/PolishSubFilters/master/internal-filters/wewnetrzne.txt", null, null },
                    { (short)342, "https://riot.im/app/#/room/!IPhdjtOfWxVbiddKOo:matrix.org?via=matrix.org", "Blocks banners (paypal, payu, bitcoin and patronite), charity banners, other forms of inclination to support on Polish sites.", null, null, null, "https://github.com/KonoromiHimaries/PolishSubFilters", null, (short)9, "Polish Anti-Donate Filters", null, new DateTime(2018, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 6, 20, 19, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/KonoromiHimaries/PolishSubFilters/master/internal-filters/anti-donate-filters/anty-donacje.txt", null, null },
                    { (short)341, null, "uBlock Origin & AdGuard supplement list for Polish Social Filters", null, "https://patronite.pl/polskiefiltry", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Polish Social Filters - Supplement for uBlock & AdGuard", null, new DateTime(2018, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 2, 15, 53, 52, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/adblock_social_filters/social_filters_uB_AG.txt", null, null },
                    { (short)331, null, "Block ads, tracking, popup sites and servers that most used on Thai sites.", "https://kowith337.github.io/ThaiParanoidBlock/", null, null, "https://kowith337.github.io/ThaiParanoidBlock/", "https://github.com/kowith337/ThaiParanoidBlock/issues", (short)13, "Thai Paranoid Block", null, new DateTime(2016, 1, 9, 17, 8, 54, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 1, 16, 46, 44, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/ThaiParanoidBlock/master/ThaiParanoid.txt", "https://gitlab.com/kowith337/ThaiParanoidBlock/raw/master/ThaiParanoid.txt", null },
                    { (short)313, null, "A generic list that makes annoying sticky headers unsticky.", "https://raw.githubusercontent.com/elypter/filter_processor/master/generated_filterlists/blockhead(decoy_generic_selection).txt", null, null, "https://github.com/elypter/filter_processor", "https://github.com/elypter/filter_processor/issues", (short)4, "Generic Annoying Stickybar Filter v2", null, new DateTime(2018, 1, 15, 14, 27, 24, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 1, 15, 14, 44, 41, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/elypter/filter_processor/master/generated_filterlists/blockhead(decoy_generic_selection).txt", null, null },
                    { (short)312, null, "A generic list that makes annoying sticky headers unsticky.", "https://raw.githubusercontent.com/elypter/filter_processor/master/generated_filterlists/blockhead(decoy_generic_extraction).txt", null, null, "https://github.com/elypter/filter_processor", "https://github.com/elypter/filter_processor/issues", (short)4, "Blockhead (Generic Extraction Based)", null, new DateTime(2018, 1, 15, 14, 27, 24, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 1, 15, 14, 44, 41, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/elypter/filter_processor/master/generated_filterlists/blockhead(decoy_generic_extraction).txt", null, null },
                    { (short)311, null, "A generic filter for adblockers that keeps annoying header and footer bars from filling up your screen.", "https://github.com/elypter/generic_annoying_stickybar_filter", null, null, "https://github.com/elypter/generic_annoying_stickybar_filter", "https://github.com/elypter/generic_annoying_stickybar_filter/issues", (short)4, "Generic Annoying Stickybar Filter", null, new DateTime(2017, 11, 12, 18, 37, 45, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/elypter/generic_annoying_stickybar_filter/master/generic_header_list.txt", null, null },
                    { (short)307, null, "Blocks various trackers", null, null, null, "https://github.com/taylr/linkedinsanity", "https://github.com/taylr/linkedinsanity/issues", (short)2, "Spies Dislike Us Having Privacy", null, new DateTime(2017, 7, 7, 16, 41, 6, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 11, 19, 14, 4, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/taylr/linkedinsanity/master/spies-dislike-us.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)270, null, "This is a list of free/bulk domain registration services, who register 2nd level domains for free or almost free.", "https://mirror1.malwaredomains.com/files/bulk_registrars.txt", "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Bulk Registrars", null, null, (short)4, "https://mirror1.malwaredomains.com/files/bulk_registrars.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)253, null, "This filter list for uBlock Origin/Adblock Plus is designed to be used with such lists as EasyList, RU AdList etc., so it's substantially free of intersections with them. The list is made for blocking ad (mostly on Russian websites) missed by other filter lists maintainers. It is regularly updated and actively developed for now.", "https://github.com/hant0508/uBlock-filters", null, "hant0508@gmail.com", null, "https://github.com/hant0508/uBlock-filters", "https://github.com/hant0508/uBlock-filters/issues", (short)5, "Filters by hant0508", null, new DateTime(2015, 7, 11, 18, 55, 57, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 2, 6, 11, 6, 58, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/hant0508/uBlock-filters/master/filters.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)113, null, "Blocks Japanese regional advertisements and trackers.", null, null, null, "https://github.com/tofukko/filter", null, (short)5, "Tofu Filter", null, null, (short)4, new DateTime(2019, 3, 25, 9, 49, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/tofukko/filter/master/Adblock_Plus_list.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)102, "https://discord.me/yourduskquibbles", "Block annoying web elements and reclaim lost screen real estate to make the web more user friendly!", "https://raw.githubusercontent.com/yourduskquibbles/webannoyances/master/ultralist.txt", null, null, "https://github.com/yourduskquibbles/webannoyances", "https://github.com/yourduskquibbles/webannoyances/issues", (short)8, "Web Annoyances Ultralist", null, new DateTime(2016, 9, 17, 15, 25, 3, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 13, 1, 57, 27, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yourduskquibbles/webannoyances/master/ultralist.txt", "https://gitcdn.xyz/repo/yourduskquibbles/webannoyances/master/ultralist.txt", "https://rawcdn.githack.com/yourduskquibbles/webannoyances/master/ultralist.txt" },
                    { (short)343, null, "uBlock Origin & AdGuard supplement list for Polish GDPR-Cookies Filters.", null, "https://patronite.pl/polskiefiltry", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Polish GDPR-Cookies Filters - Supplement for uBlock & AdGuard", null, new DateTime(2018, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 8, 17, 11, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/cookies_filters/cookies_uB_AG.txt", null, null },
                    { (short)410, null, "To foil sites potentially abusing CPU/bandwidth resources without informed consent. Any such resource-abuse scripts MUST be opt-in, with complete informed consent from the visitor.", "https://github.com/uBlockOrigin/uAssets/blob/master/filters/resource-abuse.txt", null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uAssets Resource Abuse", null, new DateTime(2017, 9, 23, 22, 19, 37, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 12, 13, 23, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/resource-abuse.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1874, null, "Malware, advert and tracking blacklist", null, null, null, "https://github.com/mkb2091/blockconvert", null, (short)4, "BlockConvert (Whitelist adblockers)", null, null, (short)3, "https://raw.githubusercontent.com/mkb2091/blockconvert/master/output/whitelist_adblock.txt", null, null },
                    { (short)1865, null, null, null, null, null, "https://github.com/zonprox/adblock/", null, (short)5, "ABPVN Advanced", null, null, (short)3, "https://raw.githubusercontent.com/zonprox/adblock/master/abpvnplus.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1591, null, "Are you a non-user of Hangouts, and are tired of seeing the uncloseable Hangouts section on Gmail, and various Hangouts buttons and pages? Then this is the list for you.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Google Hangouts' List", null, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-'Google%20Hangouts'%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-'Google%20Hangouts'%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-'Google%20Hangouts'%20List.txt" },
                    { (short)1579, null, "Originally made as a proof-of-concept to see how few entries that a modern-day adblocker would need to block ads, this list aims for at least 90% of EasyList's coverage with less than 0.1% as many entries.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Extremely Condensed Adblocking List", null, new DateTime(2019, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/ExtremelyCondensedList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/ExtremelyCondensedList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/ExtremelyCondensedList.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1567, null, "EasyList is the primary subscription that removes adverts from web pages in English language.", "https://filters.adtidy.org/extension/ublock/filters/101_optimized.txt", null, null, "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "EasyList Optimized", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)3, "https://filters.adtidy.org/extension/ublock/filters/101_optimized.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1565, null, "While it was admirable that places like GOG, Humble Bundle, and Steam began selling movies and books, their categories for such quickly became a dumping ground for useless indie filler. No one needs three book bundles a month about how to write JavaScript, nor do they need a cashgrab \"documentary\" about bronies. This list is for those who once again want to reclaim such stores in the name of videogames.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/GamestoreMovieRemover.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "List for removing movies and books from videogame storefronts", null, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/GamestoreMovieRemover.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/GamestoreMovieRemover.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/GamestoreMovieRemover.txt" },
                    { (short)1564, null, "We hear so much talk about \"fake news\" nowadays, but we never hear any talk about non-news, such as C-tier celebrities either expecting offspring or giving birth to such. This list will aid in removing such kinds of non-news.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiCelebBirthList", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Newsstories about celebs giving birth' List", null, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiCelebBirthList", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiCelebBirthList", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiCelebBirthList" },
                    { (short)1554, null, "So you're sitting there reading a newssite, and then you find big banners that try to tell you the exact points in time you're supposed to pray? If you want to feel less stressed and less like a slave of the clock, then this list is for you.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiPrayerTimesList.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Prayer times' List", null, new DateTime(2019, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 1, 18, 42, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiPrayerTimesList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiPrayerTimesList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiPrayerTimesList.txt" },
                    { (short)1552, null, "Reddit can have some good places and posts, but unfortunately 95% of it is also a large pile of echo chambers whose only equivalent is 8chan. So if you only browse Reddit for its humouristical and artistical subreddits, this list will massively help you focus on those things.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/RedditTrashRemovalService.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Reddit Trash Removal Service", null, new DateTime(2019, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 17, 3, 53, 52, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/RedditTrashRemovalService.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/RedditTrashRemovalService.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/RedditTrashRemovalService.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1549, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "Wiltteri + EasyList", null, null, (short)3, new DateTime(2019, 4, 18, 23, 49, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/wiltteri+easylist.txt", null, null },
                    { (short)1548, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyList Spanish + EasyList", null, null, (short)3, new DateTime(2019, 4, 18, 23, 29, 10, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistspanish+easylist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1532, null, "List for keloger, cookie collector, malware tracker and other spyware for suspicious.", null, null, null, "https://github.com/kano1/Kano/", "https://github.com/kano1/Kano/issues/", (short)5, "Spyware Filter Scrip", null, new DateTime(2019, 3, 15, 14, 19, 36, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 11, 12, 16, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kano1/Kano/master/Spyware_Scrip.txt", null, null },
                    { (short)1531, null, "List for bad isueads for public like adware and popup/ads that are exploited by hackers.", null, null, null, "https://github.com/kano1/I/", "https://github.com/kano1/I/issues/", (short)5, "Adware Filter Scrip", null, new DateTime(2019, 3, 15, 14, 18, 25, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 11, 12, 37, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kano1/I/master/adware_Scrip.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1602, null, "A blocklist for app promotion on Chinese websites", null, null, null, "https://github.com/HankAviator/app-ads-blocklist-china", "https://github.com/HankAviator/app-ads-blocklist-china/issues", (short)4, "App ads blocklist China", null, null, (short)3, "https://raw.githubusercontent.com/HankAviator/app-ads-blocklist-china/master/app_blocklist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1529, null, null, null, null, null, "https://easylist.to/", null, (short)3, "KoreanList", null, null, (short)3, new DateTime(2019, 4, 5, 21, 48, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/koreanlist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1462, null, "Blocks web workers (including mining scripts) everywhere by default and allows them only when needed.", null, null, null, "https://github.com/adranger/web-workers-whitelist/", "https://github.com/adranger/web-workers-whitelist/issues", (short)28, "Web Workers Whitelist", null, new DateTime(2018, 12, 6, 14, 45, 35, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 27, 1, 16, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/adranger/web-workers-whitelist/master/web-workers-whitelist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1461, null, "Are you tired of having to look at all the buttons and links with which Amazon promote their account and payment services while you're watching a good stream (i.e. Vinesauce)? Now you won't have to look at all those buttons anymore!", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiAmazonListForTwitch.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-Amazon List for Twitch", null, new DateTime(2019, 2, 27, 19, 25, 55, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 2, 27, 19, 25, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiAmazonListForTwitch.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiAmazonListForTwitch.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiAmazonListForTwitch.txt" },
                    { (short)1459, null, "The alignment of the stars predict that you will use this list, in order to stop listening so much to such completely unfounded predictions anymore, and to get your eyes off the starry skies and onto your life that should be planted firmly on the ground.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiAstrologyList.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-Astrology List", null, new DateTime(2019, 2, 11, 16, 42, 44, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 1, 1, 45, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiAstrologyList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiAstrologyList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiAstrologyList.txt" },
                    { (short)1456, null, "This list aims to achieve pretty broad (if not overly broad) coverage of social sharing buttons, with perhaps 1/50th~1/100th as many entries as what the biggest anti-'social button' lists out there have.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/SocialShareList.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Lightweight Anti-'Social share' List", null, new DateTime(2019, 2, 10, 9, 17, 29, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 8, 11, 32, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/SocialShareList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/SocialShareList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/SocialShareList.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1294, null, null, null, null, "elias.ojala+github@kapsi.fi", null, "https://github.com/theel0ja/CrapBlock", "https://github.com/theel0ja/CrapBlock/issues", (short)5, "Even cleaner news sites", null, null, (short)3, new DateTime(2019, 3, 6, 0, 0, 46, 0, DateTimeKind.Unspecified), "https://crapblock.theel0ja.info/even-cleaner-news-sites.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1292, null, "Having something display a permanent fake notification counter, to make the users think that they've received a notification when they haven't, takes quite a bit of scumminess on the maker's behalf to pull off. Here's how to filter them out of sight.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Android%20Scum%20Class%20—%20Fake%20notification%20counters.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Fake notification counters' List", null, new DateTime(2018, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 3, 3, 39, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Android%20Scum%20Class%20—%20Fake%20notification%20counters.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Android%20Scum%20Class%20—%20Fake%20notification%20counters.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Android%20Scum%20Class%20—%20Fake%20notification%20counters.txt" },
                    { (short)1291, null, "Are you just trying to casually browse through some comedy and art accounts on Twitter, and have grown really, really tired and worn out by seeing trashy posts and accounts made by tweeters who physically can't stop babbling about politics, especially American politics? Then this list will probably save your life.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Twitter%20De-Politificator.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Twitter De-Politificator", null, new DateTime(2018, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 5, 21, 58, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Twitter%20De-Politificator.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Twitter%20De-Politificator.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Twitter%20De-Politificator.txt" },
                    { (short)1289, null, "So let's say you're doing research on Half-Life: Full Life Consequences, which is the best meme ever made, but you've grown very tired of seeing unrelated images, social media nags, and articles about things that are categorically not memes? In that case, this list will save your sanity.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/KnowYourMemePureBrowsingExperience.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Know Your Meme: Pure Browsing Experience", null, new DateTime(2018, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 2, 24, 16, 18, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/KnowYourMemePureBrowsingExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/KnowYourMemePureBrowsingExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/KnowYourMemePureBrowsingExperience.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1284, null, null, null, null, null, "https://github.com/finnish-easylist-addition/finnish-easylist-addition", "https://github.com/finnish-easylist-addition/finnish-easylist-addition/issues", (short)11, "Annoyance List for Finland", null, new DateTime(2018, 12, 13, 10, 5, 14, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 29, 14, 39, 41, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/finnish-easylist-addition/finnish-easylist-addition/master/annoyances/Finland_annoyances.txt", null, null },
                    { (short)1280, null, "Oficjalne polskie filtry przeciwko alertom o Adblocku", "https://raw.githubusercontent.com/olegwukr/polish-privacy-filters/master/anti-adblock.txt", null, null, "https://github.com/olegwukr/polish-privacy-filters", "https://github.com/olegwukr/polish-privacy-filters/issues", (short)8, "Polish Anti Adblock Filters", null, new DateTime(2018, 12, 3, 20, 25, 31, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 7, 18, 30, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/olegwukr/polish-privacy-filters/master/anti-adblock.txt", null, null },
                    { (short)1279, null, "Polish supplement for EasyPrivacy", "https://raw.githubusercontent.com/olegwukr/polish-privacy-filters/master/adblock.txt", null, null, "https://github.com/olegwukr/polish-privacy-filters", "https://github.com/olegwukr/polish-privacy-filters/issues", (short)8, "Polish Privacy Filters", null, new DateTime(2018, 2, 28, 8, 40, 54, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 1, 7, 42, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/olegwukr/polish-privacy-filters/master/adblock.txt", null, null },
                    { (short)1511, null, "This custom Fail2Ban filter and jail will deal with all scans for common WordPress, Joomla and other Web Exploits being scanned for by automated bots and those seeking to find exploitable web sites.", null, null, null, "https://github.com/mitchellkrogza/Fail2Ban.WebExploits", "https://github.com/mitchellkrogza/Fail2Ban.WebExploits/issues", (short)2, "Fail2Ban WebExploits", null, new DateTime(2018, 4, 19, 9, 30, 38, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 5, 8, 9, 8, 42, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Fail2Ban.WebExploits/master/input-source/exploits.list", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1868, null, "Malware, advert and tracking blacklist", null, null, null, "https://github.com/mkb2091/blockconvert", null, (short)4, "BlockConvert (Adblockers)", null, null, (short)3, "https://raw.githubusercontent.com/mkb2091/blockconvert/master/output/adblock.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1604, null, "Have you ever been watching «Pinkie Cooper and the Jet Set Pets» on DailyMotion, but you keep getting distracted by all the trend-based recommendations below the video player? This list will help focus your attention on the video instead.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "DailyMotion Simplicity", null, new DateTime(2019, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/DailyMotionSimplicity.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/DailyMotionSimplicity.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/DailyMotionSimplicity.txt" },
                    { (short)1606, null, "Office Online, which is effectively a free lite version of Microsoft Office, was a pretty nice and kind move by Microsoft. However, they seem to think that quick access to Skype from it is essential for project communication, which is less than desirable for those who've moved on to e.g. Discord or MeWe. Here's a list that will make your Office Online experience Skype-free.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-Skype List for Office Online", null, new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-Skype%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-Skype%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-Skype%20List.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1864, null, "This is a quick list of Ad-blocking filters for Sri Lankan web sites. Use this to complement Easylist filters.", null, null, null, "https://github.com/Ayesh/Adblock-Sinhala/", null, (short)8, "Adblock Sinhala", null, null, (short)3, "https://raw.githubusercontent.com/Ayesh/Adblock-Sinhala/master/filters.txt", null, null },
                    { (short)1863, null, "This is a filter to fix bugs in AdGuard for Android when using Japanese websites / Japanese apps / 280blocker.", null, null, null, "https://github.com/nanj-adguard2/nanj-kaishuu-filter", null, (short)1, "280blocker for japanese mobile site - Supplement", null, null, (short)3, "https://280blocker.net/files/280blocker_adblock_nanj_supp.txt", null, null },
                    { (short)1862, null, "This is a filter to fix bugs in AdGuard for Android when using Japanese websites / Japanese apps / 280blocker.", null, null, null, "https://github.com/nanj-adguard2/nanj-kaishuu-filter", null, (short)1, "280blocker for japanese mobile site", null, null, (short)3, "https://280blocker.net/files/280blocker_adblock_nanj.txt", null, null },
                    { (short)1861, null, "This is a filter to fix bugs in AdGuard for Android when using Japanese websites / Japanese apps / 280blocker.", null, null, null, "https://github.com/nanj-adguard2/nanj-kaishuu-filter", null, (short)20, "Nanj Kaishuu DNS Filter", null, null, (short)3, "https://raw.githubusercontent.com/nanj-adguard2/nanj-kaishuu-filter/master/nanj-kaishuu-dns-filter.txt", null, null },
                    { (short)1859, null, "This is a filter that eradicates what 280blocker will not support in the future.", null, null, null, "https://github.com/nanj-adguard2/nanj-kakuchou-filter", null, (short)20, "Nanj Kakuchou Filter - Paranoid Rules", null, null, (short)3, "https://raw.githubusercontent.com/nanj-adguard2/nanj-kakuchou-filter/master/paranoid-rules.txt", null, null },
                    { (short)1857, null, "This is a filter to complement 280blocker by finding advertisements that are not blocked by 280blocker.", null, null, null, "https://github.com/nanj-adguard2/nanj-kakuchou-filter", null, (short)20, "Nanj Kakuchou Filter - Supplement Rules", null, null, (short)3, "https://raw.githubusercontent.com/nanj-adguard2/nanj-kakuchou-filter/master/supplement-rules.txt", null, null },
                    { (short)1856, null, "This is an Adblock Plus filter list that removes all comment sections from homepages.", null, null, null, "https://github.com/lutoma/nocomments", null, (short)5, "nocomments", null, null, (short)3, "https://raw.githubusercontent.com/lutoma/nocomments/master/abp.txt", null, null },
                    { (short)1850, null, "This site specializes in custom filtering rules to supplement official rules and enhance the effectiveness of web ad blocking.", null, null, null, "https://n2o.io/p/quarklist/", null, (short)2, "QuarkList", null, null, (short)3, "https://n2o.io/p/quarklist/dist/quarklist.txt", null, null },
                    { (short)1849, null, "Automatic ABP rules.", null, null, null, "https://github.com/jiayiming/jCleanList/", null, (short)2, "jCleanList", null, null, (short)3, "https://raw.githubusercontent.com/jiayiming/jCleanList/master/jCleanList_all.txt", null, null },
                    { (short)1848, null, "Additional Filters for browser extension based adblockers like uBlock Origin, mainly for Chinese mainland internet service, respectively for privacy, advertisement and interruption elements. Including some obvious trackers which could be found&confirmed by novices in network development easily, and should been listed&blocked YEARS ago.", null, null, null, "https://github.com/Crystal-RainSlide/AdditionalFiltersCN", null, (short)5, "AdditionalFiltersCN", null, null, (short)3, "https://raw.githubusercontent.com/Crystal-RainSlide/AdditionalFiltersCN/master/all.txt", null, null },
                    { (short)1847, null, "nothingblock blocks unnecessary element to have 'nothing more to take away'.", null, null, null, "https://github.com/dorjmi/nothingblock", null, (short)33, "nothingblock filter", null, null, (short)3, "https://raw.githubusercontent.com/dorjmi/nothingblock/master/filter.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1605, null, "«Powerpuff Girls», especially the 90's-00's seasons, is a cartoon that taught children such values as beating others senseless, extrajudicial violence, vigilante mob beatings, the expendability of entire neighbourhoods, and discrimination against past offenders. If you too are absolutely embarrassed by ever having watched that show, here's a list for you.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Powerpuff Girls' List", null, new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiPPGList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiPPGList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiPPGList.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1846, null, "Blocking ads and trackers on various macedonian websites.", null, null, null, "https://github.com/RandomAdversary/Macedonian-adBlock-Filters", null, (short)2, "Macedonian adBlock Filters", null, null, (short)3, "https://raw.githubusercontent.com/RandomAdversary/Macedonian-adBlock-Filters/master/Filters", null, null },
                    { (short)1843, null, "ad filter list ublock origin", null, null, null, "https://github.com/secretsnow/secretsnow-adfilters/", null, (short)28, "secretsnow-adfilters", null, null, (short)3, "https://raw.githubusercontent.com/secretsnow/secretsnow-adfilters/master/secretsnow-adfilters.txt", null, null },
                    { (short)1838, null, "A blocklist of ads, trackers, malware, and IP grabbers", "https://github.com/Cybo1927/Hosts", null, null, "https://github.com/Cybo1927/Hosts", "https://github.com/Cybo1927/Hosts/issues", (short)11, "Cybo's Anti Social", null, null, (short)3, "https://raw.githubusercontent.com/Cybo1927/Hosts/master/Anti/Anti%20Social", null, null },
                    { (short)1836, null, "A blocklist of ads, trackers, malware, and IP grabbers", "https://github.com/Cybo1927/Hosts", null, null, "https://github.com/Cybo1927/Hosts", "https://github.com/Cybo1927/Hosts/issues", (short)11, "Cybo's Hosts", null, null, (short)3, "https://raw.githubusercontent.com/Cybo1927/Hosts/master/Hosts", null, null },
                    { (short)1834, null, "A filter list for those annoying \"Subscribe to our push notifications\" popups.", null, "https://ko-fi.com/caffeinewriter", null, "https://github.com/caffeinewriter/DontPushMe", "https://github.com/caffeinewriter/DontPushMe/issues", (short)11, "Don't Push Me", null, null, (short)3, "https://raw.githubusercontent.com/caffeinewriter/DontPushMe/master/filterlist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1832, null, "Pepe the Frog, while beloved by many internet memers, has also become the go-to symbol of many horrendous alt-right movements, culminating in Frenworld and Clown World. If you're worried that people who use him do not have the best intentions, this is how to avoid both him and them.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-Pepe List", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiPepeList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiPepeList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiPepeList.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1726, null, "This filter disables 'dodgy' sites My Way!", null, null, null, "https://github.com/callmenemo491/DodgySiteBlocker/", "https://github.com/callmenemo491/DodgySiteBlocker//issues", (short)2, "DodgySiteBlocker", null, null, (short)3, "https://raw.githubusercontent.com/callmenemo491/DodgySiteBlocker/master/DodgySiteBlocker.txt", null, null },
                    { (short)1705, null, null, null, null, null, "https://www.yiclear.com/", null, (short)5, "ChinaList 2.0", null, null, (short)3, "http://tools.yiclear.com/ChinaList2.0.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1672, null, "Romanian ad block filtering list.", "https://github.com/tcptomato/ROad-Block", null, "contact@adblock.ro", "https://muut.com/i/adblockro/comments", "https://www.adblock.ro/", "https://github.com/tcptomato/ROad-Block/issues", (short)28, "ROad-Kill", null, null, (short)3, "https://raw.githubusercontent.com/tcptomato/ROad-Block/master/road-kill-filters.txt", null, null },
                    { (short)1671, null, "Romanian ad block filtering list.", "https://github.com/tcptomato/ROad-Block", null, "contact@adblock.ro", "https://muut.com/i/adblockro/comments", "https://www.adblock.ro/", "https://github.com/tcptomato/ROad-Block/issues", (short)5, "ROad-Block", null, null, (short)3, "https://raw.githubusercontent.com/tcptomato/ROad-Block/master/road-block-filters.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1669, null, null, null, null, null, "https://github.com/farrokhi/adblock-iran", "https://github.com/farrokhi/adblock-iran/issues", (short)27, "BSTF (Babak's Strict Trackers Filterlist)", null, null, (short)3, "https://raw.githubusercontent.com/farrokhi/adblock-iran/master/additional-trackers.txt", "https://rawcdn.githack.com/farrokhi/adblock-iran/master/additional-trackers.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1637, null, "This is a somewhat alternate approach to the usual anti-comment-section lists, as this list only removes those comment sections that are filled with exceptionally bad comments.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Awful comments' List", null, new DateTime(2019, 6, 28, 16, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiAwfulCommentsList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiAwfulCommentsList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiAwfulCommentsList.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1845, null, null, null, null, null, "https://github.com/T4Tea/ADPMobileFilter/", null, (short)5, "ADP Mobile Filter", null, null, (short)3, "https://raw.githubusercontent.com/T4Tea/ADPMobileFilter/master/ADPMobileFilter.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1247, null, "The \"Battle Royale\" videogame genre has escalated in popularity. And with such popularity, comes annoying promotions, hopeless copycats, and questionable fandoms. If you need a breather from such things, this is a list for you.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Battle Royale' List", null, new DateTime(2018, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 8, 17, 7, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-'Battle%20Royale'%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-'Battle%20Royale'%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-'Battle%20Royale'%20List.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)431, null, "Have you ever felt bothered by how many websites still think that everyone are using narrow monitors? Well, here's how to stretch them out like a piece of gum!", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Website Stretcher", null, null, (short)4, new DateTime(2019, 4, 15, 7, 16, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Website%20Stretcher.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Dandelion%20Sprout%27s%20Website%20Stretcher.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Dandelion%20Sprout%27s%20Website%20Stretcher.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)514, null, "A filter list that blocks ads, trackers, and more.", "https://raw.githubusercontent.com/SkeletalDemise/Skeletal-Blocker/master/Skeletal%20Blocker%20List", null, null, "https://github.com/SkeletalDemise/Skeletal-Blocker", "https://github.com/SkeletalDemise/Skeletal-Blocker/issues", (short)4, "Skeletal Blocker", null, null, (short)4, "https://raw.githubusercontent.com/SkeletalDemise/Skeletal-Blocker/master/Skeletal%20Blocker%20List", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)345, null, "AdGuard supplement list for Official Polish Filters for AdBlock, uBlock Origin & AdGuard", null, "https://patronite.pl/polskiefiltry", "errors@certyficate.it", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Official Polish Filters for AdBlock, uBlock Origin & AdGuard - Supplement for AdGuard", null, new DateTime(2017, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://www.certyficate.it/kontakt/", (short)6, new DateTime(2019, 4, 8, 6, 30, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/polish-adblock-filters/adblock_adguard.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)169, null, "Blocks irritating elements on webpages, including cookie notices, third-party widgets and in-page popups (Doesn’t include social media widgets and buttons, to block them you can still use Social media filter separately). It was inspired by Fanboy Annoyances List, but doesn’t duplicate it, so you can use them both together.", "https://kb.adguard.com/en/general/adguard-ad-filters#annoyances-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Annoyances Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 6, 45, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/14.txt", null, null },
                    { (short)167, null, "Filter that enables removing of the ads from websites with Dutch content.", "https://kb.adguard.com/en/general/adguard-ad-filters#dutch-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Dutch Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 6, 28, 9, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/8.txt", null, null },
                    { (short)166, null, "Filter that enables removing of the ads from websites with English content.", "https://kb.adguard.com/en/general/adguard-ad-filters#english-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Base Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 6, 0, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/2.txt", null, null },
                    { (short)165, null, "Filter designed to test certain hazardous filtering rules before they are added to the basic filters.", "https://kb.adguard.com/en/general/adguard-ad-filters#experimental-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Experimental Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 3, 25, 17, 53, 11, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/5.txt", null, null },
                    { (short)164, null, "Filter that enables removing of the ads from websites with German content.", "https://kb.adguard.com/en/general/adguard-ad-filters#german-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard German Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 4, 2, 11, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/6.txt", null, null },
                    { (short)163, null, "Filter that enables removing of the ads from websites in Japanese.", "https://kb.adguard.com/en/general/adguard-ad-filters#japanese-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Japanese Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 3, 25, 15, 27, 9, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/7.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)162, null, "Filter that blocks ads on mobile devices. Contains all known mobile ad networks.", "https://kb.adguard.com/en/general/adguard-ad-filters#mobile-ads-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Mobile Ads Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 2, 54, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/11.txt", null, null },
                    { (short)161, null, "Filter that enables removing of the ads from websites in Russian. The filter was created 5 years ago. Initially, the work on creation of this filter was based on RU AdList filter and a set of rules developed by us. Subsequently, the filter was developed completely independently, so at this point there are very little intersections with RU AdList left.", "https://kb.adguard.com/en/general/adguard-ad-filters#russian-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Russian Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 2, 34, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/1.txt", null, null },
                    { (short)160, null, "Filter that blocks ads on iOS mobile devices in Safari browser. Contains all known mobile ad networks.", "https://kb.adguard.com/en/general/adguard-ad-filters#safari-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Safari Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 3, 25, 14, 58, 9, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/12.txt", null, null },
                    { (short)159, null, "If you do not like numerous «Like» and «Tweet» buttons on all the popular websites on the Internet, subscribe to this filter, and you will not see them anymore.", "https://kb.adguard.com/general/adguard-ad-filters", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Social Media Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 2, 26, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/4.txt", null, null },
                    { (short)350, null, "Filter that enables removing of the ads from websites with French content.", "https://kb.adguard.com/en/general/adguard-ad-filters#french-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard French Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 13, 13, 40, 11, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/16.txt", null, null },
                    { (short)158, null, "Filter that enables removing of the ads from websites in Spanish.", "https://kb.adguard.com/en/general/adguard-ad-filters#spanish-portuguese-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Spanish/Portuguese Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 2, 20, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/9.txt", null, null },
                    { (short)156, null, "Filter that enables removing of the ads from websites with Turkish content.", "https://kb.adguard.com/en/general/adguard-ad-filters#turkish-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Turkish Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 1, 51, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/13.txt", null, null },
                    { (short)155, null, "Filter that unblocks ads that may be useful to users.", "https://kb.adguard.com/en/general/adguard-ad-filters#filter-for-useful-ads", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Filter unblocking search ads and self-promotion", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 1, 46, 11, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/10.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)16, null, "Filter that enables removing of ads, trackers, and various scripts from websites with Korean content.", "https://raw.githubusercontent.com/List-KR/List-KR/master/filter.txt", null, null, "https://list-kr.github.io/", null, (short)8, "List-KR", null, new DateTime(2016, 5, 13, 13, 2, 19, 0, DateTimeKind.Unspecified), null, (short)6, new DateTime(2019, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/List-KR/List-KR/master/filter.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1997, null, null, null, null, null, "https://github.com/Cybo1927/Hosts", "https://github.com/Cybo1927/Hosts/issues", (short)11, "Cybo's Anti Third Party HTTP", null, null, (short)4, "https://raw.githubusercontent.com/Cybo1927/Hosts/master/Anti/Anti%20Third-Party%20HTTP", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1991, null, "The font situation on many Japanese websites is kind-of absolutely atrocious. They use super-stiff janky fonts resemblant of Windows 95 or Amiga. And even worse, many of the sites also default to the stiff Japanese fonts' atrocious Latin letter types. Here's how to use the sites in a way that is compatible with the 3rd decade of the 21st century.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Japanese Text Softener", null, null, (short)4, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/JapaneseTextSoftener.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/JapaneseTextSoftener.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/JapaneseTextSoftener.txt" },
                    { (short)1990, null, "Are you tired of having to scroll so much on websites, or you want to keep your eyes on more text and content at once? If so, this list will help you a little extra bit with that.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Empty Padding Remover", null, null, (short)4, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/EmptyPaddingRemover.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/EmptyPaddingRemover.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/EmptyPaddingRemover.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1963, null, "Filters to fix common issues with 9Anime and block malicious code", null, null, null, "https://gitlab.com/Sorrow-San/9anime-adblock-filters/", null, (short)5, "9Anime Filter-list: Banners Allowed", null, null, (short)4, "https://gitlab.com/Sorrow-San/9anime-adblock-filters/raw/master_with_banners/9Anime%20filter%20list", null, null },
                    { (short)1958, null, "Filters to fix common issues with 9Anime and block malicious code", null, null, null, "https://gitlab.com/Sorrow-San/9anime-adblock-filters/", null, (short)5, "9Anime Filter-list: No Banner Ads", null, null, (short)4, "https://gitlab.com/Sorrow-San/9anime-adblock-filters/raw/master/9Anime%20filter%20list", null, null },
                    { (short)1957, null, "A list of filters for use with the various Kiss sites.", null, null, null, "https://github.com/Yumire/kiss-filters/", null, (short)5, "Kiss Filters", null, null, (short)4, "https://raw.githubusercontent.com/Yumire/kiss-filters/master/filters.txt", null, null },
                    { (short)1938, null, null, null, null, null, "https://github.com/YanFung/Ads/", null, (short)5, "Mobile Ads", null, null, (short)4, "https://raw.githubusercontent.com/YanFung/Ads/master/Mobile.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1929, null, "I have a pretty long resumé when it comes to translating programs, apps, and websites; but what could be done with websites that don't accept uncommisioned translations or even any translations at all? The solution is of course to create an ungodly nightmare of a CSS style list for uBO and AdGuard, that uses a meticulously surrealistic CSS workaround to replace parts of existing site objects with new objects!", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Norwegian Fan Translations for Untranslatable Websites", null, null, (short)4, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianFanTranslations.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianFanTranslations.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianFanTranslations.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)157, null, "The most comprehensive list of various online counters and web analytics tools. If you do not want your actions on the Internet be tracked, use this filter.", "https://kb.adguard.com/en/general/adguard-ad-filters#spyware-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Tracking Protection Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 15, 2, 14, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/chromium/filters/3.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1867, null, "This is just my List of sites I frequently visit.", null, null, null, "https://github.com/LanikSJ/ubo-filters", null, (short)4, "Lanik's uBO Filter List", null, null, (short)4, "https://raw.githubusercontent.com/LanikSJ/ubo-filters/master/filters/ubo-filters.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1528, null, "Filter that enables removing of the ads from websites with English content.", "https://kb.adguard.com/en/general/adguard-ad-filters#english-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)40, "AdGuard Base Filter without EasyList", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, new DateTime(2019, 4, 5, 21, 43, 12, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/extension/ublock/filters/2_without_easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1569, null, "Liste FR + AdGuard French filter. Filter list that specifically removes ads on websites in French language.", "https://filters.adtidy.org/extension/chromium/filters/16_optimized.txt", null, null, "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard French Filter Optimized", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, "https://filters.adtidy.org/extension/chromium/filters/16_optimized.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1655, null, null, null, null, null, "https://github.com/TechGeeksIO/umatrix-recipes", "https://github.com/TechGeeksIO/umatrix-recipes/issues", (short)34, "TechGeeks.io uMatrix Recipes - additional rules", null, null, (short)7, new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/TechGeeksIO/umatrix-recipes/master/catalog.txt", null, null },
                    { (short)1654, null, null, null, null, null, "https://github.com/TechGeeksIO/umatrix-recipes", "https://github.com/TechGeeksIO/umatrix-recipes/issues", (short)34, "TechGeeks.io uMatrix Recipes - starting", null, null, (short)7, new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/TechGeeksIO/umatrix-recipes/master/main-ruleset.txt", null, null },
                    { (short)1653, null, null, null, null, null, "https://github.com/david1davidson/uMatrixMasterList", "https://github.com/david1davidson/uMatrixMasterList/issues", (short)5, "uMatrix Master List", null, null, (short)7, new DateTime(2016, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/david1davidson/uMatrixMasterList/master/ruleset.txt", null, null },
                    { (short)1652, null, null, null, null, null, "https://github.com/dfkt/umatrix-rules", "https://github.com/dfkt/umatrix-rules/issues", (short)5, "dfkt's uMatrix Rules", null, null, (short)7, new DateTime(2016, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/dfkt/umatrix-rules/master/my-umatrix-rules.txt", null, null },
                    { (short)1651, null, null, null, null, null, "https://github.com/themagicteeth/umatrix-recipes", "https://github.com/themagicteeth/umatrix-recipes/issues", (short)5, "thematrixteeth's uMatrix Recipes", null, null, (short)7, new DateTime(2018, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/themagicteeth/umatrix-recipes/master/recipes.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1644, null, null, null, null, null, "https://github.com/migueldemoura/ublock-umatrix-rulesets", "https://github.com/migueldemoura/ublock-umatrix-rulesets/issues", (short)8, "migueldemoura's uMatrix Recipes", null, null, (short)7, "https://raw.githubusercontent.com/migueldemoura/ublock-umatrix-rulesets/master/uMatrix/recipes", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1643, null, "Another custom recipes for uMatrix. Note that I have a custom default setup and not be same like stock or out-of-box settings, please make sure to look the recipe first and also my default settings before apply. I will not responsible about breakage, both from my default settings and recipes, your need to fix by your own or contact experienced users of uMatrix extension.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/ruleset/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues", (short)13, "Kowith's Self Custom Ruleset", null, null, (short)7, new DateTime(2019, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/ruleset/recipes_custom.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/ruleset/recipes_custom.txt", null },
                    { (short)1642, null, "Another custom recipes for uMatrix. Note that I have a custom default setup and not be same like stock or out-of-box settings, please make sure to look the recipe first and also my default settings before apply. I will not responsible about breakage, both from my default settings and recipes, your need to fix by your own or contact experienced users of uMatrix extension.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/ruleset/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues", (short)13, "Ruleset for Thai sites", null, null, (short)7, new DateTime(2019, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/ruleset/recipes_th.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/ruleset/recipes_th.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1641, null, "These are rules I've exported from my installation of uMatrix. By publishing them on GitHub, I am releasing them into the public domain.", "https://github.com/L2G/umatrix-rules/blob/master/README.md", null, null, "https://github.com/L2G/umatrix-rules", "https://github.com/L2G/umatrix-rules/issues", (short)20, "L2G's uMatrix Rules", null, new DateTime(2017, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)7, new DateTime(2015, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/L2G/umatrix-rules/master/my-umatrix-rules.txt", null, null },
                    { (short)1640, null, "\"uMatrix Recipes\" is a collection of rules that you can use to fix some popular websites by whitelisting the 3rd-party requests that are critical for the websites to function.", null, null, null, "https://github.com/kristerkari/umatrix-recipes", "https://github.com/kristerkari/umatrix-recipes/issues", (short)5, "Krister Kari's uMatrix Recipes", null, new DateTime(2017, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)7, new DateTime(2018, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kristerkari/umatrix-recipes/master/README.md", null, null },
                    { (short)1285, null, "My uMatrix starting point with CDNs pre-whitelisted.", "https://github.com/theel0ja/uMatrix-rules/blob/master/README.md", null, null, "https://github.com/theel0ja/uMatrix-rules", "https://github.com/theel0ja/uMatrix-rules/issues", (short)5, "uMatrix Rules (theel0ja)", null, new DateTime(2018, 12, 16, 14, 47, 48, 0, DateTimeKind.Unspecified), null, (short)7, new DateTime(2019, 1, 2, 14, 21, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/theel0ja/uMatrix-rules/master/my-umatrix-rules.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1568, null, "Filter that enables removing of the ads from websites with English content.", "https://filters.adtidy.org/extension/chromium/filters/2_optimized.txt", null, null, "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Base Filter Optimized", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, "https://filters.adtidy.org/extension/chromium/filters/2_optimized.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)820, null, null, null, null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uMatrix - Rulesets for English websites", null, new DateTime(2018, 1, 29, 19, 26, 53, 0, DateTimeKind.Unspecified), null, (short)7, new DateTime(2018, 10, 28, 22, 23, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/recipes/recipes_en.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)367, null, "uMatrix ruleset unbreaks all Alexa 100 and more at domain level", "https://github.com/uMatrix-Rules/uMatrix-Rules-Domain", null, "lolipopplus@protonmail.com", null, "https://umatrix-rules.github.io/", "https://github.com/uMatrix-Rules/uMatrix-Rules-Domain/issues", (short)9, "uMatrix Rules - Domain", null, new DateTime(2017, 9, 5, 6, 7, 1, 0, DateTimeKind.Unspecified), null, (short)7, new DateTime(2019, 1, 27, 7, 12, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uMatrix-Rules/uMatrix-Rules-Domain/master/rules.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1971, null, "These rules are against all kinds of ad blocking reinjection/circumvention scripts, which does not affect the functioning of site", "https://kb.adguard.com/en/general/adguard-ad-filters#annoyances-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Annoyances Filter - Anti-Adblock Only", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, "https://raw.githubusercontent.com/AdguardTeam/AdguardFilters/master/AnnoyancesFilter/sections/antiadblock.txt", null, null },
                    { (short)1970, null, "Banners of mobile apps for the sites.", "https://kb.adguard.com/en/general/adguard-ad-filters#annoyances-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Annoyances Filter - Mobile App Only", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, "https://raw.githubusercontent.com/AdguardTeam/AdguardFilters/master/AnnoyancesFilter/sections/mobile-app.txt", null, null },
                    { (short)1969, null, "Rules for blocking push notifications.", "https://kb.adguard.com/en/general/adguard-ad-filters#annoyances-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Annoyances Filter - Push Notifications Only", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, "https://raw.githubusercontent.com/AdguardTeam/AdguardFilters/master/AnnoyancesFilter/sections/push-notifications.txt", null, null },
                    { (short)1968, null, "Blocks empty leftover boxes.", "https://kb.adguard.com/en/general/adguard-ad-filters#annoyances-filter", null, "https://forum.adguard.com/index.php?categories/filter-rules.66/", "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard Annoyances Filter - Remains Only", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, "https://raw.githubusercontent.com/AdguardTeam/AdguardFilters/master/AnnoyancesFilter/sections/remains.txt", null, null },
                    { (short)1915, null, null, null, null, null, "https://github.com/unchartedsky/adguard-kr", "https://github.com/unchartedsky/adguard-kr/issues", (short)5, "AdGuard KR", null, null, (short)6, "https://raw.githubusercontent.com/unchartedsky/adguard-kr/master/adguard-kr.txt", null, null },
                    { (short)1860, null, "This is a filter to fix bugs in AdGuard for Android when using Japanese websites / Japanese apps / 280blocker.", null, null, null, "https://github.com/nanj-adguard2/nanj-kaishuu-filter", null, (short)20, "Nanj Kaishuu Filter", null, null, (short)6, "https://raw.githubusercontent.com/nanj-adguard2/nanj-kaishuu-filter/master/nanj-kaishuu-filter.txt", null, null },
                    { (short)1855, null, "AdBlock filter", null, null, null, "https://github.com/likelion-adblock/filter/", null, (short)5, "LionBlock", null, null, (short)6, "https://raw.githubusercontent.com/likelion-adblock/filter/master/filter.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1587, null, "Most anti-malware lists are pretty big and can cover a 5- or 6-digit amount of specific domains. But my list hereby claims to remove more than 25% of all known malware sites with just a 2-digit amount of entries. This is mostly done by blocking top-level domains that have become devastatingly abused by spammers, usually because they allowed for free and uncontrolled domain registrations. There's also additional categories that cover unusual malware and phishing domains that very few other lists seem to cover.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Anti-Malware%20List.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Anti-Malware List (for AdGuard)", null, new DateTime(2018, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)6, new DateTime(2019, 4, 19, 0, 21, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareAdGuard.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Alternate%20versions%20Anti-Malware%20List/AntiMalwareAdGuard.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareAdGuard.txt" },
                    { (short)1581, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters. uBO users should use the regular version instead.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (for AdGuard)", null, new DateTime(2019, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)6, new DateTime(2019, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersAdGuard.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersAdGuard.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersAdGuard.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1570, null, "EasyList Germany + AdGuard German filter. Filter list that specifically removes ads on websites in German language.", "https://filters.adtidy.org/extension/chromium/filters/6_optimized.txt", null, null, "https://github.com/AdguardTeam/AdguardFilters", "https://github.com/AdguardTeam/AdguardFilters/issues", (short)12, "AdGuard German Filter Optimized", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)6, "https://filters.adtidy.org/extension/chromium/filters/6_optimized.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)368, null, "uMatrix ruleset unbreaks all Alexa 100 and more at site level", "https://github.com/uMatrix-Rules/uMatrix-Rules-Site", null, "lolipopplus@protonmail.com", null, "https://umatrix-rules.github.io/", "https://github.com/uMatrix-Rules/uMatrix-Rules-Site/issues", (short)9, "uMatrix Rules - Site", null, new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)7, new DateTime(2018, 3, 22, 1, 17, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uMatrix-Rules/uMatrix-Rules-Site/master/rules.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)513, null, "This filter disables some Ad and Tracking Hosts in uBlock", "https://raw.githubusercontent.com/hit3shjain/Andromeda-ublock-list/master/hosts.txt", null, null, "https://github.com/hit3shjain/Andromeda-ublock-list", "https://github.com/hit3shjain/Andromeda-ublock-list/issues", (short)2, "Andromeda uBlock List", null, new DateTime(2018, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 20, 17, 15, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/hit3shjain/Andromeda-ublock-list/master/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1854, null, "Custom Ad Filters. Can be used in uBlock Origin.", null, null, null, "https://github.com/masterinspire/Master-AdRules", null, (short)13, "Master Inspire", null, null, (short)4, "https://raw.githubusercontent.com/masterinspire/Master-AdRules/master/Master-AdRules.txt", null, null },
                    { (short)1852, null, "A filter for uBO that aims to remove regional Thai ads, tracking, scams and badware.", null, null, null, "https://github.com/adblock-thai/thai-ads-filter", null, (short)2, "Thai Ads Filters", null, null, (short)4, "https://adblock-thai.github.io/thai-ads-filter/subscription.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)861, null, "Yet another anti-bullshit filter list.", "https://github.com/bogachenko/filterlist", null, "bogachenkove@gmail.com", null, "https://github.com/bogachenko/filterlist", null, (short)11, "bogachenko's Filter List", null, new DateTime(2018, 10, 1, 13, 53, 10, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 14, 8, 53, 51, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bogachenko/filterlist/master/filterlist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)855, null, @"Internetizens: Fights to the death over their obsession with light/dark themes.
Me, an intellectual: Creates these pink themes that look colourful, that are easy on the eye, and which helps make your life that little bit more fun.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/MeWe%20Pink%20Theme.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Pink Theme", null, null, (short)4, new DateTime(2019, 4, 8, 2, 30, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/MeWe%20Pink%20Theme.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/MeWe%20Pink%20Theme.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/MeWe%20Pink%20Theme.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)846, null, "A zero tolerance version of Thai Paranoid Block, you need to be careful before using this because this filter will be strict blocking well-known ads and trackings that use in Thai sites without any reasonable to whitelist them!", "https://github.com/kowith337/ThaiParanoidBlock/blob/maximum/readme.md", null, null, "https://github.com/kowith337/ThaiParanoidBlock/tree/maximum", "https://github.com/kowith337/ThaiParanoidBlock/issues", (short)13, "Thai Paranoid Block ~Maximum~", null, new DateTime(2016, 1, 9, 17, 8, 54, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 1, 16, 46, 44, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/ThaiParanoidBlock/maximum/ThaiParanoid.txt", "https://gitlab.com/kowith337/ThaiParanoidBlock/raw/maximum/ThaiParanoid.txt", null },
                    { (short)844, null, "Sublist of Facebook filter to prevent some 'modules' connections, e.g. content chaining (click external link, like, react or save posts) that show the suggestions under posts that you've acted on.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/filterlist/facebook/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=label%3A%22Site%3A+Facebook%22", (short)13, "Facebook Modules Command List", null, new DateTime(2018, 9, 26, 14, 26, 24, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 13, 13, 32, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/filterlist/facebook/FacebookCommands.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/filterlist/facebook/FacebookCommands.txt", null },
                    { (short)843, null, "Zuckestion is not a typo! this filterlist is build nearly from scratch based on personal usage experience of Facebook to eliminated most of ads, tracking, telemetry, suggestions that I've found by myself and then share these rules as filterlist, also support basic mode and touch mode for mobile browser users (Only support on Firefox for Android or any related forks that can install uBlock Origin extension). However, this list won't support Facebook site or domains that serve under 'Free Basics' services.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/filterlist/facebook/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=label%3A%22Site%3A+Facebook%22", (short)13, "Facebook Zuckestion Killer", null, new DateTime(2018, 9, 26, 14, 26, 24, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 13, 2, 47, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/filterlist/facebook/FacebookZuckestionKiller.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/filterlist/facebook/FacebookZuckestionKiller.txt", null },
                    { (short)824, null, "Simple list for uBlock (and perhaps Adblock) for blocking popovers", "https://github.com/mistalaba/popover-blocklist#popover-blocklist", null, null, "https://github.com/mistalaba/popover-blocklist", "https://github.com/mistalaba/popover-blocklist/issues", (short)2, "popover-blocklist", null, new DateTime(2015, 9, 25, 8, 2, 24, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 1, 6, 8, 29, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mistalaba/popover-blocklist/master/blocklist.txt", null, null },
                    { (short)807, null, "This is a cosmetic filter for the uBlock Origin extension (with adblock support) to automatically filter all the pro-5-Star comments and the 'anti-information' pages they share with sensationalistic headlines.", "https://github.com/luigimannoni/m5s-ublock-filter#cosa-%C3%A9", null, null, "https://github.com/luigimannoni/m5s-ublock-filter", "https://github.com/luigimannoni/m5s-ublock-filter/issues", (short)5, "M5S uBlock Filter", null, new DateTime(2018, 2, 19, 19, 39, 12, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 2, 19, 20, 12, 53, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/luigimannoni/m5s-ublock-filter/master/filter-list.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)805, null, "A combined version of the filterlist RU AdList against advertising, and an experimental list of cosmetic CSS style fixes. At the moment it only works normally in uBlock Origin.", "https://easylist-downloads.adblockplus.org/advblock+cssfixes.txt", null, "https://forums.lanik.us/viewforum.php?f=102", "https://forums.lanik.us/viewforum.php?f=102", null, (short)16, "RU AdList + CSS Fixes", null, null, (short)4, new DateTime(2019, 4, 17, 0, 5, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/advblock+cssfixes.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)747, null, "A filterlist to block ads. It's specifically written for uBlock Origin, but still compatible with most ad blockers. However, some filters could only be detected by uBO. Main focus of this filter list is to cover Parsi websites and also most-visited websites in Iran, or other Parsi speaking countries, that are not covered by other major filter lists.", "https://github.com/nimasaj/uBOPa#ubopa---ubo-parsi-filter-list", null, null, "https://github.com/nimasaj/uBOPa", "https://github.com/nimasaj/uBOPa/issues", (short)2, "uBOPa", null, new DateTime(2018, 8, 21, 7, 52, 21, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 2, 10, 2, 59, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/nimasaj/uBOPa/master/uBOPa.txt", "https://mynext.pro/uBOPa.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)746, null, "By using this extension, you can block ads that you think are annoying while browsing on websites that you like to explore. You can also save internet quota usage or speed up website loading, so you can save time.", "https://github.com/Hakame-kun/uBlock-Filters-Indonesia/tree/master/uBlock%20Indo#ublock", null, null, "https://github.com/Hakame-kun/uBlock-Filters-Indonesia", "https://github.com/Hakame-kun/uBlock-Filters-Indonesia/issues", (short)5, "uBlock Indo", null, null, (short)4, new DateTime(2019, 4, 16, 23, 19, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Hakame-kun/uBlock-Filters-Indonesia/master/uBlock%20Indo/ubindo.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)744, null, "How to filter out advertisements and noise on Stack Overflow", "https://raw.githubusercontent.com/Hunter-Github/the-best-stack-overflow/master/se_filters.txt", null, null, "https://github.com/Hunter-Github/the-best-stack-overflow", "https://github.com/Hunter-Github/the-best-stack-overflow/issues", (short)5, "The Best Stack Overflow", null, new DateTime(2018, 5, 26, 14, 55, 11, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 11, 14, 38, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Hunter-Github/the-best-stack-overflow/master/se_filters.txt", null, null },
                    { (short)862, null, "This filterlist only works for uBlock Origin and other proper forks (I only recommend NanoAdBlocker than others) because it's borrow the strict blocking ability to prevent navigation to specific sites that have unnecessary parameters added to keep track users regardless of privacy settings (DNT, cookies, referer, etc.), the internal strict blocking possibly to reveal real URLs under the warning sign and also divide each parameters to make sure you're going to the legitmate destination, however, you need to make manual text selection to exclude tracking parameters if some sites have multiple parameters and internal strict blocking cannot divide or clean-up target URL properly.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/filterlist/other/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues", (short)13, "Anti Survived Tracking Link Warning", null, new DateTime(2018, 10, 26, 16, 23, 11, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 23, 13, 45, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/filterlist/other/SurvivedTrackingLinkWarning.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/filterlist/other/SurvivedTrackingLinkWarning.txt", null },
                    { (short)743, null, "In this repo I'm keeping all custom filter rules I'm using for the sites I'm typically visit. Some of them are trying to \"mask\" ad or make it \"native\". But this is not what I want to see.", "https://github.com/akopachov/uBlock-AK-filter-rules#ublock-filter-rules", null, null, "https://github.com/akopachov/uBlock-AK-filter-rules", "https://github.com/akopachov/uBlock-AK-filter-rules/issues", (short)2, "uBlock AK Filter Rules", null, new DateTime(2018, 1, 3, 10, 34, 27, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 1, 11, 31, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/akopachov/uBlock-AK-filter-rules/master/entertainment", null, null },
                    { (short)734, null, "Filterlist that targeted to use on Gelbooru image board site.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/filterlist/imageboard/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=label%3A\"Site%3A+Gelbooru\"", (short)13, "GelboLube", null, new DateTime(2018, 9, 27, 13, 46, 5, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 12, 8, 33, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/filterlist/imageboard/GelboLube.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/filterlist/imageboard/GelboLube.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)729, null, "Blocks crap on websites", "https://github.com/theel0ja/CrapBlock#crapblock", null, "elias.ojala+github@kapsi.fi", null, "https://crapblock.theel0ja.info/", "https://github.com/theel0ja/CrapBlock/issues", (short)5, "CrapBlock Annoyances", null, new DateTime(2018, 2, 14, 16, 27, 38, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 21, 0, 14, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/theel0ja/CrapBlock/master/crapblock-annoyances.txt", "https://crapblock.theel0ja.info/crapblock-annoyances.txt", "https://gitlab.com/theel0ja/crapblock/raw/master/crapblock-annoyances.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)721, null, "This list started as a replica of the content that was on the AntiNónio project at https://nonio.pt/ublock.html. However, since this content contained several addresses that I don't think should be included in it, I decided to redo it and make it more dynamic.", "https://github.com/brunomiguel/antinonio/blob/master/README.md", null, null, "https://github.com/brunomiguel/antinonio", "https://github.com/brunomiguel/antinonio/issues", (short)8, "AntiNónio - Bruno Miguel", null, new DateTime(2018, 1, 28, 11, 53, 55, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 2, 5, 21, 16, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/brunomiguel/antinonio/master/antinonio.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)720, null, "Nónio - The platform that violates your privacy.", null, null, null, "https://nonio.pt/ublock.html", null, (short)5, "AntiNónio", null, null, (short)4, new DateTime(2019, 4, 16, 22, 27, 11, 0, DateTimeKind.Unspecified), "https://nonio.pt/antinonio.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)663, null, null, null, null, null, "https://nmtrung.com/fmsf-2/", "https://github.com/nmtrung/FMSF-2.0/issues", (short)5, "FSMF 2", null, new DateTime(2017, 1, 5, 4, 44, 41, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 10, 13, 10, 17, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/nmtrung/FMSF-2.0/master/fmsf_2.0.txt", null, null },
                    { (short)661, null, "Block annoying web elements and reclaim lost screen real estate - Unsuck the web and make it more user friendly!", null, null, null, "https://github.com/yourduskquibbles/webannoyances", "https://github.com/yourduskquibbles/webannoyances/issues", (short)8, "Web Annoyances Ultralist - Social Filters", null, new DateTime(2018, 7, 28, 20, 33, 58, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 12, 19, 21, 51, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yourduskquibbles/webannoyances/master/filters/social_filters.txt", null, null },
                    { (short)659, null, "Block annoying web elements and reclaim lost screen real estate - Unsuck the web and make it more user friendly!", null, null, null, "https://github.com/yourduskquibbles/webannoyances", "https://github.com/yourduskquibbles/webannoyances/issues", (short)8, "Web Annoyances Ultralist - Modal Overlay Filters", null, new DateTime(2018, 8, 1, 13, 56, 25, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 13, 1, 57, 27, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yourduskquibbles/webannoyances/master/filters/modal_filters.txt", null, null },
                    { (short)614, null, "Filters that remove internal tags that do not match the subject of the article, which are easily accidentally clicked. Inspired by Agora Tag Links Remove extension.", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_tagged_internal_links.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters - Tagged Internal Links", null, new DateTime(2018, 6, 27, 17, 32, 2, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)4, new DateTime(2019, 4, 5, 22, 3, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_tagged_internal_links.txt", null, null },
                    { (short)601, null, "A filterlist to prevent sites that know to trick and gain 'Facebook access token' from you that their site offer to boost likes, followers, comments, post shares, etc. while gain access your account to do the same for others.", null, null, null, "https://github.com/kowith337/ThaiAntiTokenSites", "https://github.com/kowith337/ThaiAntiTokenSites/issues", (short)13, "ThaiAntiTokenSites", null, new DateTime(2016, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 10, 5, 10, 19, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/ThaiAntiTokenSites/master/AntiPumpSites.txt", "https://gitlab.com/kowith337/ThaiAntiTokenSites/raw/master/AntiPumpSites.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)563, null, "Filter list for Adguard", "https://github.com/andromedarabbit/List-KR", null, "plaintext@andromedarabbit.net", null, "https://github.com/andromedarabbit/List-KR", null, (short)8, "List-KR (andromedarabbit)", null, new DateTime(2016, 5, 13, 13, 2, 19, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2018, 6, 14, 13, 44, 17, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/andromedarabbit/List-KR/master/filter.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)515, null, "BarbBlock is a content blocking list with standalone browser extensions for Chrome and Firefox. It blacklists sites which have used DMCA takedowns to force removal from other content blocking lists. Such takedowns are categorically invalid, but they can be effective at intimidating small open-source projects into compliance.", "https://github.com/paulgb/BarbBlock/blob/master/README.md", null, null, "https://ssl.bblck.me/", "https://github.com/paulgb/BarbBlock/issues", (short)2, "BarbBlock uBlock Origin", null, null, (short)4, new DateTime(2019, 1, 14, 8, 45, 10, 0, DateTimeKind.Unspecified), "https://ssl.bblck.me/blacklists/ublock-origin.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)735, null, "Help blocking ads, unnecessary widgets and also prevent anti-adblock cooldown on APKMirror.", null, null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=label%3A\"Site%3A+APKMirror\"", (short)13, "Anti APKMirror Ads and Countdown", null, new DateTime(2018, 9, 26, 14, 26, 24, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 13, 13, 32, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/filterlist/specific/AntiAPKMirrorCountdown.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/filterlist/specific/AntiAPKMirrorCountdown.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1853, null, "A filter that aims to remove annoyances and unnecessary bloat.", null, null, null, "https://github.com/adblock-thai/thai-ads-filter", null, (short)2, "Thai Annoyance Filters", null, null, (short)4, "https://adblock-thai.github.io/thai-ads-filter/annoyance.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)868, null, "Advertisement blocking.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Mochi Filter", null, new DateTime(2017, 7, 18, 5, 46, 21, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 3, 23, 48, 27, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/mochi_filter.txt", null, null },
                    { (short)871, null, "Advertisement blocking.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Mochi Filter Extended", null, new DateTime(2017, 7, 18, 5, 46, 21, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 10, 21, 46, 1, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/mochi_filter_extended.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1833, null, "Dark theme for filterlists.com for uBO & AdGuard", null, null, "hawkeye116477@gmail.com", null, "https://github.com/hawkeye116477/FilterListsDarkMode", "https://github.com/hawkeye116477/FilterListsDarkMode/issues", (short)8, "FilterLists Dark Mode", null, null, (short)4, "https://raw.githubusercontent.com/hawkeye116477/FilterListsDarkMode/master/DarkFilterLists.txt", null, null },
                    { (short)1737, null, "Are you pro-metric and are tired of seeing imperial unites all over the English-language parts of the internet? If so, then here's a list for you.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Imperial Units Remover", null, null, (short)4, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Imperial%20Units%20Remover.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Imperial%20Units%20Remover.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Imperial%20Units%20Remover.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1720, null, "Blocklist for suspicious websites involved with possible tracking, spam, or malware; meant to supplement mainstream blocklists.", null, null, null, "https://github.com/VernonStow/Filterlist/", "https://github.com/VernonStow/Filterlist//issues", (short)5, "Grayware Filterlist", null, null, (short)4, "https://raw.githubusercontent.com/VernonStow/Filterlist/master/Filterlist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1663, null, "Fixes what my current subscriptions broke", null, null, null, "https://github.com/Strappazzon/filterlists", "https://github.com/Strappazzon/filterlists/issues", (short)2, "Strappazzon's Unbreak", null, null, (short)4, new DateTime(2019, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Strappazzon/filterlists/master/Filterlists/Unbreak.txt", null, null },
                    { (short)1662, null, "Blocks annoyances on web pages including cookie notices, modals and other useless elements", null, null, null, "https://github.com/Strappazzon/filterlists", "https://github.com/Strappazzon/filterlists/issues", (short)2, "Strappazzon's Annoyances filter list", null, null, (short)4, new DateTime(2019, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Strappazzon/filterlists/master/Filterlists/Annoyances.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1649, null, null, null, null, null, "https://github.com/migueldemoura/ublock-umatrix-rulesets", "https://github.com/migueldemoura/ublock-umatrix-rulesets/issues", (short)8, "migueldemoura's uBlock List - Facebook Groups-Events", null, null, (short)4, "https://raw.githubusercontent.com/migueldemoura/ublock-umatrix-rulesets/master/uBlock/facebook/groups-events", null, null },
                    { (short)1648, null, null, null, null, null, "https://github.com/migueldemoura/ublock-umatrix-rulesets", "https://github.com/migueldemoura/ublock-umatrix-rulesets/issues", (short)8, "migueldemoura's uBlock List", null, null, (short)4, "https://raw.githubusercontent.com/migueldemoura/ublock-umatrix-rulesets/master/uBlock/list", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1593, null, "This is a version of \"Dandelion Sprout's Nordic Filters\" for advanced tech users ONLY! It aims to not whitelist any trackers, but at the cost of some web elements being broken, and the presence of page warnings on aggregate/cashback site links.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (without tracker whitelistings)", null, new DateTime(2019, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPrivacy.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPrivacy.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPrivacy.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1577, null, null, null, "https://opencollective.com/adnauseam", null, "https://github.com/dhowe/uAssets", null, (short)4, "AdNauseam Filters", null, null, (short)4, "https://raw.githubusercontent.com/dhowe/uAssets/master/filters/adnauseam.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1576, null, "This list is a proof-of-concept for Nano and uBO only (Not AdGuard), which aims to replace websites' custom cursors with the default OS cursor.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Custom cursors' List", null, new DateTime(2019, 5, 11, 13, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 5, 11, 13, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-'Custom%20cursors'%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-'Custom%20cursors'%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-'Custom%20cursors'%20List.txt" },
                    { (short)1558, null, "Filters for blocking pop-ups and anti-adblock bypass.", "https://github.com/bogachenko/fuckfuckadblock", null, "bogachenkove@gmail.com", null, "https://github.com/bogachenko/fuckfuckadblock", "https://github.com/bogachenko/fuckfuckadblock/issues", (short)2, "Fuck Fuckadblock", null, new DateTime(2019, 3, 20, 7, 29, 20, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 14, 20, 55, 35, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bogachenko/fuckfuckadblock/master/fuckfuckadblock.txt", null, null },
                    { (short)869, null, "Advertisement blocking.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Mochi Filter 2gun", null, new DateTime(2017, 9, 17, 22, 15, 28, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 2, 27, 19, 29, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/mochi_filter_2gun.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1556, null, "Prevent Game of Thrones spoilers", "https://raw.githubusercontent.com/ColumWalsh/unsullied/master/unsullied.txt", "https://www.svp.ie/get-involved/donate/single-donation.aspx", null, "https://github.com/ColumWalsh/unsullied", "https://github.com/ColumWalsh/unsullied/issues", (short)2, "Unsullied", null, new DateTime(2019, 4, 6, 17, 25, 19, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 7, 23, 39, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ColumWalsh/unsullied/master/unsullied.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1535, null, "As someone who is a translation validator for WordPress.com and WordPress' phone apps, this list fixes some minor botherances to make the process of going through hundreds of strings and suggestions slightly easier. So now I'm sharing them with the world as well.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/WordPressTranslatorAssistant.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Assistant list for WordPress validators and translators", null, new DateTime(2018, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 27, 4, 4, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/WordPressTranslatorAssistant.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/WordPressTranslatorAssistant.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/WordPressTranslatorAssistant.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1533, null, "Filters to address issues specific to legacy versions of uBO.", "https://github.com/uBlockOrigin/uAssets/blob/master/filters/legacy.txt", null, null, "https://github.com/uBlockOrigin/uAssets", "https://github.com/uBlockOrigin/uAssets/issues", (short)4, "uAssets Legacy", null, new DateTime(2019, 3, 15, 15, 49, 43, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 16, 20, 53, 3, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/legacy.txt", null, null },
                    { (short)1304, null, "Bring back the \"Square\" layout (similar to Windows 8's metro) because circles and material design is too mainstream.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/filterlist/ubo-css/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues", (short)13, "iHateCircles", null, new DateTime(2018, 10, 18, 14, 19, 38, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 13, 13, 32, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/filterlist/ubo-css/iHateCircles.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/filterlist/ubo-css/iHateCircles.txt", null },
                    { (short)1303, null, "Collections of custom filters (mostly about DOM elements) that not yet categorised or not fit to any topics of the creator's repo yet.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/filterlist/other/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues", (short)13, "kowith337's Miscellaneous Annoyance", null, new DateTime(2018, 9, 27, 14, 26, 13, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 5, 17, 22, 49, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/filterlist/other/MiscAnnoyance.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/filterlist/other/MiscAnnoyance.txt", null },
                    { (short)1297, "https://discord.me/yourduskquibbles", "Block annoying web elements and reclaim lost screen real estate - Unsuck the web and make it more user friendly!", null, null, null, "https://github.com/yourduskquibbles/webannoyances", "https://github.com/yourduskquibbles/webannoyances/issues", (short)8, "Web Annoyances Ultralist - CSS Style Modifying Filters", null, new DateTime(2019, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 10, 20, 37, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yourduskquibbles/webannoyances/master/filters/css_style_filters.txt", null, null },
                    { (short)1288, null, "Removes empty ads placeholders", "https://raw.githubusercontent.com/NanoAdblockerLab/NanoContrib/master/dist/placeholder-buster.txt", null, null, "https://github.com/NanoAdblockerLab/NanoContrib", null, (short)4, "Nano Contrib Filter - Placeholder Buster", null, new DateTime(2018, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 6, 1, 32, 35, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/NanoAdblockerLab/NanoContrib/master/dist/placeholder-buster.txt", "https://gitcdn.xyz/repo/NanoAdblockerLab/NanoContrib/master/dist/placeholder-buster.txt", null },
                    { (short)1283, null, "A filter to make the web better", null, null, null, "https://github.com/AnXh3L0/blocklist", "https://github.com/AnXh3L0/blocklist/issues", (short)5, "Adblock List for Albania", null, new DateTime(2018, 12, 29, 22, 36, 5, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 2, 17, 19, 31, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/AnXh3L0/blocklist/master/albanian-easylist-addition/Albania.txt", null, null },
                    { (short)1281, null, "Oficjalne polskie filtry przeciwko alertom o Adblocku - uzupełnienie dla uBlock Origin", "https://raw.githubusercontent.com/olegwukr/polish-privacy-filters/master/anti-adblock-suplement.txt", null, null, "https://github.com/olegwukr/polish-privacy-filters", "https://github.com/olegwukr/polish-privacy-filters/issues", (short)8, "Polish Anti Adblock Filters - supplement for uBlock Origin", null, new DateTime(2018, 12, 5, 18, 42, 28, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 31, 18, 5, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/olegwukr/polish-privacy-filters/master/anti-adblock-suplement.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1278, null, "A filterlist that use in \"Better\" app on the iOS devices (iPhone, iPad, MacOS)", "https://better.fyi", null, "hello@ind.ie", null, "https://better.fyi", "https://forum.ind.ie/c/better/support", (short)8, "Better content blocking rules", null, null, (short)4, new DateTime(2019, 4, 8, 10, 57, 11, 0, DateTimeKind.Unspecified), "https://better.fyi/blockerList.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)879, null, "Filter for phones.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Egg Filter", null, new DateTime(2017, 10, 7, 21, 4, 35, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 2, 0, 41, 24, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/tamago_filter.txt", null, null },
                    { (short)878, null, "Blocks ads for adult sites.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Strawberry Filter", null, new DateTime(2017, 7, 18, 5, 46, 21, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 4, 5, 16, 18, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/ichigo_filter.txt", null, null },
                    { (short)1550, null, "Do you have a high-res or portrait monitor, and are feeling bothered by how websites still think that everyone are using low-res landscape monitors? Well, here's how to stretch them out like a piece of gum!", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/WebsiteStretcherVertical.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Website Stretcher - Vertical Edition", null, new DateTime(2019, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)4, new DateTime(2019, 3, 29, 17, 54, 49, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/WebsiteStretcherVertical.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/WebsiteStretcherVertical.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/WebsiteStretcherVertical.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1242, null, null, null, null, null, "https://github.com/Akamaru/Adblock-Filterliste", "https://github.com/Akamaru/Adblock-Filterliste/issues", (short)33, "Aka's Filter Liste", null, new DateTime(2015, 12, 11, 14, 0, 18, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 2, 17, 17, 54, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Adblock-Filterliste/master/filterlist.txt", null, null },
                    { (short)884, null, "Finnish adblock list", "https://raw.githubusercontent.com/finnish-easylist-addition/finnish-easylist-addition/master/Finland_adb.txt", null, null, "https://github.com/finnish-easylist-addition/finnish-easylist-addition", "https://github.com/finnish-easylist-addition/finnish-easylist-addition/issues", (short)11, "Adblock List for Finland", null, new DateTime(2018, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 29, 14, 39, 41, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/finnish-easylist-addition/finnish-easylist-addition/master/Finland_adb.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)881, null, null, null, null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "YouTube Filter for Blocking Ads", null, new DateTime(2017, 11, 4, 9, 54, 29, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 1, 14, 15, 0, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/youtube_wo_tonikaku_filter.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)245, null, "Help you to block ads in Thailand websites.", "https://github.com/easylist-thailand/easylist-thailand", null, null, "https://easylist-thailand.github.io/", "https://github.com/easylist-thailand/easylist-thailand/issues", (short)18, "EasyList Thailand", null, new DateTime(2017, 4, 22, 16, 36, 12, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 29, 15, 24, 15, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/easylist-thailand/easylist-thailand/master/subscription/easylist-thailand.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)243, null, "This EasyList variant does not contain filters for adult domains.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "easylist.subscription@gmail.com", "https://forums.lanik.us/viewforum.php?f=23", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyList Without Rules for Adult Sites", null, null, (short)3, new DateTime(2019, 4, 8, 11, 18, 13, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylist_noadult.txt", null, null },
                    { (short)242, null, "EasyPrivacy is an optional supplementary filter list that completely removes all forms of tracking from the internet, including web bugs, tracking scripts and information collectors, thereby protecting your personal data.", "https://easylist.to/", null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyPrivacy", null, null, (short)3, new DateTime(2019, 4, 8, 10, 51, 11, 0, DateTimeKind.Unspecified), "https://easylist.to/easylist/easyprivacy.txt", "https://fanboy.co.nz/easyprivacy.txt", "https://easylist-downloads.adblockplus.org/easyprivacy.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)241, null, "A list combining EasyPrivacy and EasyList.", null, null, null, null, null, (short)4, "EasyPrivacy + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 13, 57, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easyprivacy+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)240, null, "This EasyPrivacy variant does not contain rules for international domains.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyPrivacy Without International Filters", null, null, (short)3, new DateTime(2019, 4, 8, 10, 45, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easyprivacy_nointernational.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)239, null, "Testing unsafe rules for EasyList that will break certain websites.", "https://easylist-downloads.adblockplus.org/easytest.txt", null, "https://forums.lanik.us/viewtopic.php?t=8505", "https://forums.lanik.us/viewtopic.php?t=8505", null, (short)4, "EasyTest", null, null, (short)3, new DateTime(2019, 4, 8, 10, 39, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easytest.txt", null, null },
                    { (short)237, null, "Blocks Estonian regional advertisements and trackers.", null, null, null, "https://adblock.ee/", null, (short)28, "Eesti Custom Sites Filter", null, null, (short)3, new DateTime(2019, 2, 17, 18, 41, 11, 0, DateTimeKind.Unspecified), "https://adblock.ee/list.php", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)236, null, "Block all Facebook annoyances.", "https://facebook.adblockplus.me/", "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://facebook.adblockplus.me/", null, (short)5, "Facebook Annoyances Blocker", null, null, (short)3, new DateTime(2019, 4, 8, 10, 21, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/fb_annoyances_full.txt", null, null },
                    { (short)235, null, "Block only news feed annoyances.", "https://facebook.adblockplus.me/", "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://facebook.adblockplus.me/", null, (short)5, "Facebook News Feed Annoyances Blocker", null, null, (short)3, new DateTime(2019, 4, 8, 10, 11, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/fb_annoyances_newsfeed.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)232, null, "Targeting sites with Hoax, propanganda and clickbait (fake sites). Note: List doesn't include harmless spoof/satire sites like theonion.com.", "https://raw.githubusercontent.com/ryanbr/fanboy-adblock/master/fake-news.txt", "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "https://forums.lanik.us/viewtopic.php?f=88&t=34971", "https://github.com/ryanbr/fanboy-adblock", "https://github.com/ryanbr/fanboy-adblock/issues", (short)16, "Fake-News List", null, new DateTime(2017, 1, 5, 8, 16, 11, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 3, 10, 3, 52, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ryanbr/fanboy-adblock/master/fake-news.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)229, null, "Block only comments.", "https://youtube.adblockplus.me/", "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://youtube.adblockplus.me/", null, (short)5, "YouTube: Remove Comments", null, null, (short)3, new DateTime(2019, 4, 15, 20, 23, 13, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/yt_annoyances_comments.txt", null, null },
                    { (short)246, null, "Spanish supplement for EasyList.", "https://adblockplus.org/subscriptions", null, "easylist.spanish@gmail.com", "https://forums.lanik.us/viewforum.php?f=103", "https://easylist.to/", null, (short)4, "EasyList Spanish", null, null, (short)3, new DateTime(2019, 4, 8, 11, 54, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistspanish.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)228, null, "Ad blocking rules for Iranian/Persian websites.", "https://github.com/farrokhi/adblock-iran", null, null, "https://github.com/farrokhi/adblock-iran", "https://github.com/farrokhi/adblock-iran/issues", (short)27, "Adblock Iran", null, new DateTime(2016, 10, 14, 17, 36, 56, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 11, 20, 51, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/farrokhi/adblock-iran/master/filter.txt", "https://rawcdn.githack.com/farrokhi/adblock-iran/master/filter.txt", null },
                    { (short)224, null, "Filters that hide and block messages about cookies and GDPR/privacy policy on Polish websites.", null, "https://patronite.pl/polskiefiltry", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Polish GDPR-Cookies Filters", null, new DateTime(2015, 9, 17, 9, 35, 37, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 14, 13, 30, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/cookies_filters/adblock_cookies.txt", "https://gitcdn.xyz/repo/MajkiIT/polish-ads-filter/master/cookies_filters/adblock_cookies.txt", "https://rawcdn.githack.com/MajkiIT/polish-ads-filter/master/cookies_filters/adblock_cookies.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)223, null, "Presented here filter set was created for Polish internet users. Contains a list of elements of advertising, such as banners or flash animations, the most commonly used on Polish websites.", "https://www.certyficate.it/polski-filtr-adblock-ublock-origin-adblock-plus-nano-adblocker-adguard/", "https://patronite.pl/polskiefiltry", "errors@certyficate.it", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Official Polish Filters for AdBlock, uBlock Origin & AdGuard", null, new DateTime(2015, 9, 17, 9, 36, 26, 0, DateTimeKind.Unspecified), "https://www.certyficate.it/kontakt/", (short)3, new DateTime(2019, 4, 14, 13, 0, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/polish-adblock-filters/adblock.txt", "https://gitcdn.xyz/repo/MajkiIT/polish-ads-filter/master/polish-adblock-filters/adblock.txt", "https://rawcdn.githack.com/MajkiIT/polish-ads-filter/master/polish-adblock-filters/adblock.txt" },
                    { (short)222, null, "A set of adblock filters to block advertisement in Persian websites.", "https://github.com/SlashArash/adblockfa/", null, "slasharash@protonmail.com", null, "https://github.com/SlashArash/adblockfa", "https://github.com/SlashArash/adblockfa/issues", (short)29, "AdBlockFarsi", null, new DateTime(2015, 12, 1, 10, 57, 44, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 1, 20, 19, 30, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/SlashArash/adblockfa/master/adblockfa.txt", "https://gitcdn.xyz/repo/SlashArash/adblockfa/master/adblockfa.txt", "https://rawcdn.githack.com/SlashArash/adblockfa/master/adblockfa.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)221, null, "Blocks Estonian regional advertisements and trackers.", null, null, "adblock@gurud.ee", null, "https://gurud.ee/veeb/adblock", null, (short)5, "Adblock Filters by Gurud.ee", null, null, (short)3, new DateTime(2018, 11, 20, 4, 33, 9, 0, DateTimeKind.Unspecified), "https://gurud.ee/ab.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)220, null, "Blocks Korean regional advertisements and trackers.", null, null, null, "https://code.google.com/archive/p/adblock-korea/", null, (short)10, "Adblock Korea", null, null, (short)3, new DateTime(2014, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://web.archive.org/web/20160411115130if_/http://adblock-korea.googlecode.com:80/git/adblock-korea.txt", null, null },
                    { (short)217, null, "Blocks Persian regional advertisements and trackers.", null, null, "https://adblockplus.org/forum/viewtopic.php?f=2&t=7658", "https://ideone.com/K452p", null, (short)5, "Adblock Persian List", null, null, (short)3, new DateTime(2019, 1, 27, 21, 38, 10, 0, DateTimeKind.Unspecified), "https://ideone.com/plain/K452p", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)216, null, "Filters that hide and block social network elements, i.e. widgets, pop-ups and other social elements on Polish websites. Fanboy's Social Blocking List is required for proper operation.", null, "https://patronite.pl/polskiefiltry", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Polish Social Filters", null, new DateTime(2016, 3, 2, 7, 42, 5, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 14, 13, 30, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/adblock_social_filters/adblock_social_list.txt", "https://gitcdn.xyz/repo/MajkiIT/polish-ads-filter/master/adblock_social_filters/adblock_social_list.txt", "https://rawcdn.githack.com/MajkiIT/polish-ads-filter/master/adblock_social_filters/adblock_social_list.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)215, null, "Adblock PL is official Poland filter list for AdBlock and Adblock Plus.", "https://github.com/adblockpolska/Adblock_PL_List", null, "adblockpolska@gmail.com", null, "https://www.facebook.com/adblockpl", "https://github.com/adblockpolska/Adblock_PL_List/issues", (short)4, "Adblock Polska", null, new DateTime(2014, 4, 21, 0, 24, 26, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2014, 11, 23, 1, 9, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/adblockpolska/Adblock_PL_List/master/adblock_polska.txt", "https://gitcdn.xyz/repo/adblockpolska/Adblock_PL_List/master/adblock_polska.txt", "https://rawcdn.githack.com/adblockpolska/Adblock_PL_List/master/adblock_polska.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)214, null, "The Adblock Warning Removal List specifically removes obtrusive messages and warnings targeted to users who use an adblocker.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "easylist.subscription+anti@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", null, (short)4, "Adblock Warning Removal List", null, null, (short)3, new DateTime(2019, 4, 15, 10, 48, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/antiadblockfilters.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)213, null, "Blocks ads on YouTube.", null, null, null, "https://github.com/kbinani/adblock-youtube-ads", null, (short)2, "Adblock YouTube Ads", null, new DateTime(2017, 1, 31, 12, 10, 47, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 28, 15, 30, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kbinani/adblock-youtube-ads/master/signed.txt", "https://gitcdn.xyz/repo/kbinani/adblock-youtube-ads/master/signed.txt", "https://rawcdn.githack.com/kbinani/adblock-youtube-ads/master/signed.txt" },
                    { (short)207, null, "Helps you keep your Ad-Blocker active, when you visit a website and it asks you to disable. Composed of a user script «AakScript» written in javascript and a filter list «AakList» using the same syntax as lists AdBlock and AdBlock Plus, the two are complementary and unlock different website.", "https://github.com/reek/anti-adblock-killer/blob/master/README.md", "https://github.com/reek/anti-adblock-killer/#donate", null, "https://github.com/reek/anti-adblock-killer/", "https://github.com/reek/anti-adblock-killer/issues", (short)8, "AakList (Anti-Adblock Killer)", null, new DateTime(2014, 4, 17, 16, 49, 31, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2016, 11, 17, 3, 1, 15, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/reek/anti-adblock-killer/master/anti-adblock-killer-filters.txt", "https://gitcdn.xyz/repo/reek/anti-adblock-killer/master/anti-adblock-killer-filters.txt", "https://rawcdn.githack.com/reek/anti-adblock-killer/master/anti-adblock-killer-filters.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)227, null, "Allow non-intrusive advertising.", "https://easylist-downloads.adblockplus.org/exceptionrules.txt", null, "info@eyeo.com", null, "https://acceptableads.com/", null, (short)5, "Acceptable Ads", null, null, (short)3, new DateTime(2019, 4, 15, 12, 39, 14, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/exceptionrules.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)206, null, "The ABP advertising filter is built with the mission of improving the browsing experience for the vietnamese users. ABPVN may not help block all ads, but ABPVN will minimize the appearance of ads on most websites in Vietnam.", "https://abpvn.com", "https://abpvn.com/donate/", "support@abpvn.com", null, "https://abpvn.com", null, (short)5, "ABPVN List", null, new DateTime(2016, 7, 10, 8, 55, 52, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 14, 10, 6, 45, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abpvn/abpvn/master/filter/abpvn.txt", "https://gitcdn.xyz/repo/abpvn/abpvn/master/filter/abpvn.txt", "https://rawcdn.githack.com/abpvn/abpvn/master/filter/abpvn.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)247, null, "In page Pop-Ups and other annoyances; thereby substantially decreasing web page loading times and uncluttering them (includes Fanboy's Social Blocking List and Fanboy's Cookiemonster List.)", "https://fanboy.co.nz/", "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)16, "Fanboy's Annoyance List", null, null, (short)3, new DateTime(2019, 4, 8, 11, 59, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/fanboy-annoyance.txt", "https://fanboy.co.nz/fanboy-annoyance.txt", "https://easylist.to/easylist/fanboy-annoyance.txt" },
                    { (short)250, null, "This will remove cookie and privacy warnings.", "https://fanboy.co.nz/", "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)16, "EasyList Cookie List", null, null, (short)3, new DateTime(2019, 11, 15, 11, 56, 0, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylist-cookie.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)290, null, "A list combining EasyList Hebrew and EasyList.", null, null, null, null, null, (short)7, "EasyList Hebrew + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 20, 2, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/israellist+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)289, null, "EasyList Italy is a filter list written by the EasyList author Khrin that specifically removes adverts on Italian language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "easylistitaly@gmail.com", "https://forums.lanik.us/viewforum.php?f=96", "https://easylist.to/", null, (short)4, "EasyList Italy", null, null, (short)3, new DateTime(2019, 4, 8, 19, 52, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistitaly.txt", null, null },
                    { (short)284, null, "On this page you can find updated lists to block unwanted content in your favorite browser. With their help, the pesky ads that some sites terrorizing customers will be hidden.", "https://stanev.org/abp/", null, "alex@stanev.org", null, "https://stanev.org/abp/", null, (short)4, "Bulgarian List", null, null, (short)3, new DateTime(2019, 4, 8, 19, 21, 11, 0, DateTimeKind.Unspecified), "https://stanev.org/abp/adblock_bg.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)283, null, "A list combining Bulgarian List and EasyList.", null, null, null, null, null, (short)4, "Bulgarian List + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 18, 54, 17, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/bulgarian_list+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)281, null, "Removes annoyances, self-promotion and privacy protection on Chinese websites.", "https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt", null, "cjxlist@gmail.com", "https://abpchina.org/forum/forum.php", "https://abpchina.org/forum/forum.php?mod=viewthread&tid=29667", "https://github.com/cjx82630/cjxlist/issues", (short)16, "CJX's Annoyance List", null, new DateTime(2015, 2, 4, 10, 34, 4, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 7, 13, 48, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)280, null, "Clickbait Blocklist just blocks the most annoying clickbait ads. I don't mind ads; I just don't want clickbait crap about shocking celebrity photos and \"deep searches\" for local singles.", "https://github.com/cpeterso/clickbait-blocklist/", null, null, "https://github.com/cpeterso/clickbait-blocklist/", null, (short)28, "Clickbait Blocklist", null, new DateTime(2017, 3, 8, 5, 0, 44, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 15, 4, 50, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cpeterso/clickbait-blocklist/master/clickbait-blocklist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)278, null, "Corset is a subscription filter to block intruding ads on sites using Korean.", "https://code.google.com/archive/p/abp-corset/", null, "corset@tistory.com", null, "https://github.com/nicedirector/ADBlock", null, (short)12, "Corset", null, null, (short)3, "https://raw.githubusercontent.com/nicedirector/ADBlock/master/Adblock_Filter.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)277, null, "Czech filters for Adblock Plus.", "http://adblock.dajbych.net/adblock.txt", null, null, "http://adblock.dajbych.net/", null, (short)5, "Czech Filters for AdBlock", null, null, (short)3, new DateTime(2014, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), "http://adblock.dajbych.net/adblock.txt", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/Czech%20Filters%20for%20Adblock%20Plus", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/Czech%20Filters%20for%20Adblock%20Plus" },
                    { (short)269, null, "A list combining EasyList Italy and EasyList.", null, null, null, null, null, (short)4, "EasyList Italy + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 17, 1, 13, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistitaly+easylist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)268, null, "This is a lite version of EasyList. Only for Simplified Chinese language websites.", "https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjxlist.txt", null, "cjxlist@gmail.com", "https://abpchina.org/forum/forum.php", "https://abpchina.org/forum/forum.php?mod=viewthread&tid=29667", "https://github.com/cjx82630/cjxlist/issues", (short)4, "EasyList Lite China", null, new DateTime(2014, 11, 13, 3, 34, 41, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 13, 1, 45, 17, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjxlist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)267, null, "EasyList Lithuania is an affiliated filter list written by gymka that specifically removes adverts on Lithuanian language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "algimantas@margevicius.lt", "https://forums.lanik.us/viewforum.php?f=101", "https://github.com/EasyList-Lithuania/easylist_lithuania", "https://github.com/EasyList-Lithuania/easylist_lithuania/issues", (short)4, "EasyList Lithuania", null, null, (short)3, new DateTime(2019, 3, 3, 9, 55, 11, 0, DateTimeKind.Unspecified), "https://margevicius.lt/easylistlithuania.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)248, null, "A list combining EasyList Lithuania and EasyList.", null, null, null, null, null, (short)4, "EasyList Lithuania + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 12, 10, 14, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistlithuania+easylist.txt", null, null },
                    { (short)266, null, "A list combining EasyList, EasyPrivacy, and Fanboy's Enhanced Tracking List.", null, null, null, null, null, (short)16, "Fanboy's Complete List", null, null, (short)3, new DateTime(2019, 4, 8, 15, 26, 11, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/r/fanboy-complete.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)263, null, "Blocks Hebrew regional advertisements and trackers.", null, null, "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's IsraelList", null, null, (short)3, new DateTime(2013, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/israelilist/IsraelList.txt", null, null },
                    { (short)262, null, "Blocks Japanese regional advertisements and trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Japanese", null, null, (short)3, new DateTime(2017, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-japanese.txt", null, null },
                    { (short)261, null, "Blocks Korean regional advertisements and trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Korean", null, null, (short)3, new DateTime(2017, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-korean.txt", null, null },
                    { (short)260, null, "Blocks Polish regional advertisements and trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Polish", null, null, (short)3, new DateTime(2017, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-polish.txt", null, null },
                    { (short)259, null, "Hide and block social content, social widgets, social scripts and social icons.", "https://fanboy.co.nz/", "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)5, "Fanboy's Social Blocking List", null, null, (short)3, new DateTime(2019, 4, 8, 14, 44, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/fanboy-social.txt", "https://fanboy.co.nz/fanboy-social.txt", "https://easylist-downloads.adblockplus.org/fanboy-social.txt" },
                    { (short)258, null, "Blocks Spanish and Portuguese regional advertisements and trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Spanish/Portuguese", null, null, (short)3, new DateTime(2017, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-espanol.txt", null, null },
                    { (short)257, null, "Blocks Swedish regional advertisements and trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Swedish", null, null, (short)3, new DateTime(2017, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-swedish.txt", null, null },
                    { (short)256, null, "Blocks Turkish regional advertisements and trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Turkish", null, null, (short)3, new DateTime(2017, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-turkish.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)255, null, "A list combining EasyList, EasyPrivacy, Fanboy's Enhanced Tracking List, and Fanboy's Annoyance List.", null, null, null, null, null, (short)16, "Fanboy's Ultimate List", null, null, (short)3, new DateTime(2019, 4, 8, 13, 9, 11, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/r/fanboy-ultimate.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)254, null, "Blocks Vietnamese regional advertisements and trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Vietnamese", null, null, (short)3, new DateTime(2017, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-vietnam.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)251, null, "Blocks English and Spanish regional advertisements and trackers.", null, null, null, "https://nauscopio.wordpress.com/2010/07/05/filtrado-bloqueo-y-ocultacion-de-la-publicidad-en-google-chrome/", "https://github.com/mozillahispano/nauscopio-filtros/issues", (short)6, "Filtros Nauscopicos", null, null, (short)3, new DateTime(2013, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), "http://abp.mozilla-hispano.org/nauscopio/filtros.txt", "https://raw.githubusercontent.com/mozillahispano/nauscopio-filtros/master/filtros.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)264, null, "Blocks Indian regional advertisements and trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", "fanboyadblock@googlegroups.com", null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Indian", null, null, (short)3, new DateTime(2017, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-indian.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)291, null, "EasyList Hebrew is an [EasyList] affiliated filter list written by BsT that specifically removes adverts on Hebrew language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "easylisthebrew@gmail.com", null, "https://github.com/easylist/EasyListHebrew", "https://github.com/easylist/EasyListHebrew/issues", (short)7, "EasyList Hebrew", null, new DateTime(2014, 1, 20, 15, 40, 9, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 5, 11, 32, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/easylist/EasyListHebrew/master/EasyListHebrew.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)205, null, "Blocks Japanese regional social network advertisements and trackers.", null, null, null, "https://github.com/k2jp/abp-japanese-filters", "https://github.com/k2jp/abp-japanese-filters/issues", (short)4, "ABP Japanese 3rd Party SNS Filters", null, new DateTime(2014, 11, 24, 21, 58, 10, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 10, 13, 10, 40, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/k2jp/abp-japanese-filters/master/abpjf_3rd_party_sns.txt", "https://gitcdn.xyz/repo/k2jp/abp-japanese-filters/master/abpjf_3rd_party_sns.txt", "https://rawcdn.githack.com/k2jp/abp-japanese-filters/master/abpjf_3rd_party_sns.txt" },
                    { (short)203, null, "Blocks Japanese regional advertisements and trackers.", null, null, null, "https://github.com/k2jp/abp-japanese-filters", "https://github.com/k2jp/abp-japanese-filters/issues", (short)4, "ABP Japanese Filters", null, new DateTime(2014, 11, 24, 21, 58, 10, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 10, 10, 10, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/k2jp/abp-japanese-filters/master/abpjf.txt", "https://gitcdn.xyz/repo/k2jp/abp-japanese-filters/master/abpjf.txt", "https://rawcdn.githack.com/k2jp/abp-japanese-filters/master/abpjf.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)116, null, "This is a complementary list for RoList with annoyances that are not necessarly banners.", "https://www.zoso.ro/pages/rolist2.txt", null, "mail@zoso.ro", null, "https://www.zoso.ro/rolist/", null, (short)5, "ROList2", null, null, (short)3, new DateTime(2019, 3, 10, 2, 15, 11, 0, DateTimeKind.Unspecified), "https://www.zoso.ro/pages/rolist2.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)114, null, "Blocks advertisements and trackers.", null, null, null, "https://github.com/thoughtconverge/abf", null, (short)5, "Thoughtconverge's Custom AdBlock Filters", null, new DateTime(2015, 2, 7, 16, 48, 59, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2015, 4, 11, 17, 13, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/thoughtconverge/abf/master/abf.txt", "https://gitcdn.xyz/repo/thoughtconverge/abf/master/abf.txt", "https://rawcdn.githack.com/thoughtconverge/abf/master/abf.txt" },
                    { (short)101, null, "Finnish supplement list for EasyList.", "https://raw.githubusercontent.com/wiltteri/subscriptions/master/wiltteri.txt", null, null, "https://github.com/wiltteri/subscriptions", null, (short)11, "Wiltteri", null, new DateTime(2015, 4, 25, 19, 15, 33, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2015, 5, 16, 15, 23, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/wiltteri/subscriptions/master/wiltteri.txt", "https://gitcdn.xyz/repo/wiltteri/subscriptions/master/wiltteri.txt", "https://rawcdn.githack.com/wiltteri/subscriptions/master/wiltteri.txt" },
                    { (short)100, null, "Finnish supplement list for EasyList.", "https://raw.githubusercontent.com/wiltteri/subscriptions/master/wiltteri-reborn.txt", null, null, "https://github.com/wiltteri/subscriptions", null, (short)11, "Wiltteri Reborn", null, new DateTime(2015, 4, 25, 19, 15, 33, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2015, 5, 16, 15, 23, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/wiltteri/subscriptions/master/wiltteri-reborn.txt", "https://gitcdn.xyz/repo/wiltteri/subscriptions/master/wiltteri-reborn.txt", "https://rawcdn.githack.com/wiltteri/subscriptions/master/wiltteri-reborn.txt" },
                    { (short)99, null, "Blocks Korean regional advertisements and trackers.", null, null, null, "https://github.com/yous/YousList", "https://github.com/yous/YousList/issues", (short)24, "YousList", null, new DateTime(2014, 9, 13, 15, 24, 35, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 11, 5, 50, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yous/YousList/master/youslist.txt", "https://gitcdn.xyz/repo/yous/YousList/master/youslist.txt", "https://rawcdn.githack.com/yous/YousList/master/youslist.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)98, null, "Block only other annoyances.", "https://youtube.adblockplus.me/", "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://youtube.adblockplus.me/", null, (short)5, "YouTube: Other Annoyances", null, null, (short)3, new DateTime(2019, 4, 14, 15, 0, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/yt_annoyances_other.txt", null, null },
                    { (short)97, null, "Block all YouTube annoyances.", "https://youtube.adblockplus.me/", "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://youtube.adblockplus.me/", null, (short)5, "YouTube: Pure Video Experience", null, null, (short)3, new DateTime(2019, 4, 14, 14, 54, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/yt_annoyances_full.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)94, null, "You can leave AdBlock functioning as normal, but the proper tracking of cashback cookies will be allowed on TopCashback and our affiliate network sites only.", "https://www.topcashback.com/Help/164", null, null, "https://www.topcashback.com/Help/164", null, (short)5, "Top Cash Back Adblock Whitelist", null, null, (short)3, new DateTime(2019, 4, 13, 13, 35, 11, 0, DateTimeKind.Unspecified), "https://www.topcashback.com/Misc/AdBlockWhiteList.aspx", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)72, null, "Blocks Hungarian regional advertisements and trackers.", null, null, "hufilter.adblock@gmail.com", null, "https://github.com/hufilter/hufilter/wiki", "https://github.com/hufilter/hufilter/issues", (short)24, "hufilter", null, new DateTime(2015, 1, 14, 14, 16, 50, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 12, 11, 54, 56, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/hufilter/hufilter/master/hufilter.txt", "https://repo.or.cz/Adblock-list-backups-hufilter.git/blob_plain/refs/heads/master:/hufilter.txt", "https://gitcdn.xyz/repo/hufilter/hufilter/master/hufilter.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)71, null, "Get rid of annoying cookie warnings from almost all 'infected' websites!", "https://www.i-dont-care-about-cookies.eu/", null, "info@kiboke-studio.hr", null, "https://www.i-dont-care-about-cookies.eu/", null, (short)4, "I Don't Care about Cookies", null, null, (short)3, new DateTime(2019, 4, 13, 7, 41, 12, 0, DateTimeKind.Unspecified), "https://www.i-dont-care-about-cookies.eu/abp/", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)70, null, "List of filters for Adblock Plus that block cookie notices on European websites.", "https://github.com/Rudloff/adblock-imokwithcookies", null, null, "https://github.com/Rudloff/adblock-imokwithcookies", "https://github.com/Rudloff/adblock-imokwithcookies/issues", (short)19, "I'm OK with Cookies", null, new DateTime(2015, 1, 11, 23, 1, 2, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 7, 5, 10, 13, 37, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Rudloff/adblock-imokwithcookies/master/filters.txt", "https://gitcdn.xyz/repo/Rudloff/adblock-imokwithcookies/master/filters.txt", "https://rawcdn.githack.com/Rudloff/adblock-imokwithcookies/master/filters.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)117, null, "A list combining ROList and EasyList.", null, null, null, null, null, (short)5, "ROList + EasyList", null, null, (short)3, new DateTime(2019, 4, 14, 19, 13, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/rolist+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)69, null, "Adblock Plus list for Icelandic websites.", "https://adblock.gardar.net/", null, "adblock@gardar.net", null, "https://adblock.gardar.net/", null, (short)5, "Icelandic ABP List", null, null, (short)3, new DateTime(2018, 11, 8, 14, 25, 10, 0, DateTimeKind.Unspecified), "https://adblock.gardar.net/is.abp.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)66, null, "My Adblock Plus filter subscription will block banner ads, flash ads, text-ads, and even completely block some rogue anti-virus and anti-spyware websites preventing infection.", "https://www.jabcreations.com/web/adblock-subscription", null, null, "https://www.jabcreations.com/web/adblock-subscription", null, (short)5, "JAB Creations' Adblock Plus Filter Subscription", null, null, (short)3, new DateTime(2019, 3, 24, 2, 42, 9, 0, DateTimeKind.Unspecified), "https://www.jabcreations.com/downloads/adblock-filters.php", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)63, null, "This filter will mainly block affiliate advertising, behavioral advertising, tend embedded script will overload, blog parts.", "https://qme.mydns.jp/adblock.html", null, null, "https://qme.mydns.jp/adblock.html", null, (short)5, "Japanese Site Adblock Filter", null, null, (short)3, "https://qme.mydns.jp/data/Adblock.txt", null, null },
                    { (short)62, null, "This filter will mainly block affiliate advertising, behavioral advertising, tend embedded script will overload, blog parts.", "https://qme.mydns.jp/adblock.html", null, null, "https://qme.mydns.jp/adblock.html", null, (short)5, "Japanese Site Adblock Filter ver 2", null, null, (short)3, "https://qme.mydns.jp/data/AdblockV2.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)56, null, "A list combining Latvian List and EasyList.", null, null, null, null, null, (short)8, "Latvian List + EasyList", null, null, (short)3, new DateTime(2019, 4, 13, 6, 4, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/latvianlist+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)51, null, "Filter for advertisements on Greek sites.", "https://www.void.gr/kargig/blog/greek-adblock-plus-filter/", null, null, "https://www.void.gr/kargig/blog/greek-adblock-plus-filter/", "https://github.com/kargig/greek-adblockplus-filter/issues", (short)12, "Greek AdBlock Filter", null, new DateTime(2012, 4, 25, 7, 10, 10, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 7, 20, 25, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kargig/greek-adblockplus-filter/master/void-gr-filters.txt", "https://gitcdn.xyz/repo/kargig/greek-adblockplus-filter/master/void-gr-filters.txt", "https://rawcdn.githack.com/kargig/greek-adblockplus-filter/master/void-gr-filters.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)50, null, "We will blacklist domains that fall into any of the following categories: scams/phishing/malware/malvertising/exploits - and other general threats.", "https://hexxiumcreations.com/projects/malicious-domain-blocking/", "https://hexxiumcreations.com/donate/", "support@hexxiumcreations.com", null, "https://hexxiumcreations.com/projects/malicious-domain-blocking/", "https://github.com/HexxiumCreations/threat-list/issues", (short)5, "Hexxium Creations Threat List", null, new DateTime(2016, 6, 29, 8, 27, 6, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 11, 5, 17, 32, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/HexxiumCreations/threat-list/gh-pages/hexxiumthreatlist.txt", "https://gitcdn.xyz/repo/HexxiumCreations/threat-list/gh-pages/hexxiumthreatlist.txt", "https://rawcdn.githack.com/HexxiumCreations/threat-list/gh-pages/hexxiumthreatlist.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)39, null, "Latvian List is an affiliated filter list written by anonymous74100 that specifically removes adverts on Latvian language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "latvian-list@googlegroups.com", "https://forums.lanik.us/viewforum.php?f=99", "https://notabug.org/latvian-list/adblock-latvian", null, (short)8, "Latvian List", null, null, (short)3, new DateTime(2019, 3, 18, 15, 0, 12, 0, DateTimeKind.Unspecified), "https://notabug.org/latvian-list/adblock-latvian/raw/master/lists/latvian-list.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)33, null, "Adblock filter for obtrusive overlay (pop up) elements and various other annoying elements on websites.", "https://github.com/LordBadmintonofYorkshire/Overlay-Blocker", null, null, "https://github.com/LordBadmintonofYorkshire/Overlay-Blocker", "https://github.com/LordBadmintonofYorkshire/Overlay-Blocker/issues", (short)2, "Overlay Blocker", null, new DateTime(2014, 11, 18, 11, 8, 41, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2015, 1, 21, 13, 8, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/LordBadmintonofYorkshire/Overlay-Blocker/master/blocklist.txt", "https://gitcdn.xyz/repo/LordBadmintonofYorkshire/Overlay-Blocker/master/blocklist.txt", "https://rawcdn.githack.com/LordBadmintonofYorkshire/Overlay-Blocker/master/blocklist.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)31, null, "Contains a list of elements of advertising, such as banners or flash animations, the most commonly used on Polish websites.", "https://niecko.pl/adblock/", null, null, "https://niecko.pl/adblock/", null, (short)5, "PLgeneral", null, null, (short)3, new DateTime(2011, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://www.niecko.pl/adblock/adblock.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)30, null, "Filters that hide and block pop-ups, widgets, newsletters, push notifications, arrows and other irritating elements on Polish websites (include Polish GDPR-Cookies Filters).", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", null, null, "https://polishannoyancefilters.netlify.com", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters", null, new DateTime(2016, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 8, 18, 0, 25, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PPB.txt", "https://gitcdn.xyz/repo/PolishFiltersTeam/PolishAnnoyanceFilters/master/PPB.txt", "https://rawcdn.githack.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PPB.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)29, null, "Prebake is an Adblock filter subscription that blocks large, obtrusive cookie notices. These notices either consume a considerable amount of screen real estate or popup and distract the viewers attention, which can be just as annoying as ads.", "http://prebake.eu/", null, "cookies@prebake.eu", null, "http://prebake.eu/", "https://github.com/liamja/Prebake/issues", (short)2, "Prebake Obtrusive", null, new DateTime(2012, 11, 18, 20, 23, 53, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 5, 28, 14, 1, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/liamja/Prebake/master/obtrusive.txt", "https://gitcdn.xyz/repo/liamja/Prebake/master/obtrusive.txt", "https://rawcdn.githack.com/liamja/Prebake/master/obtrusive.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)68, null, "This filter list for AdBlock removes popup sections on sites that distracts from the main content.", "https://ilyakatz.github.io/adblock_filters/", null, null, "https://ilyakatz.github.io/adblock_filters/", "https://github.com/ilyakatz/adblock_filters/issues", (short)5, "Ilyakatz's Additional Filters for Adblock", null, new DateTime(2014, 2, 11, 18, 1, 6, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 3, 17, 4, 32, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ilyakatz/adblock_filters/master/inpage_popups.txt", "https://gitcdn.xyz/repo/ilyakatz/adblock_filters/master/inpage_popups.txt", "https://rawcdn.githack.com/ilyakatz/adblock_filters/master/inpage_popups.txt" },
                    { (short)204, null, "Blocks irritating elements on Japanese regional webpages.", null, null, null, "https://github.com/k2jp/abp-japanese-filters", "https://github.com/k2jp/abp-japanese-filters/issues", (short)4, "ABP Japanese Element-hiding Filters", null, new DateTime(2014, 11, 24, 21, 58, 10, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 3, 10, 58, 48, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/k2jp/abp-japanese-filters/master/abpjf_element_hiding.txt", "https://gitcdn.xyz/repo/k2jp/abp-japanese-filters/master/abpjf_element_hiding.txt", "https://rawcdn.githack.com/k2jp/abp-japanese-filters/master/abpjf_element_hiding.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)118, null, "Romanian supplement for EasyList.", "https://adblockplus.org/subscriptions", null, "mail@zoso.ro", null, "https://www.zoso.ro/rolist/", null, (short)5, "ROList", null, null, (short)3, new DateTime(2019, 2, 11, 7, 58, 9, 0, DateTimeKind.Unspecified), "https://www.zoso.ro/pages/rolist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)131, null, "Russian supplement for EasyList.", "https://adblockplus.org/subscriptions", null, "https://forums.lanik.us/viewforum.php?f=102", "https://code.google.com/archive/p/ruadlist/", null, (short)12, "RU AdList", null, null, (short)3, new DateTime(2019, 4, 14, 22, 31, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/advblock.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)202, null, "Blocks Japanese regional advertisements and trackers.", null, null, null, "https://github.com/k2jp/abp-japanese-filters", "https://github.com/k2jp/abp-japanese-filters/issues", (short)4, "ABP Japanese Paranoid Filters", null, new DateTime(2014, 11, 24, 21, 58, 10, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 10, 7, 31, 48, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/k2jp/abp-japanese-filters/master/abpjf_paranoid.txt", "https://gitcdn.xyz/repo/k2jp/abp-japanese-filters/master/abpjf_paranoid.txt", "https://rawcdn.githack.com/k2jp/abp-japanese-filters/master/abpjf_paranoid.txt" },
                    { (short)201, null, "Specific for Italian websites but with an eye also to the most visited international, is the main form and the list officially recognized (for Italy), perfectly compatible with AdBlock Plus.", "https://github.com/gioxx/xfiles", "https://www.paypal.me/gioxx/5", "https://abpxfiles.uservoice.com/", "https://xfiles.noads.it/", "https://github.com/gioxx/xfiles/issues", (short)9, "ABP X Files", null, new DateTime(2016, 12, 20, 14, 53, 3, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 26, 13, 29, 50, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/gioxx/xfiles/master/filtri.txt", "https://gitcdn.xyz/repo/gioxx/xfiles/master/filtri.txt", "https://rawcdn.githack.com/gioxx/xfiles/master/filtri.txt" },
                    { (short)200, null, "The module that serves to protect the user's navigation, seamlessly integrates to subscriptions already installed on your Adblock Plus.", "https://github.com/gioxx/xfiles", "https://www.paypal.me/gioxx/5", "https://abpxfiles.uservoice.com/", "https://xfiles.noads.it/", "https://github.com/gioxx/xfiles/issues", (short)9, "X Files: HWS Harmful WebSites", null, new DateTime(2016, 12, 20, 14, 53, 3, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 26, 13, 29, 50, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/gioxx/xfiles/master/siteblock.txt", "https://gitcdn.xyz/repo/gioxx/xfiles/master/siteblock.txt", "https://rawcdn.githack.com/gioxx/xfiles/master/siteblock.txt" },
                    { (short)199, null, "Born from the need to block advertisements on the increasingly popular social network, this module is a great way to complete the protection offered by Adblock Plus and X Files during daily navigation. It may be associated with the main module of the X-Files or third-party lists.", "https://github.com/gioxx/xfiles", "https://www.paypal.me/gioxx/5", "https://abpxfiles.uservoice.com/", "https://xfiles.noads.it/", "https://github.com/gioxx/xfiles/issues", (short)9, "X Files: NoFacebookAds", null, new DateTime(2016, 12, 20, 14, 53, 3, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 12, 14, 7, 31, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/gioxx/xfiles/master/facebook.txt", "https://gitcdn.xyz/repo/gioxx/xfiles/master/facebook.txt", "https://rawcdn.githack.com/gioxx/xfiles/master/facebook.txt" },
                    { (short)198, null, "ABPindo is an affiliated filter list written by hermawan that specifically removes adverts on Indonesian language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "https://forums.lanik.us/viewforum.php?f=94", "https://abpindo.blogspot.com/", "https://github.com/ABPindo/indonesianadblockrules/issues", (short)4, "ABPindo", null, new DateTime(2010, 11, 6, 9, 47, 22, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 14, 8, 54, 56, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ABPindo/indonesianadblockrules/master/subscriptions/abpindo.txt", "https://raw.githubusercontent.com/heradhis/indonesianadblockrules/master/subscriptions/abpindo.txt", "https://gitcdn.xyz/repo/ABPindo/indonesianadblockrules/master/subscriptions/abpindo.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)197, null, "A list combining ABPindo and EasyList.", null, null, null, null, null, (short)4, "ABPindo + EasyList", null, null, (short)3, new DateTime(2019, 4, 15, 8, 59, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/abpindo+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)184, null, "Blocks Facebook trackers.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", null, "https://fanboy.co.nz/", null, (short)16, "Anti-Facebook List", null, null, (short)3, "https://fanboy.co.nz/fanboy-antifacebook.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)181, null, "A list for Adblock Plus, which is one of the most famous ad blocking softwares.", "https://osdn.net/projects/ayucat-list/", null, null, "https://osdn.net/projects/ayucat-list/", null, (short)5, "Ayucat Powerful List", null, null, (short)3, new DateTime(2009, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), "http://git.sourceforge.jp/view?p=ayucat-list/ayucat-list.git;a=blob_plain;f=ayucat-list.txt;hb=b254c74c132832a3ade7b9d42c2ef8d3dd59fdb9", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/Ayucat%20Powerful%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/Ayucat%20Powerful%20List.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)178, null, "This is a list for blocking advertisements on the banki.ru site that are not blocked by \"conventional\" lists.", "https://raw.githubusercontent.com/rebelion76/bankiru_plus_adblock_list/master/bankiru_plus.txt", null, null, "https://github.com/rebelion76/bankiru_plus_adblock_list", "https://github.com/rebelion76/bankiru_plus_adblock_list/issues", (short)5, "Banki.ru Plus Adblock List", null, new DateTime(2013, 10, 20, 20, 57, 37, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2016, 3, 26, 9, 35, 17, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/rebelion76/bankiru_plus_adblock_list/master/bankiru_plus.txt", "https://gitcdn.xyz/repo/rebelion76/bankiru_plus_adblock_list/master/bankiru_plus.txt", "https://rawcdn.githack.com/rebelion76/bankiru_plus_adblock_list/master/bankiru_plus.txt" },
                    { (short)175, null, "Adblock / Adblock plus filter list for blocking cookie notifications.", "https://github.com/r4vi/block-the-eu-cookie-shit-list", null, null, "https://github.com/r4vi/block-the-eu-cookie-shit-list", "https://github.com/r4vi/block-the-eu-cookie-shit-list/issues", (short)14, "Block the EU Cookie Shit List", null, new DateTime(2012, 8, 2, 14, 45, 38, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 11, 19, 18, 43, 37, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/r4vi/block-the-eu-cookie-shit-list/master/filterlist.txt", "https://gitcdn.xyz/repo/r4vi/block-the-eu-cookie-shit-list/master/filterlist.txt", "https://rawcdn.githack.com/r4vi/block-the-eu-cookie-shit-list/master/filterlist.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)171, null, "This is a general, mainly a Finnish list for blocking various elements on specific websites such as ads, cookie notifications and cosmetic annoyances.", "https://dl.dropboxusercontent.com/s/1ybzw9lb7m1qiyl/AAs.txt", null, null, "https://dl.dropboxusercontent.com/s/1ybzw9lb7m1qiyl/AAs.txt", null, (short)11, "Additional Adblock Rules", null, null, (short)3, new DateTime(2019, 4, 15, 7, 1, 14, 0, DateTimeKind.Unspecified), "https://dl.dropboxusercontent.com/s/1ybzw9lb7m1qiyl/AAs.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)119, null, "Romanian ad block filtering list.", "https://github.com/tcptomato/ROad-Block", null, "contact@adblock.ro", "https://muut.com/i/adblockro/comments", "https://www.adblock.ro/", "https://github.com/tcptomato/ROad-Block/issues", (short)5, "ROad-Block Light", null, null, (short)3, new DateTime(2019, 4, 14, 19, 40, 10, 0, DateTimeKind.Unspecified), "https://road.adblock.ro/lista.txt", "https://raw.githubusercontent.com/tcptomato/ROad-Block/master/road-block-filters-light.txt", "https://gitcdn.xyz/repo/tcptomato/ROad-Block/master/road-block-filters-light.txt" },
                    { (short)170, null, "Blocks ads injected by adware.", "https://adblockplus.org/subscriptions", null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", null, (short)4, "Adware Filters", null, null, (short)3, new DateTime(2019, 4, 15, 6, 51, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/adwarefilters.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)150, null, "Blocks most popular internet statistics counters on sites serving Russia.", null, null, "https://forums.lanik.us/viewforum.php?f=102", "https://code.google.com/archive/p/ruadlist/", null, (short)12, "RU AdList: Counters", null, null, (short)3, new DateTime(2019, 4, 15, 1, 34, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/cntblock.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)148, null, "I make supplemental filters in Adblock Plus to block garbage on webpages not blocked by other lists. I use many regular expressions, a few domain filters, but no CSS filters.", "https://mrsatterly.com/abp_filters.html", null, null, "https://mrsatterly.com/abp_filters.html", null, (short)14, "Satterly's Adblock Plus Filters", null, null, (short)3, "https://mrsatterly.com/abp_filters.txt", null, null },
                    { (short)147, null, "My list removes advertisements from all the leading Danish Websites: Ekstra Bladet, Jyllands Posten, Berlingske, TV/2, Computerworld, Version2, etc.", "https://henrik.schack.dk/adblock/", "https://www.paypal.me/schack", null, "https://henrik.schack.dk/adblock/", null, (short)5, "Schack's Adblock Plus List", null, null, (short)3, "https://adblock.dk/block.csv", null, null },
                    { (short)146, null, "Adblock Plus for Japan domestic and Japanese correspondence Universal Filter.", "https://web.archive.org/web/20120419124052/http://www.schuzak.jp/other/abp.html", null, null, "https://web.archive.org/web/20120419124052/http://www.schuzak.jp/other/abp.html", null, (short)30, "Schuzak's Universal Filter", null, null, (short)3, "https://web.archive.org/web/20121106002043if_/http://www.schuzak.jp:80/other/abp.conf", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)142, null, "Block ads with AdBlock filter.", null, null, null, null, null, (short)16, "G&J AdBlock", null, null, (short)3, new DateTime(2016, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://web.archive.org/web/20160221140104if_/http://adblock.gjtech.net/?format=adblock-plus", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)140, null, "This filter protects you from online scams. This filter is regularly updated with data collected by Spam404.com.", "https://raw.githubusercontent.com/Spam404/lists/master/adblock-list.txt", null, "admin@spam404.com", null, "https://www.spam404.com/blog/block-online-scams-with-spam404-and-adblock", "https://github.com/Spam404/lists/issues", (short)8, "Spam404", null, new DateTime(2016, 2, 15, 21, 4, 28, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 2, 15, 15, 13, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Spam404/lists/master/adblock-list.txt", "https://gitcdn.xyz/repo/Spam404/lists/master/adblock-list.txt", "https://rawcdn.githack.com/Spam404/lists/master/adblock-list.txt" },
                    { (short)136, null, "Slovenian List is regional list primarily for uBlock Origin or uBlock, which consists mostly of static cosmetic filters and a few tracking filters. Among others, there are 100 most popular Slovenian websites included in this list.", "https://github.com/betterwebleon/slovenian-list", null, "betterweb.leon@outlook.com", null, "https://github.com/betterwebleon/slovenian-list", "https://github.com/betterwebleon/slovenian-list/issues", (short)2, "Slovenian List", null, new DateTime(2015, 12, 21, 23, 2, 52, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 1, 20, 21, 1, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/betterwebleon/slovenian-list/master/filters.txt", "https://gitcdn.xyz/repo/betterwebleon/slovenian-list/master/filters.txt", "https://rawcdn.githack.com/betterwebleon/slovenian-list/master/filters.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)135, null, "Blocks advertisements and trackers.", null, null, "wduk10@hotmail.com", null, "https://hostsfile.mine.nu/", null, (short)34, "The Hosts File Project Adblock Filters", null, null, (short)3, "https://hostsfile.mine.nu/downloads/adblock.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)134, null, "Russian-only fork of Fanboy's Annoyance List.", null, null, "https://forums.lanik.us/viewforum.php?f=102", "https://code.google.com/archive/p/ruadlist/", null, (short)16, "RU AdList: BitBlock", null, null, (short)3, new DateTime(2019, 4, 14, 23, 9, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/bitblock.txt", null, null },
                    { (short)133, null, "A list combining RU AdList and EasyList.", null, null, null, null, null, (short)12, "RU AdList + EasyList", null, null, (short)3, new DateTime(2019, 4, 14, 22, 42, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/ruadlist+easylist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)132, null, "Blocks Russian regional advertisements and trackers.", null, null, "denis-ovs@yandex.ru", "https://forum.mozilla-russia.org/viewtopic.php?id=3679", "http://denis-ovs.narod.ru/", null, (short)5, "RU AdList [Old]", null, null, (short)3, new DateTime(2008, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), "http://denis-ovs.narod.ru/adblock.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)152, null, "Removes unnecessary elements from specific file sharing sites.", "https://firime.wordpress.com/projects/others/fedlist/", null, null, "https://firime.wordpress.com/projects/others/fedlist/", null, (short)5, "Firime (FED) EasyDownload List", null, null, (short)3, "https://pastebin.com/raw/r9a5WrZa", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)292, null, "A list combining EasyList Germany and EasyList.", null, null, null, null, null, (short)4, "EasyList Germany + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 20, 31, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistgermany+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)293, null, "EasyList Germany is a filter list written by the EasyList authors MonztA, Famlam, and Khrin that specifically removes adverts on German language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "easylist.germany@gmail.com", "https://forums.lanik.us/viewforum.php?f=90", "https://easylist.to/", "https://github.com/easylist/easylistgermany/issues", (short)4, "EasyList Germany", null, null, (short)3, new DateTime(2019, 4, 8, 21, 1, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistgermany.txt", "https://easylist.to/easylistgermany/easylistgermany.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)294, null, "A list combining EasyList Dutch and EasyList.", null, null, null, null, null, (short)4, "EasyList Dutch + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 21, 8, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistdutch+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)813, null, "I use an ad blocker not because I hate ads, but because it makes the Internet so much more safe and less annoying. Most advertising is horrible and annoying, but there are exceptions. However, ad blocking lists like EasyList are dedicated to blocking all ads. The only maintained \"Acceptable Ads\" list is by Eyeo, Inc., which basically takes bribes to whitelist ads. I wanted to start an Acceptable Ads list that was of the people, by the people and for the people.", "https://github.com/jwinnie/acceptable-ads#acceptable-ads", null, null, "https://github.com/jwinnie/acceptable-ads", "https://github.com/jwinnie/acceptable-ads/issues", (short)4, "jwinnie Acceptable Ads", null, new DateTime(2018, 4, 14, 19, 48, 44, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 5, 20, 18, 15, 44, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jwinnie/acceptable-ads/master/filters.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)809, null, null, null, null, null, "https://www.ergensin.nl/", null, (short)5, "NLblock", null, null, (short)3, new DateTime(2014, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://www.ergensin.nl/adblock/nlblock.txt", "http://www.verzijlbergh.com/adblock/nlblock.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)808, null, null, null, null, null, "https://ajnasz.hu/", null, (short)5, "ajnasz's list", null, null, (short)3, "https://ajnasz.hu/adblock/recent", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)806, null, null, null, null, "easylist.portuguese@gmail.com", null, "https://easylist.to/", null, (short)4, "EasyList Portuguese", null, null, (short)3, new DateTime(2019, 4, 17, 0, 10, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistportuguese.txt", null, null },
                    { (short)804, null, null, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/TamilFriends%20List.txt", null, "tamilfriendslist@gmail.com", null, "https://github.com/DandelionSprout/adfilt/tree/master/AncientLibrary", "https://github.com/DandelionSprout/adfilt/issues", (short)16, "TamilFriends List", null, null, (short)3, new DateTime(2010, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/TamilFriends%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/TamilFriends%20List.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)803, null, "General icelandic ad and blocking subscription", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/Snaevar87's%20Icelandic%20filter.txt", null, null, "https://github.com/DandelionSprout/adfilt/tree/master/AncientLibrary", "https://github.com/DandelionSprout/adfilt/issues", (short)10, "Snaevar87's Icelandic filter", null, null, (short)3, new DateTime(2014, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/Snaevar87's%20Icelandic%20filter.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/Snaevar87%27s%20Icelandic%20filter.txt", null },
                    { (short)802, null, "Algerian filters for Adblock Plus", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/Liste%20DZ.txt", null, null, "https://github.com/DandelionSprout/adfilt/tree/master/AncientLibrary", "https://github.com/DandelionSprout/adfilt/issues", (short)6, "Liste DZ", null, null, (short)3, new DateTime(2019, 1, 29, 0, 25, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/Liste%20DZ.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/Liste%20DZ.txt", null },
                    { (short)801, null, "This is a Macedonian list", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/ABP%20Macedonian%20List.txt", null, null, "https://github.com/DandelionSprout/adfilt/tree/master/AncientLibrary", "https://github.com/DandelionSprout/adfilt/issues", (short)10, "ABP Macedonian List", null, null, (short)3, new DateTime(2011, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/ABP%20Macedonian%20List.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)772, null, null, null, null, "kbinani.bt@gmail.com", null, "https://github.com/kbinani/adblock-wikipedia", "https://github.com/kbinani/adblock-wikipedia/issues", (short)2, "adblock-wikipedia", null, new DateTime(2017, 9, 14, 1, 55, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 9, 14, 1, 55, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kbinani/adblock-wikipedia/master/signed.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)770, null, null, null, null, "magno.biet+adp@gmail.com", null, null, null, (short)2, "Magno's Adblock List", null, null, (short)3, new DateTime(2019, 2, 25, 14, 50, 10, 0, DateTimeKind.Unspecified), "https://adp.magnobiet.com/list.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)769, null, "A filter list for Adblock Plus for remove all newsletters banners", "https://github.com/Manu1400/i-don-t-care-about-newsletters#i-don-t-care-about-newsletters", null, null, "https://github.com/Manu1400/i-don-t-care-about-newsletters", "https://github.com/Manu1400/i-don-t-care-about-newsletters/issues", (short)8, "I don't care about newsletters", null, new DateTime(2017, 2, 28, 23, 48, 31, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 5, 18, 10, 7, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Manu1400/i-don-t-care-about-newsletters/master/adp.txt", null, null },
                    { (short)814, null, "Blocks Japanese regional mobile advertisements and trackers.", null, null, null, "https://gmbk0.tumblr.com/", null, (short)20, "gmbkslist (ABP)", null, new DateTime(2018, 10, 2, 19, 32, 3, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 10, 2, 19, 32, 3, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/gmbkslist.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/gmbkslist.txt", null },
                    { (short)767, null, "Rules contributed by diligent owls.", "https://github.com/OwlStudioCN/owl-abp-rules#owl-abp-rules", null, null, "https://github.com/OwlStudioCN/owl-abp-rules", "https://github.com/OwlStudioCN/owl-abp-rules/issues", (short)8, "OwlStudio ABP Rules", null, new DateTime(2018, 8, 15, 7, 51, 22, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 16, 10, 42, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/OwlStudioCN/owl-abp-rules/master/owl-abp-rules.txt", null, null },
                    { (short)745, null, "Korean Media Comment, SNS Share Count, Likes Count, News Reaction Filter", "https://raw.githubusercontent.com/KMCF/Korean-Media-Comment/master/filter.txt", null, null, "https://github.com/KMCF/Korean-Media-Comment", "https://github.com/KMCF/Korean-Media-Comment/issues", (short)24, "Korean Media Comment", null, new DateTime(2018, 5, 23, 4, 50, 4, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 5, 23, 4, 50, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/KMCF/Korean-Media-Comment/master/filter.txt", null, null },
                    { (short)736, null, "A systematic Internet filter halting analytics.", "https://raw.githubusercontent.com/OsborneSystems/Columbia/master/Columbia.txt", null, null, "https://github.com/OsborneSystems/Columbia", "https://github.com/OsborneSystems/Columbia/issues", (short)5, "Columbia Analytica", null, new DateTime(2018, 9, 2, 3, 0, 4, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 6, 23, 0, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/OsborneSystems/Columbia/master/Columbia.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)732, null, "This is a blocklist (might not be ad specific) for ublock orgin and other blockers... Reason: Out of box nagware/pop up box less internet (also used by me)", "https://github.com/dariusworks/superblock#superblock", "https://bads.team/ultrapage#donate", "hello@bads.team", null, "https://github.com/dariusworks/superblock", "https://github.com/dariusworks/superblock/issues", (short)2, "BADS.TM Cleaner Sites List All In One", null, new DateTime(2017, 8, 6, 17, 23, 59, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 12, 23, 14, 57, 42, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/dariusworks/superblock/master/cleanersitesAiO.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)731, null, "A list that blocks ads from my choice", "https://github.com/NeeEoo/AdBlockNeeEoo#adblockneeeoo", null, null, "https://github.com/NeeEoo/AdBlockNeeEoo", "https://github.com/NeeEoo/AdBlockNeeEoo/issues", (short)5, "AdBlockNeeEoo", null, new DateTime(2016, 12, 12, 9, 47, 19, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 9, 19, 16, 52, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/NeeEoo/AdBlockNeeEoo/master/List.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)730, null, "Blocks Google Fonts, except those not available for download.", "https://github.com/theel0ja/CrapBlock#crapblock", null, "elias.ojala+github@kapsi.fi", null, "https://crapblock.theel0ja.info/", "https://github.com/theel0ja/CrapBlock/issues", (short)5, "Block Google Fonts (by CrapBlock)", null, new DateTime(2018, 9, 9, 16, 3, 11, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 12, 1, 18, 13, 3, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/theel0ja/CrapBlock/master/block-googlefonts.txt", "https://crapblock.theel0ja.info/block-googlefonts.txt", "https://gitlab.com/theel0ja/crapblock/raw/master/block-googlefonts.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)728, null, "Filter list that specifically removes adverts on Indonesian language websites.", "https://raw.githubusercontent.com/realodix/AdBlockID/master/output/adblockid.txt", null, null, "https://github.com/realodix/AdBlockID", "https://github.com/realodix/AdBlockID/issues", (short)4, "AdBlockID", null, new DateTime(2017, 11, 30, 11, 9, 5, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 15, 9, 33, 48, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/realodix/AdBlockID/master/output/adblockid.txt", null, null },
                    { (short)726, null, null, null, null, null, "https://github.com/whtsky/abp-rules", "https://github.com/whtsky/abp-rules/issues", (short)5, "whtsky's rules", null, new DateTime(2018, 5, 18, 3, 24, 19, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 11, 12, 4, 4, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/whtsky/abp-rules/master/rules.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)724, null, null, null, null, null, "https://gist.github.com/balupton/6960605", null, (short)5, "Facebook Drama", null, null, (short)3, "https://gist.githubusercontent.com/balupton/6960605/raw/16bfeff88761b16296ed3ee15fbacf6840f1701a/filter-facebookdrama.txt", null, null },
                    { (short)723, null, null, null, null, null, "https://gist.github.com/balupton/6960605", null, (short)5, "Feedly Ads", null, null, (short)3, "https://gist.githubusercontent.com/balupton/6960605/raw/16bfeff88761b16296ed3ee15fbacf6840f1701a/filter-feedlyads.txt", null, null },
                    { (short)722, null, null, null, null, null, "https://gist.github.com/balupton/6960605", null, (short)5, "Twitter Drama", null, null, (short)3, "https://gist.githubusercontent.com/balupton/6960605/raw/16bfeff88761b16296ed3ee15fbacf6840f1701a/filter-twitterdrama.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)719, null, "This list allows advertising that directly benefits open source projects by paying for development, paying for operations, or providing direct funding. You can read more at https://ads-for-open-source.readthedocs.io/inclusion.html for details on the criteria for inclusion or to get your project included.", "https://github.com/readthedocs/ads-for-opensource#advertising-for-open-source-exception-lists", null, null, "https://github.com/readthedocs/ads-for-opensource", "https://github.com/readthedocs/ads-for-opensource/issues", (short)2, "Open Source Advertising Exception List", null, null, (short)3, new DateTime(2019, 4, 16, 22, 22, 9, 0, DateTimeKind.Unspecified), "https://ads-for-open-source.readthedocs.io/en/latest/_static/lists/opensource-ads.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)766, null, "lilydjwg's rules, mainly for China websites", "https://raw.githubusercontent.com/lilydjwg/abp-rules/master/list.txt", null, "lilydjwg@gmail.com", null, "https://github.com/lilydjwg/abp-rules", "https://github.com/lilydjwg/abp-rules/issues", (short)5, "lilydjwg's rules", null, new DateTime(2017, 3, 1, 2, 52, 51, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 15, 14, 40, 47, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/lilydjwg/abp-rules/master/list.txt", null, null },
                    { (short)688, null, null, null, null, "rbrito@ime.usp.br", null, "https://github.com/rbrito/easylist-ptbr", "https://github.com/rbrito/easylist-ptbr/issues", (short)16, "EasyList PTBR", null, new DateTime(2011, 8, 12, 1, 47, 30, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2015, 11, 3, 20, 57, 29, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/rbrito/easylist-ptbr/master/adblock-rules.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)815, null, null, null, null, null, "https://code.google.com/archive/p/adblocking-openfilter-jp/", null, (short)32, "Adblocking Open Filter JP", null, null, (short)3, new DateTime(2012, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/Adblocking%20Open%20Filter%20JP", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/Adblocking%20Open%20Filter%20JP", null },
                    { (short)818, null, null, null, null, null, "https://github.com/mediumkreation/IndianList", "https://github.com/mediumkreation/IndianList/issues", (short)3, "IndianList", null, null, (short)3, new DateTime(2019, 4, 15, 2, 49, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/indianlist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)876, null, "Blocks buttons for social networks.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Birdie Filter", null, new DateTime(2017, 7, 18, 5, 46, 21, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 23, 19, 45, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/kotori_filter.txt", null, null },
                    { (short)875, null, "Blocking virus sites.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Turtle Filter", null, new DateTime(2017, 7, 18, 5, 46, 21, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 2, 0, 41, 24, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/kame_filter.txt", null, null },
                    { (short)874, null, null, null, null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Leek: Allow saving image collections on Twitter (Remove GalleryNav)", null, new DateTime(2018, 4, 21, 19, 21, 37, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 1, 14, 14, 41, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/negi_twitter_allow_save_multi_images.txt", null, null },
                    { (short)873, null, null, null, null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Leek: Filter to remove Google's logo", null, new DateTime(2018, 4, 21, 18, 10, 20, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 1, 14, 14, 38, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/negi_google_hplogo_block.txt", null, null },
                    { (short)872, null, "Block unnecessary items other than advertisements.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Leek Filter", null, new DateTime(2017, 7, 18, 5, 46, 21, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 26, 18, 39, 5, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/negi_filter.txt", null, null },
                    { (short)870, null, "Advertisement blocking.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Mochi Filter Amazon", null, new DateTime(2018, 4, 26, 22, 14, 43, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 1, 14, 14, 29, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/mochi_filter_amazon.txt", null, null },
                    { (short)863, null, "Do you use music streaming services, and have grown really tired of how the same few songs are covered every year by every band and artist that have ever existed (and some that haven't)? Now you can let your eyes get a break from coming across just those songs.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Christmas carols' list", null, new DateTime(2018, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 8, 10, 28, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-'Christmas%20carols'%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-'Christmas%20carols'%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-'Christmas%20carols'%20List.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)860, null, "This repository contains some custom ad- and content-blocking rules I use to make life online easier (or just nicer to look at). Most of the content blocked here deals with sites I or my contributors regularly visit.", null, null, "nicktabick@gmail.com", null, "https://adblock.twoslashes.com/", "https://github.com/nicktabick/adblock-rules/issues", (short)5, "NT Adblock List", null, null, (short)3, new DateTime(2019, 3, 3, 5, 26, 9, 0, DateTimeKind.Unspecified), "https://bitbucket.org/nicktabick/adblock-rules/raw/master/nt-adblock.txt", "https://raw.githubusercontent.com/nicktabick/adblock-rules/master/nt-adblock.txt", "https://gitlab.com/nicktabick/adblock-rules/raw/master/nt-adblock.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)859, null, "It seems to me that a common thought process on porn sites are \"Hey, do you know what would've made this cute woman even sexier? I know. We should give her a dick!\". Well, not anymore, thanks to this list.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-Futa List", null, new DateTime(2018, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 8, 9, 57, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-Futa%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-Futa%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-Futa%20List.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)856, null, "I am of the firm belief that LED bulbs are the future. They use ⅒ of the wattage, lasts 10 times longer, can be found in a plethora of colours and strengths, and doesn't roast your hands if you touch it. A lot of people have however not got the memo. So if you want to discreetly lead them onto the path of buying LED bulbs, deploy this list on their computers and hope that they don't notice.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Pro-LED%20List.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Pro-LED List", null, null, (short)3, new DateTime(2019, 3, 17, 23, 58, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Pro-LED%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Pro-LED%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Pro-LED%20List.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)851, null, "Do you like to browse casually through different Wikia wikis, but are tired of FANDOM promotions, promotions for movies that you don't care about, and narrow article bodies? Then this list will save your day.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/WikiaPureBrowsingExperience.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Wikia: Pure Browsing Experience", null, new DateTime(2018, 10, 12, 18, 31, 48, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 2, 24, 16, 35, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/WikiaPureBrowsingExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/WikiaPureBrowsingExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/WikiaPureBrowsingExperience.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)816, null, "Do you already have a favourite browser or PDF reader? Are you tired of seeing \"Try out [some browser] now!\" on some websites? Then this is a list is for you!", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/I%20Don't%20Want%20to%20Download%20Your%20Browser.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "I Don't Want to Download Your Browser", null, null, (short)3, new DateTime(2019, 3, 3, 4, 37, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/I%20Don't%20Want%20to%20Download%20Your%20Browser.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/I%20Don't%20Want%20to%20Download%20Your%20Browser.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/I%20Don't%20Want%20to%20Download%20Your%20Browser.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)850, null, "This list is mostly made for Pixiv, which is an East Asian artsite, whose on-average art quality wipes the floor with DeviantArt. It also allows porn of many types. Pressure on \"many\". So say that you're looking for imagery of consensual and pleasurable sex, and then you stumble across a crying Daniel Tiger wearing a corset being strapped to a bench in a diaper? Now such scenarios won't occur nearly as often as they did before!", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiAbusePorn.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Abuse porn' List", null, new DateTime(2018, 10, 9, 18, 7, 51, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 2, 23, 58, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiAbusePorn.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiAbusePorn.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiAbusePorn.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)847, null, "Get ads out of the way, applied mostly with Thai sites since there are tons of Easylist coverage is good outside already.", "https://github.com/sipp11/th_ad_filters/blob/master/README.md", null, null, "https://github.com/sipp11/th_ad_filters", "https://github.com/sipp11/th_ad_filters/issues", (short)5, "sipp11's Thai Ad Filters", null, new DateTime(2012, 12, 19, 15, 4, 22, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2015, 4, 17, 20, 40, 28, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/sipp11/th_ad_filters/master/th_list.txt", null, null },
                    { (short)841, null, null, null, null, null, "https://github.com/LinuxLowell/chat-annoyances", "https://github.com/LinuxLowell/chat-annoyances/issues", (short)5, "Chat Annoyances Filter List", null, new DateTime(2017, 7, 16, 23, 58, 16, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 8, 22, 17, 14, 39, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/LinuxLowell/chat-annoyances/master/chat-annoyances.txt", null, null },
                    { (short)840, null, "A filter list that filters unrelated recommendations in websites. It can be used via filtering/blocking software such as adblock and ublock. It is written with compliance to abp organization filter guidelines.", "https://github.com/KCaglarCoskun/enur-filter-list#unrelated-recommendations-filter-list-for-english-websites", null, null, "https://github.com/KCaglarCoskun/enur-filter-list", "https://github.com/KCaglarCoskun/enur-filter-list/issues", (short)11, "Unrelated Recommendations Filter List for English Websites", null, new DateTime(2017, 11, 16, 21, 19, 51, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 12, 18, 19, 24, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/KCaglarCoskun/enur-filter-list/master/enur-filter-list.txt", null, null },
                    { (short)839, null, "A filter list for Adblock Plus for remove \"Go to up\" buttons", "https://raw.githubusercontent.com/Manu1400/i-don-t-care-about-gotoup-btns/master/list-gotoup-btns.txt", "https://opencollective.com/captainfact_io", null, "https://github.com/Manu1400/i-don-t-care-about-gotoup-btns", "https://github.com/Manu1400/i-don-t-care-about-gotoup-btns/issues", (short)5, "I don't care about Go to up buttons", null, new DateTime(2017, 5, 28, 12, 59, 28, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 6, 15, 0, 38, 28, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Manu1400/i-don-t-care-about-gotoup-btns/master/list-gotoup-btns.txt", null, null },
                    { (short)838, null, "VBlocker is made by a normal person that surfs the web to see all of the ads that should be blocked and added to VBlocker.", "https://github.com/SG-Nebula/vblocker_adblockplus-filterlist#why-vblocker", null, null, "https://github.com/SG-Nebula/vblocker_adblockplus-filterlist", "https://github.com/SG-Nebula/vblocker_adblockplus-filterlist/issues", (short)7, "VBlocker", null, new DateTime(2018, 6, 17, 0, 59, 18, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 6, 17, 0, 59, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/SG-Nebula/vblocker_adblockplus-filterlist/master/vblocker", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)837, null, "SyndicationBlock is an AdBlock filter list to block content syndicators.", "https://github.com/duskwuff/syndicationblock#syndicationblock", null, "dusk@woofle.net", null, "https://github.com/duskwuff/syndicationblock", "https://github.com/duskwuff/syndicationblock/issues", (short)28, "SyndicationBlock", null, new DateTime(2014, 12, 8, 0, 23, 54, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2016, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/duskwuff/syndicationblock/master/filters.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)829, null, null, null, null, null, "https://github.com/miyurusankalpa/adblock-list-sri-lanka", "https://github.com/miyurusankalpa/adblock-list-sri-lanka/issues", (short)4, "Adblock Sri Lanka", null, new DateTime(2016, 3, 9, 13, 51, 12, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 12, 17, 10, 49, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/miyurusankalpa/adblock-list-sri-lanka/master/lkfilter.txt", null, null },
                    { (short)828, null, "Adblock List for Maldivian Websites", "https://github.com/evenxzero/Raajje-AdList/blob/master/README.md", null, null, "https://github.com/evenxzero/Raajje-AdList", "https://github.com/evenxzero/Raajje-AdList/issues", (short)13, "Raajje-AdList", null, new DateTime(2017, 8, 10, 4, 5, 10, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 1, 17, 14, 45, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/evenxzero/Raajje-AdList/master/filter.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)825, null, "An experiment that proves how unsecure most membership apps are.", "https://github.com/jasonbarone/membership-app-block-list#membership-app-block-list", null, "jason@jasonbarone.com", null, "https://github.com/jasonbarone/membership-app-block-list", "https://github.com/jasonbarone/membership-app-block-list/issues", (short)5, "Membership App Block List", null, new DateTime(2016, 7, 5, 8, 1, 53, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2016, 9, 11, 22, 48, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jasonbarone/membership-app-block-list/master/membership-app-block-list.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)822, null, null, null, null, null, "https://bbs.kafan.cn/thread-586237-1-1.html", null, (short)2, "VeleSila's Kafan List", null, new DateTime(2015, 7, 1, 4, 7, 37, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 2, 3, 7, 47, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/VeleSila/VELE-SILA-List/gh-pages/KaFanList.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)819, null, "This list removes even more (number-wise) distracting or uncomfortable things on YouTube.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/YouTubeEvenMorePureVideoExperience.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "YouTube: Even More Pure Video Experience", null, new DateTime(2018, 10, 5, 12, 48, 26, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 20, 12, 11, 34, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/YouTubeEvenMorePureVideoExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/YouTubeEvenMorePureVideoExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/YouTubeEvenMorePureVideoExperience.txt" },
                    { (short)848, null, "Makes things a bit more tidy when watching things on Twitch, by e.g. .", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Twitch: Pure Viewing Experience", null, new DateTime(2018, 10, 9, 15, 47, 21, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 25, 16, 36, 59, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/TwitchPureViewingExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/TwitchPureViewingExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/TwitchPureViewingExperience.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)686, null, null, null, "https://help.getadblock.com/support/solutions/articles/6000087900-where-can-i-pay-for-adblock-", null, "https://getadblock.com/", null, (short)4, "Chrome AdBlock auxiliarly filters", null, null, (short)3, "https://cdn.adblockcdn.com/filters/adblock_custom.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)660, null, "Block annoying web elements and reclaim lost screen real estate - Unsuck the web and make it more user friendly!", null, null, null, "https://github.com/yourduskquibbles/webannoyances", "https://github.com/yourduskquibbles/webannoyances/issues", (short)8, "Web Annoyances Ultralist - Newsletter Subscription Filters", null, new DateTime(2018, 7, 28, 20, 33, 58, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 12, 19, 21, 51, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yourduskquibbles/webannoyances/master/filters/newsletter_filters.txt", null, null },
                    { (short)658, null, "Block annoying web elements and reclaim lost screen real estate - Unsuck the web and make it more user friendly!", null, null, null, "https://github.com/yourduskquibbles/webannoyances", "https://github.com/yourduskquibbles/webannoyances/issues", (short)8, "Web Annoyances Ultralist - Generic Filters", null, new DateTime(2018, 7, 27, 15, 9, 6, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 11, 16, 27, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yourduskquibbles/webannoyances/master/filters/generic_filters.txt", null, null },
                    { (short)403, null, "This filter aims to remove emoji realted scripts, stylesheets, fonts, and images.", "https://github.com/lassekongo83/Frellwits-filter-lists#available-lists", null, null, "https://github.com/lassekongo83/Frellwits-filter-lists", "https://github.com/lassekongo83/Frellwits-filter-lists/issues", (short)4, "I Don't Care About Emojis", null, new DateTime(2018, 4, 28, 5, 31, 57, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 11, 24, 6, 42, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/lassekongo83/Frellwits-filter-lists/master/emoji-filter.txt", "https://repo.or.cz/Adblock-list-backups-Frellwits-filter-lists.git/blob_plain/refs/heads/master:/emoji-filter.txt", null },
                    { (short)399, null, "A filter for uBlock Origin that aims to remove regional Swedish ads, tracking, annoyances, scams + badware, and unnecessary bloat.", "https://github.com/lassekongo83/Frellwits-filter-lists#available-lists", null, null, "https://github.com/lassekongo83/Frellwits-filter-lists", "https://github.com/lassekongo83/Frellwits-filter-lists/issues", (short)4, "Frellwit's Swedish Filter", null, new DateTime(2017, 1, 5, 7, 7, 23, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 14, 16, 5, 41, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/lassekongo83/Frellwits-filter-lists/master/Frellwits-Swedish-Filter.txt", "https://repo.or.cz/Adblock-list-backups-Frellwits-filter-lists.git/blob_plain/refs/heads/master:/Frellwits-Swedish-Filter.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)392, null, "Intends to make it easier to browse various websites without being forced by various nag-windows to log in.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Browse Websites Without Logging In", null, new DateTime(2018, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 14, 22, 38, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/BrowseWebsitesWithoutLoggingIn.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/BrowseWebsitesWithoutLoggingIn.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/BrowseWebsitesWithoutLoggingIn.txt" },
                    { (short)391, null, "Removes popular games and most bad games from the front pages of various webstores and app stores.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "I Hate Overpromoted Games", null, new DateTime(2018, 5, 5, 20, 51, 42, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 2, 24, 16, 16, 37, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/IHateOverpromotedGames.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/IHateOverpromotedGames.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/IHateOverpromotedGames.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)390, null, "Filters that hide and block RSS sections and leftovers from hidden newsletters combined with social elements on Polish-language websites (supplement for Polish Social Filters and Polish Annoyance Filters).", "https://github.com/PolishFiltersTeam/PolishAntiAnnoyingSpecialSupplement", null, null, "https://github.com/PolishFiltersTeam/PolishAntiAnnoyingSpecialSupplement", "https://github.com/PolishFiltersTeam/PolishAntiAnnoyingSpecialSupplement/issues", (short)9, "Polish Anti-Annoying Special Supplement", null, new DateTime(2018, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 9, 17, 21, 23, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAntiAnnoyingSpecialSupplement/master/polish_rss_filters.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)385, null, "Are you tired of having to use Paint to remove potentially sensitive usernames, each and every time you're making a compilation of social media posts? Say no more! This list will remove posters' usernames from the biggest compilation sources, so that you can simply take a screencap and add it directly into your video/timeline!", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Username Hider for Compilation Creators", null, null, (short)3, new DateTime(2019, 4, 14, 22, 21, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Username%20Hider%20for%20Compilation%20Creators.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Username%20Hider%20for%20Compilation%20Creators.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Username%20Hider%20for%20Compilation%20Creators.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)381, null, "Saving the Internets... one roll at a time.", "https://rickrolldb.com/", null, null, "https://rickrolldb.com/", "https://github.com/jamiew/rickrolldb/issues", (short)38, "Rickroll Blacklist", null, "https://rickrolldb.com/", (short)3, new DateTime(2019, 3, 25, 11, 34, 9, 0, DateTimeKind.Unspecified), "https://rickrolldb.com/ricklist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)376, null, "Blocks title screen ads on several large MMO game websites.", "https://github.com/collinbarrett/FilterLists/issues/257", null, null, "https://github.com/haykam821/Blocklists", "https://github.com/haykam821/Blocklists/issues", (short)2, "Haykam's MMO List", null, new DateTime(2018, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 5, 26, 0, 28, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/haykam821/Blocklists/master/mmo.txt", null, null },
                    { (short)374, null, null, null, null, null, "https://github.com/Hubird-au/Adversity", "https://github.com/Hubird-au/Adversity/issues", (short)16, "Adversity - Extreme Measures", null, new DateTime(2014, 5, 22, 4, 12, 11, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2016, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Hubird-au/Adversity/master/Extreme-Measures.txt", null, null },
                    { (short)373, null, null, null, null, null, "https://github.com/Hubird-au/Adversity", "https://github.com/Hubird-au/Adversity/issues", (short)16, "Adversity - Antisocial", null, new DateTime(2014, 5, 22, 4, 12, 11, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2016, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Hubird-au/Adversity/master/Antisocial.txt", null, null },
                    { (short)372, null, null, null, null, null, "https://github.com/Hubird-au/Adversity", "https://github.com/Hubird-au/Adversity/issues", (short)16, "Adversity", null, new DateTime(2014, 5, 22, 4, 12, 11, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2016, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Hubird-au/Adversity/master/Adversity.txt", null, null },
                    { (short)429, null, "International List consists mostly of static cosmetic filters. English and few German websites are included. As regards tracking filters, they have been partly copied from other privacy filter lists.", "https://github.com/betterwebleon/international-list#international-list", null, null, "https://github.com/betterwebleon/international-list", "https://github.com/betterwebleon/international-list/issues", (short)11, "International List", null, new DateTime(2015, 12, 21, 1, 15, 59, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 1, 20, 23, 29, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/betterwebleon/international-list/master/filters.txt", null, null },
                    { (short)355, null, "Hide annoying elements", "https://github.com/eladkarako/hosts/blob/master/build/hosts_adblock_anti_annoyances_hide.txt", "https://www.paypal.me/e1adkarak0", null, "https://github.com/eladkarako/hosts", null, (short)11, "HOSTS AdBlock - Anti-Annoyance - Hide Annoying Elements", null, new DateTime(2018, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 22, 22, 9, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eladkarako/hosts/master/build/hosts_adblock_anti_annoyances_hide.txt", null, null },
                    { (short)332, null, "Get rid of \"Overlay Popups\" that trying to integrate your social network account, force you to like and/or follow pages and other accounts.", "https://github.com/kowith337/ThaiAntiForceLike/blob/master/README.md", null, null, "https://github.com/kowith337/ThaiAntiForceLike", "https://github.com/kowith337/ThaiAntiForceLike/issues", (short)5, "ThaiAntiForceLike", null, new DateTime(2016, 1, 19, 17, 35, 35, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2016, 12, 14, 4, 49, 35, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/ThaiAntiForceLike/master/AntiForceLike.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)327, null, "Removes \"Download Our App\" banners from mobile website versions, for those who prefer their phone web browsers instead of apps.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Staying On The Phone Browser", null, null, (short)3, new DateTime(2019, 4, 13, 7, 46, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/stayingonbrowser/Staying%20On%20The%20Phone%20Browser", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/stayingonbrowser/Staying%20On%20The%20Phone%20Browser", "https://gitlab.com/DandelionSprout/adfilt/raw/master/stayingonbrowser/Staying%20On%20The%20Phone%20Browser" },
                    { (short)315, null, "Filters, which makes easer to use of the largest Polish trading platforms like Allegro, Ceneo, eBay, OLX and Sprzedajemy and other, blocking unnecessary, annoying and potentially dangerous elements - ads, sponsored articles, or scripts that track user's activities. They enable simpler and faster use of supported websites without limiting their functionality, while increasing the privacy of buyers and sellers.", "https://alleblock.pl/", "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RN7R64TJLWQW6", "blablabla@alleblock.pl", null, "https://alleblock.pl/", "https://github.com/maciejtarmas/AlleBlock/issues", (short)13, "AlleBlock", null, null, (short)3, new DateTime(2019, 4, 13, 6, 47, 10, 0, DateTimeKind.Unspecified), "https://alleblock.pl/alleblock/alleblock.txt", null, null },
                    { (short)306, null, "Block only suggestions.", "https://youtube.adblockplus.me/", "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://youtube.adblockplus.me/", null, (short)5, "YouTube: Remove Youtube Suggestions", null, null, (short)3, new DateTime(2019, 4, 13, 2, 19, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/yt_annoyances_suggestions.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)305, null, "Official filter list file used for blocking ads on Czech and Slovak websites.", "https://github.com/tomasko126/easylistczechandslovak", null, "tomastaro@adblock.sk", "https://easylist-czech-and-slovak.tenderapp.com/", "https://adblock.sk/", "https://github.com/tomasko126/easylistczechandslovak/issues", (short)8, "EasyList Czech and Slovak", null, new DateTime(2013, 8, 17, 18, 16, 56, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 12, 15, 31, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/tomasko126/easylistczechandslovak/master/filters.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)301, null, "EasyList is the primary filter list that removes most adverts from international web pages, including unwanted frames, images, and objects. It is the most popular list used by many ad blockers and forms the basis of over a dozen combination and supplementary filter lists.", "https://easylist.to/", null, "easylist.subscription@gmail.com", "https://forums.lanik.us/viewforum.php?f=23", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyList", null, null, (short)3, new DateTime(2019, 4, 12, 23, 37, 10, 0, DateTimeKind.Unspecified), "https://easylist.to/easylist/easylist.txt", "https://fanboy.co.nz/easylist.txt", "https://easylist-downloads.adblockplus.org/easylist.txt" },
                    { (short)300, null, "Chinese supplement for the EasyList filters.", "https://easylist-downloads.adblockplus.org/easylistchina.txt", null, "easylist.china@gmail.com", "https://abpchina.org/forum/forum.php", "https://abpchina.org/forum/forum.php?mod=viewthread&tid=29667", null, (short)4, "EasyList China", null, null, (short)3, new DateTime(2019, 4, 12, 23, 31, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistchina.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)299, null, "A list combining EasyList China and EasyList.", null, null, null, null, null, (short)4, "EasyList China + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 22, 10, 13, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistchina+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)298, null, "Chinese supplement for the EasyList filters on IT sites.", null, null, null, "https://github.com/nfer/easylistchina_it", "https://github.com/nfer/easylistchina_it/issues", (short)5, "EasyList China in IT", null, new DateTime(2015, 3, 18, 9, 21, 43, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2015, 3, 18, 9, 21, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/nfer/easylistchina_it/master/easylistchina_it.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)297, null, "A list combining EasyList Czech and Slovak and EasyList.", null, null, null, null, null, (short)8, "EasyList Czech and Slovak + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 21, 42, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistczechslovak+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)295, null, "EasyList Dutch is an [EasyList] affiliated filter list written by the EasyList author Famlam that specifically removes adverts on Dutch language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "fam.lam@live.nl", "https://forums.lanik.us/viewforum.php?f=100", "https://easylist.to/", null, (short)4, "EasyList Dutch", null, null, (short)3, new DateTime(2019, 4, 8, 21, 34, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistdutch.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)346, null, "Test supplement list for Official Polish Filters for AdBlock, uBlock Origin & AdGuard", null, "https://patronite.pl/polskiefiltry", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Official Polish Filters for AdBlock, uBlock Origin & AdGuard - Test Supplement", null, new DateTime(2017, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://www.certyficate.it/kontakt/", (short)3, new DateTime(2017, 10, 29, 19, 26, 27, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/polish-adblock-filters/adblock_test.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)432, null, "Do you feel that Friendship is Magic has overstayed its welcome? Here's a list that'll let you keep more of a distance to it.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-FіМ List", null, null, (short)3, new DateTime(2019, 4, 15, 7, 26, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-F%D1%96%D0%9C%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-F%D1%96%D0%9C%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-F%D1%96%D0%9C%20List.txt" },
                    { (short)433, null, "Are you tired of being told by others what you should watch, specifically the hipsters that run rampant on IMDB? Here's a way to let you feel more peaceful with your truly own opinions.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-IMDB List", null, null, (short)3, new DateTime(2019, 4, 15, 7, 32, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-IMDB%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-IMDB%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-IMDB%20List.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)434, null, "Are you tired of having to turn off Autoplay on YouTube every time you e.g. go to incognito mode? Are you worried of having to use specific extensions just for that purpose? Then this list is for you. Now also working on phone browsers!", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Stop Autoplay on YouTube", null, new DateTime(2018, 7, 31, 18, 32, 49, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 13, 19, 39, 29, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/StopAutoplayOnYouTube.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/StopAutoplayOnYouTube.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/StopAutoplayOnYouTube.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)616, null, "Filters that hide and block various other elements.", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_other_widgets.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters - Other Elements", null, new DateTime(2018, 6, 30, 16, 19, 8, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 13, 22, 0, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_other_widgets.txt", null, null },
                    { (short)613, null, "Filters that hide and block contact/feedback widgets.", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_contact_feedback_widgets.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters - Contact/Feedback Widgets", null, new DateTime(2018, 6, 30, 16, 14, 48, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 13, 22, 0, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_contact_feedback_widgets.txt", null, null },
                    { (short)612, null, "Filters that hide and block pop-ups.", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_pop-ups.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters - Pop-ups", null, new DateTime(2018, 6, 27, 17, 32, 2, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 13, 22, 0, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_pop-ups.txt", null, null },
                    { (short)611, null, "Filters that hide and block in-house ads.", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_backgrounds_self-advertising.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters - Backgrounds Containing Self-Advertising", null, new DateTime(2018, 6, 29, 19, 22, 33, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 5, 22, 3, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_backgrounds_self-advertising.txt", null, null },
                    { (short)610, null, "Filters that prevent videos from scrolling.", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_scrolling_videos.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters - Scrolling Videos", null, new DateTime(2018, 6, 27, 17, 32, 2, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 7, 22, 0, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_scrolling_videos.txt", null, null },
                    { (short)609, null, "Filters that hide and block web push notifications.", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_push.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyances Filters - Web Push Notifications", null, new DateTime(2018, 6, 22, 16, 42, 29, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 13, 14, 0, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_push.txt", null, null },
                    { (short)608, null, "Filters that hide and block arrows.", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_arrows.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters - Arrows", null, new DateTime(2018, 6, 27, 17, 32, 2, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 13, 22, 0, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_arrows.txt", null, null },
                    { (short)607, null, "Filters that hide and block newsletters (without pop-ups).", "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_newsletters.txt", null, null, "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters", "https://github.com/PolishFiltersTeam/PolishAnnoyanceFilters/issues", (short)9, "Polish Annoyance Filters - Newsletters", null, new DateTime(2018, 6, 27, 17, 32, 2, 0, DateTimeKind.Unspecified), "https://polishannoyancefilters.netlify.com/issues", (short)3, new DateTime(2019, 4, 13, 22, 0, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/PolishAnnoyanceFilters/master/PAF_newsletters.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)603, null, "This list aims to remove particularly disturbing content on YouTube, DailyMotion, Vimeo, Rumble, and several other video sites, that targets young children, as well as nursery rhymes, \"Finger Family\", \"Wrong Heads\", and other things that are hotbeds for extremely unproductive videos. Also supports YouTube on mobile browsers (but sadly not the apps).", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-Elsagate List", null, null, (short)3, new DateTime(2019, 4, 8, 8, 58, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Anti-Elsagate%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Anti-Elsagate%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Anti-Elsagate%20List.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)565, null, "EasyList Lite is new in AdBlock for Microsoft Edge and Mozilla Firefox. It's a subset of EasyList. EasyList Lite includes only the filters that actually block and hide ads on the websites people visit most. This makes it several thousand filters smaller than EasyList, and that enables AdBlock to work faster on those sites.", "https://help.getadblock.com/support/solutions/articles/6000142821-what-is-easylist-lite-", null, "https://help.getadblock.com/support/home", "https://help.getadblock.com/support/home", null, (short)4, "EasyList - Lite", "https://help.getadblock.com/support/solutions/articles/6000142821-what-is-easylist-lite-", null, (short)3, new DateTime(2018, 12, 14, 7, 11, 11, 0, DateTimeKind.Unspecified), "https://cdn.adblockcdn.com/filters/easylist_lite.txt", null, null },
                    { (short)564, null, "Stop Anti-adblock tracking and problematic Anti-adblock websites", "https://fanboy.co.nz/", "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", null, "https://www.fanboy.co.nz/", "https://github.com/ryanbr/fanboy-adblock/issues", (short)16, "Fanboy's problematic-sites", null, null, (short)3, new DateTime(2019, 4, 13, 2, 49, 11, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-problematic-sites.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)562, null, "Supports major domestic video sites! Already mainly supports uBO rules! Some of the large site element hiding rules have moved to Stylish, please go to https://userstyles.org/styles/117992/theme to install those entries.", "https://github.com/xinggsf/Adblock-Plus-Rule/blob/master/README.md", null, "xinggsf@gmail.com", "https://bbs.kafan.cn/thread-1866845-1-1.html", "https://bbs.kafan.cn/thread-1866845-1-1.html", "https://github.com/xinggsf/Adblock-Plus-Rule/issues", (short)5, "Winding Advertising Filter Rules (乘风 广告过滤规则)", null, new DateTime(2015, 7, 20, 14, 39, 35, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 8, 6, 20, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/ABP-FX.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)517, null, "BarbBlock is a content blocking list with standalone browser extensions for Chrome and Firefox. It blacklists sites which have used DMCA takedowns to force removal from other content blocking lists. Such takedowns are categorically invalid, but they can be effective at intimidating small open-source projects into compliance.", "https://github.com/paulgb/BarbBlock/blob/master/README.md", null, null, "https://ssl.bblck.me/", "https://github.com/paulgb/BarbBlock/issues", (short)2, "BarbBlock Adblock Plus", null, null, (short)3, new DateTime(2019, 1, 14, 8, 57, 9, 0, DateTimeKind.Unspecified), "https://ssl.bblck.me/blacklists/adblock-plus.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)509, null, "Filters for blocking all the clickbait that surrounds articles and tries to drag you into a never-ending binge.", "https://github.com/endolith/clickbait", null, null, "https://github.com/endolith/clickbait", "https://github.com/endolith/clickbait/issues", (short)2, "Distractions and Clickbait Filter", null, new DateTime(2016, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 11, 17, 15, 45, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/endolith/clickbait/master/clickbait.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)508, null, "Whitelist of section with promotion of fake science/news. More at: https://github.com/PolishFiltersTeam/KAD/issues/649.", "https://github.com/PolishFiltersTeam/KAD", null, "polishjarvis@gmail.com", null, "https://kadantiscam.netlify.com/", "https://github.com/PolishFiltersTeam/KAD/issues", (short)8, "KAD - The Whitelist of the Controversial Pages", null, "https://kadantiscam.netlify.com/#contact", (short)3, "https://raw.githubusercontent.com/PolishFiltersTeam/KAD/gh-pages/assets/other/kadfakewhitelist.txt", "https://raw.githubusercontent.com/PolishFiltersTeam/KAD/gh-pages/assets/other/kadfakewhitelist.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)506, null, "Allow nonintrusive advertising without third-party tracking", "https://easylist-downloads.adblockplus.org/exceptionrules-privacy-friendly.txt", null, "info@eyeo.com", null, "https://acceptableads.com/", null, (short)5, "Acceptable Ads without third-party tracking", null, null, (short)3, new DateTime(2019, 4, 8, 12, 42, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/exceptionrules-privacy-friendly.txt", null, null },
                    { (short)505, null, "This serves as a template and guidance for people who want to learn how to make their own adblock lists. This template contains all conventionally used tags; the 'Beginner' version is easier to deal with.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Adblock List Template (Novice)", null, null, (short)3, new DateTime(2019, 2, 17, 20, 24, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Adblock%20list%20templates/Adblock%20list%20template%20-Novice-.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Adblock%20list%20templates/Adblock%20list%20template%20-Novice-.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Adblock%20list%20templates/Adblock%20list%20template%20-Novice-.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)504, null, "This serves as a template and guidance for people who want to learn how to make their own adblock lists. This template contains the bare-bones necessities; the 'Novice' version has more tags and explanations.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Adblock List Template (Beginner)", null, null, (short)3, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Adblock%20list%20templates/Adblock%20list%20template%20-Beginner-.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Adblock%20list%20templates/Adblock%20list%20template%20-Beginner-.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Adblock%20list%20templates/Adblock%20list%20template%20-Beginner-.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)480, null, null, null, null, "mail.energized@protonmail.com", null, "https://github.com/yecarrillo/adblock-colombia", "https://github.com/yecarrillo/adblock-colombia/issues", (short)4, "yecarrillo's ad-blocking subscription for Colombian sites", null, new DateTime(2010, 3, 3, 23, 2, 56, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 3, 15, 15, 35, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yecarrillo/adblock-colombia/master/adblock_co.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)479, null, null, null, null, "easylist.polish@gmail.com", null, "https://easylist.to", "https://forums.lanik.us/viewforum.php?f=107", (short)4, "EasyList Polish", null, null, (short)3, new DateTime(2019, 4, 15, 11, 28, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistpolish.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)469, null, "list for keloger,system tracker,cookie collector,malware tracker, and oter spyware", null, null, null, null, "https://github.com/kano1/I/issues", (short)5, "Spyware Filter Block List", null, new DateTime(2017, 12, 25, 2, 42, 17, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 14, 13, 29, 15, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kano1/Kano/master/Spyware.txt", null, null },
                    { (short)468, null, "list for bad isueads", null, null, null, null, "https://github.com/kano1/I/issues", (short)5, "Adware Filter Block", null, new DateTime(2018, 1, 14, 0, 15, 48, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 14, 13, 6, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kano1/I/master/adware.txt", null, null },
                    { (short)467, null, "Domain Bad Isue Ads", null, null, null, null, "https://github.com/kano1/I/issues", (short)5, "Adware BL(By Garuda)", null, new DateTime(2018, 1, 1, 16, 20, 52, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 10, 6, 12, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kano1/I/master/badway.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)437, null, "Complementary subscription to EasyList.", "https://github.com/easylistbrasil/easylistbrasil/", null, "easylistbrasil.subscription@gmail.com", "https://easylistbrasil.freeforums.net", "https://easylistbrasil.github.io/", "https://github.com/easylistbrasil/easylistbrasil/issues", (short)8, "EasyList Brasil", null, new DateTime(2018, 8, 5, 20, 20, 52, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 4, 15, 7, 50, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/easylistbrasil/easylistbrasil/filtro/easylistbrasil.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)436, null, "A filter for uBlock Origin (Firefox Android) that aims to specifically target websites that nags people to install their app.", "https://github.com/lassekongo83/Frellwits-filter-lists#available-lists", null, null, "https://github.com/lassekongo83/Frellwits-filter-lists", "https://github.com/lassekongo83/Frellwits-filter-lists/issues", (short)4, "I Don't Want Your App", null, new DateTime(2018, 7, 15, 7, 17, 10, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2019, 1, 27, 19, 23, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/lassekongo83/Frellwits-filter-lists/master/i-dont-want-your-app.txt", "https://repo.or.cz/Adblock-list-backups-Frellwits-filter-lists.git/blob_plain/refs/heads/master:/i-dont-want-your-app.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1656, null, null, null, null, null, "https://github.com/invasy/umatrix-ruleset", "https://github.com/invasy/umatrix-ruleset/issues", (short)5, "Vasiliy Polyakov's Custom Ruleset Recipes", null, null, (short)7, new DateTime(2019, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/invasy/umatrix-ruleset/master/ruleset.txt", null, null },
                    { (short)1657, null, null, null, null, null, "https://github.com/stephengeorgewest/my-umatrix-rules", "https://github.com/stephengeorgewest/my-umatrix-rules/issues", (short)5, "Stephen George West's uMatrix Rules", null, null, (short)7, new DateTime(2016, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/stephengeorgewest/my-umatrix-rules/master/my-umatrix-rules.txt", null, null },
                    { (short)1658, null, null, null, null, null, "https://github.com/tranhoangcore/uMatrix-Rules", "https://github.com/tranhoangcore/uMatrix-Rules/issues", (short)5, "Hoang Nguyen's uMatrix Rules", null, null, (short)7, new DateTime(2019, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/tranhoangcore/uMatrix-Rules/master/my-umatrix-rules.txt", null, null },
                    { (short)1659, null, null, null, null, null, "https://github.com/dadav/umatrix-rules/", "https://github.com/dadav/umatrix-rules/issues", (short)5, "dadav's uMatrix Rules", null, null, (short)7, new DateTime(2019, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/dadav/umatrix-rules/master/my-rules.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1877, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters. uBO users should use the regular version instead.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (Unbound)", null, new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)24, new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersUnbound.conf", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersUnbound.conf", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersUnbound.conf" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1786, "https://t.me/EnergizedProtection", "Regional annoyance blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Regional Extension (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/regional/formats/unbound.conf", null, null },
                    { (short)1785, "https://t.me/EnergizedProtection", "Lite pornware blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Lite Extension (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/porn-lite/formats/unbound.conf", null, null },
                    { (short)1784, "https://t.me/EnergizedProtection", "Block social apps and sites", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Social Extension (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/social/formats/unbound.conf", null, null },
                    { (short)1783, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Xtreme Extension (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/xtreme/formats/unbound.conf", null, null },
                    { (short)1782, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Unified Protection (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/unified/formats/unbound.conf", null, null },
                    { (short)1781, "https://t.me/EnergizedProtection", "Energized Adware & Malware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Ultimate Protection (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/ultimate/formats/unbound.conf", null, null },
                    { (short)1780, "https://t.me/EnergizedProtection", "Energized Pornware Blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Protection (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/porn/formats/unbound.conf", null, null },
                    { (short)1779, "https://t.me/EnergizedProtection", "Energized Basic Protection. Basic Protection to keep you safe in a balanced way!", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Basic Protection (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/basic/formats/unbound.conf", null, null },
                    { (short)1778, "https://t.me/EnergizedProtection", "Energized Liteweight Protection. Best for Android/iOS Users.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Protection (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/blu/formats/unbound.conf", null, null },
                    { (short)1777, "https://t.me/EnergizedProtection", "Energized Blu Go. Another Lite Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Go Protection (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/bluGo/formats/unbound.conf", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1942, null, null, null, null, null, null, null, (short)19, "Ben Tasker's List (Unbound)", null, null, (short)24, "https://www.bentasker.co.uk/adblock/autolist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1776, "https://t.me/EnergizedProtection", "True Lite Hosts from Energized. Only 1MB in Size.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Spark Protection (Unbound)", null, "https://app.energized.pro", (short)24, "https://raw.githubusercontent.com/EnergizedProtection/block/master/spark/formats/unbound.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1526, null, "Block advertisements.", null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (Unbound)", "https://pgl.yoyo.org/as/policy.php", null, (short)24, new DateTime(2019, 4, 5, 21, 32, 11, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=unbound&showintro=1&mimetype=plaintext", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1504, null, "This project generates dnsmasq, bind and unbound zone files to be used in DNS based AD Blockers.", null, null, null, "https://github.com/oznu/dns-zone-blacklist", "https://github.com/oznu/dns-zone-blacklist/issues", (short)5, "DNS Zone Blacklist Generator Unbound", null, new DateTime(2017, 7, 2, 8, 28, 7, 0, DateTimeKind.Unspecified), null, (short)24, new DateTime(2019, 4, 12, 11, 59, 5, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/oznu/dns-zone-blacklist/master/unbound/unbound.blacklist", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1478, null, null, null, null, null, "https://hblock.molinero.dev/", null, (short)2, "hBlock Hosts Unbound", null, null, (short)24, new DateTime(2019, 4, 20, 3, 45, 12, 0, DateTimeKind.Unspecified), "https://hblock.molinero.dev/hosts_unbound.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1585, null, "This is a slimmer version of \"Dandelion Sprout's Nordic Filters\", intended for users of software tools that doesn't support adblocker syntaxes. It chiefly targets scams and malware on Norwegian or Danish sites, as well as some advert and tracking servers.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (The «hosts.deny» version)", null, new DateTime(2019, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)23, new DateTime(2019, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersHostsDeny.deny", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersHostsDeny.deny", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersHostsDeny.deny" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1521, null, null, null, null, null, "https://hosts.ubuntu101.co.za/", null, (short)2, "Ultimate Hosts Blacklist Deny", null, null, (short)23, new DateTime(2019, 4, 5, 14, 53, 19, 0, DateTimeKind.Unspecified), "https://hosts.ubuntu101.co.za/hosts.deny", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1520, null, null, null, null, null, "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist", "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist/issues", (short)2, "Ultimate Hosts Blacklist Superhosts", null, new DateTime(2019, 3, 6, 20, 4, 34, 0, DateTimeKind.Unspecified), null, (short)23, new DateTime(2019, 4, 21, 16, 4, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Ultimate.Hosts.Blacklist/master/superhosts.deny/superhosts0.deny", "https://hosts.ubuntu101.co.za/superhosts.deny", null },
                    { (short)1492, null, "The Ultimate hosts file for protecting your computer or device against over a million bad web sites. Protect your children and family from gaining access to bad web sites and protect your devices and pc from being infected with Malware or Ransomware.", null, null, null, "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist", null, (short)2, "The Ultimate Daily Hosts Blacklist", null, new DateTime(2019, 3, 2, 18, 18, 31, 0, DateTimeKind.Unspecified), null, (short)23, new DateTime(2019, 4, 20, 16, 4, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Ultimate.Hosts.Blacklist/master/hosts.deny/hosts0.deny", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1986, null, "AdGuard's official DNS server to remove ads, trackers, and porn. Believed to be using \"AdGuard Simplified Domain Names Filter\", as well as AdGuard's Safe Search plugin and an unspecified third-party anti-porn list. Links that didn't fit in the View button URL texts, include 176.103.130.134 — 2a00:5a60::bad1:0ff — 2a00:5a60::bad2:0ff", null, null, "support@adguard.com", null, "https://adguard.com/adguard-dns/overview.html", null, (short)5, "AdGuard DNS — Family Protection", null, null, (short)21, "https://dns-family.adguard.com/dns-query", "tls://dns-family.adguard.com", "176.103.130.132" },
                    { (short)1985, null, "AdGuard's official DNS server to remove ads and trackers. Believed to be using \"AdGuard Simplified Domain Names Filter\". Links that didn't fit in the View button URL texts, include 176.103.130.131 — 2a00:5a60::ad1:0ff — 2a00:5a60::ad2:0ff", null, null, "support@adguard.com", null, "https://adguard.com/adguard-dns/overview.html", null, (short)5, "AdGuard DNS — Standard", null, null, (short)21, "https://dns.adguard.com/dns-query", "tls://dns.adguard.com", "176.103.130.130" },
                    { (short)1983, null, "On the internet, quite a lot of erotic art seems to have been made for people with zero self-confidence whatsoever. And for highly inexplicable reasons, a lot of online netizens seem to deeply crave to become the subjects of (or imposing) slavery, abuse, imprisonment, blatant rape, mauling, squishing, critical infections, death, and brutal death, among other things. If you are a sufficiently functional sentient being that you become physically sick from such notions (which you have all rights to get sick for), this list is how to lift yourself above such things.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Overly submissive erotica' List", null, null, (short)21, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiSubmissiveEroticaList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiSubmissiveEroticaList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiSubmissiveEroticaList.txt" },
                    { (short)1901, null, "This is a uBO compilation list for those who've grown very tired of how online cartoon fans and communities generally agree on sharing the same opinions on which shows to either praise as the second coming of Winston Churchill, or hate so much as to send death threats to the creators of them. If you like actually good cartoons (e.g. the comedic, preschool, and/or European ones), here's a list for you.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Cartoon Hipster' List", null, null, (short)21, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiCartoonHipsterList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiCartoonHipsterList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiCartoonHipsterList.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1739, null, "Hosts file to avoid advertisement display on website.", "https://warui.intaa.net/adhosts/", null, null, "https://warui.intaa.net/adhosts/", null, (short)5, "Warui Hosts (Unbound)", null, "https://warui.intaa.net/adhosts/#fh5co-blog-section", (short)24, new DateTime(2019, 4, 13, 10, 0, 14, 0, DateTimeKind.Unspecified), "https://warui.intaa.net/adhosts/local_zone.conf.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1575, null, "Do you wish to remove distracting buttons, Amazon Prime features, and display more chat comments at once, all at the same time? Then this list is your dream come true.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Twitch: Even More Pure Viewing Experience", null, new DateTime(2019, 5, 11, 13, 0, 0, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2019, 5, 11, 13, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/TwitchEvenMorePureViewingExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/TwitchEvenMorePureViewingExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/TwitchEvenMorePureViewingExperience.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1477, null, null, null, null, null, "https://hblock.molinero.dev/", null, (short)2, "hBlock Hosts RPZ", null, null, (short)25, new DateTime(2019, 4, 20, 3, 6, 13, 0, DateTimeKind.Unspecified), "https://hblock.molinero.dev/hosts_rpz.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1665, null, "URLhaus is a project from abuse.ch with the goal of sharing malicious URLs that are being used for malware distribution.", null, null, null, "https://urlhaus.abuse.ch/", null, (short)28, "abuse.ch URLhaus Malicious URL Blocklist (RPZ)", null, null, (short)25, "https://urlhaus.abuse.ch/downloads/rpz/", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)38, null, "AdBlock list for blocking 'how i can help you?' widgets.", "https://github.com/Rpsl/adblock-leadgenerator-list", null, null, "https://github.com/Rpsl/adblock-leadgenerator-list", "https://github.com/Rpsl/adblock-leadgenerator-list/issues", (short)5, "Lead Generator", null, new DateTime(2016, 11, 6, 14, 22, 56, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2018, 4, 12, 19, 48, 34, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Rpsl/adblock-leadgenerator-list/master/list/list.txt", "https://gitcdn.xyz/repo/Rpsl/adblock-leadgenerator-list/master/list/list.txt", "https://rawcdn.githack.com/Rpsl/adblock-leadgenerator-list/master/list/list.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)32, null, "Block advertisements.", null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List", "https://pgl.yoyo.org/as/policy.php", null, (short)28, new DateTime(2019, 4, 8, 19, 45, 12, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=adblockplus&showintro=1&mimetype=plaintext", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)19, null, "A list for uBlock/Adblock plus to stop cryptomining in your browser. ", "https://github.com/hoshsadiq/adblock-nocoin-list", null, null, "https://github.com/hoshsadiq/adblock-nocoin-list", "https://github.com/hoshsadiq/adblock-nocoin-list/issues", (short)2, "NoCoin", null, new DateTime(2017, 9, 17, 20, 18, 51, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 4, 6, 17, 40, 37, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/hoshsadiq/adblock-nocoin-list/master/nocoin.txt", "https://gitcdn.xyz/repo/hoshsadiq/adblock-nocoin-list/master/nocoin.txt", "https://rawcdn.githack.com/hoshsadiq/adblock-nocoin-list/master/nocoin.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)5, null, "A list to keep people from knowing you have read their Facebook message", "https://adblockplus.org/blog/how-to-keep-people-from-knowing-you-ve-read-their-facebook-message", "https://adblockplus.org/en/donate", "https://adblockplus.org/forum/index.php", "https://adblockplus.org/blog/how-to-keep-people-from-knowing-you-ve-read-their-facebook-message", null, (short)4, "Message \"Seen\" Remover for Facebook", null, null, (short)28, new DateTime(2019, 4, 8, 14, 53, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/message_seen_remover_for_facebook.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1560, null, "Block Bitcoin Mining in browser (webs and extensions)", "https://github.com/ruvelro/Halt-and-Block-Mining/blob/master/README.md", null, null, "https://github.com/ruvelro/Halt-and-Block-Mining", "https://github.com/ruvelro/Halt-and-Block-Mining/issues", (short)5, "Halt-and-Block-Mining", null, new DateTime(2017, 9, 22, 10, 46, 9, 0, DateTimeKind.Unspecified), null, (short)27, new DateTime(2018, 3, 18, 17, 7, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ruvelro/Halt-and-Block-Mining/master/HBmining.bat", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1913, null, "Pushy crappy service advertisers that just won't let it go", null, null, null, "https://github.com/tomzuu/blacklist-named", "https://github.com/tomzuu/blacklist-named/issues", (short)5, "Blacklist Named - Pushing", null, null, (short)26, "https://raw.githubusercontent.com/tomzuu/blacklist-named/master/pushing.sites.conf", null, null },
                    { (short)1912, null, "Speaks for itself", null, null, null, "https://github.com/tomzuu/blacklist-named", "https://github.com/tomzuu/blacklist-named/issues", (short)5, "Blacklist Named - Phishing", null, null, (short)26, "https://raw.githubusercontent.com/tomzuu/blacklist-named/master/phishing.sites.conf", null, null },
                    { (short)1911, null, "Cycle-jerk antivirus/ad sites", null, null, null, "https://github.com/tomzuu/blacklist-named", "https://github.com/tomzuu/blacklist-named/issues", (short)5, "Blacklist Named - Ads", null, null, (short)26, "https://raw.githubusercontent.com/tomzuu/blacklist-named/master/ad.sites.conf", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1527, null, "Block advertisements.", null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (BIND)", "https://pgl.yoyo.org/as/policy.php", null, (short)26, new DateTime(2019, 4, 5, 21, 37, 10, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=bindconfig&showintro=1&mimetype=plaintext", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1502, null, "This project generates dnsmasq, bind and unbound zone files to be used in DNS based AD Blockers.", null, null, null, "https://github.com/oznu/dns-zone-blacklist", "https://github.com/oznu/dns-zone-blacklist/issues", (short)5, "DNS Zone Blacklist Generator BIND", null, new DateTime(2016, 11, 9, 1, 40, 58, 0, DateTimeKind.Unspecified), null, (short)26, new DateTime(2019, 4, 12, 11, 59, 5, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/oznu/dns-zone-blacklist/master/bind/zones.blacklist", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1950, null, "Block advertisements.", null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (RPZ)", "https://pgl.yoyo.org/as/policy.php", null, (short)25, new DateTime(2019, 4, 5, 21, 32, 11, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=rpz&showintro=1&mimetype=plaintext", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1480, null, null, null, null, null, "https://github.com/ookangzheng/blahdns/tree/master/hosts", "https://github.com/ookangzheng/blahdns/issues", (short)2, "Blah DNS RPZ Blacklist", null, new DateTime(2018, 11, 1, 18, 23, 42, 0, DateTimeKind.Unspecified), null, (short)25, new DateTime(2019, 4, 15, 22, 34, 2, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ookangzheng/blahdns/master/hosts/rpz.blacklist", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1876, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters. uBO users should use the regular version instead.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (RPZ)", null, new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)25, new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersRPZ.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersRPZ.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersRPZ.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1797, "https://t.me/EnergizedProtection", "Regional annoyance blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Regional Extension (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/regional/formats/rpz.txt", null, null },
                    { (short)1796, "https://t.me/EnergizedProtection", "Lite pornware blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Lite Extension (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/porn-lite/formats/rpz.txt", null, null },
                    { (short)1795, "https://t.me/EnergizedProtection", "Block social apps and sites", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Social Extension (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/social/formats/rpz.txt", null, null },
                    { (short)1794, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Xtreme Extension (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/xtreme/formats/rpz.txt", null, null },
                    { (short)1793, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Unified Protection (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/unified/formats/rpz.txt", null, null },
                    { (short)1792, "https://t.me/EnergizedProtection", "Energized Adware & Malware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Ultimate Protection (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/ultimate/formats/rpz.txt", null, null },
                    { (short)1791, "https://t.me/EnergizedProtection", "Energized Pornware Blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Protection (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/porn/formats/rpz.txt", null, null },
                    { (short)1790, "https://t.me/EnergizedProtection", "Energized Basic Protection. Basic Protection to keep you safe in a balanced way!", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Basic Protection (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/basic/formats/rpz.txt", null, null },
                    { (short)1789, "https://t.me/EnergizedProtection", "Energized Liteweight Protection. Best for Android/iOS Users.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Protection (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/blu/formats/rpz.txt", null, null },
                    { (short)1788, "https://t.me/EnergizedProtection", "Energized Blu Go. Another Lite Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Go Protection (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/bluGo/formats/rpz.txt", null, null },
                    { (short)1787, "https://t.me/EnergizedProtection", "True Lite Hosts from Energized. Only 1MB in Size.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Spark Protection (RPZ)", null, "https://app.energized.pro", (short)25, "https://raw.githubusercontent.com/EnergizedProtection/block/master/spark/formats/rpz.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1872, null, "Malware, advert and tracking blacklist", null, null, null, "https://github.com/mkb2091/blockconvert", null, (short)4, "BlockConvert (RPZ)", null, null, (short)25, "https://raw.githubusercontent.com/mkb2091/blockconvert/master/output/domains.rpz", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)52, null, "Block all well known privacy trackers.", "https://gnuzilla.gnu.org/filters/blacklist.txt", null, "bug-gnuzilla@gnu.org", null, null, null, (short)5, "GNU Blacklist", null, null, (short)28, new DateTime(2019, 4, 13, 2, 34, 10, 0, DateTimeKind.Unspecified), "https://gnuzilla.gnu.org/filters/blacklist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1562, null, "Constantly updated filter list for uBlock Origin. Let's make sites cleaner and reading more comfortable!", "https://github.com/mtxadmin/ublock/issues", null, null, "https://github.com/mtxadmin/ublock/", "https://github.com/mtxadmin/ublock/issues", (short)5, "Yet another small uBlock filter list", null, new DateTime(2018, 12, 2, 17, 15, 52, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2019, 4, 4, 13, 7, 24, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mtxadmin/ublock/master/it", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1460, null, "Most of us who are able to read this description, likely have some old relatives who get very easily confused about even the most basic of PC stuff. This list, if implemented on their PCs alongside uBlock Origin, can help you help them stay more safe from old people's tech mistakes, giving you fewer strange help requests from them as well.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/ListForOldPeople.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's List for Old People", null, new DateTime(2019, 2, 12, 1, 6, 24, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2019, 2, 24, 16, 23, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/ListForOldPeople.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/ListForOldPeople.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/ListForOldPeople.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)833, null, "AdBlock Lists formatted for dnsmasq. Title says it all.", "https://github.com/acidwars/AdBlock-Lists#adblock-lists", null, null, "https://github.com/acidwars/AdBlock-Lists", "https://github.com/acidwars/AdBlock-Lists/issues", (short)5, "dnsmasq Adblock Lists - FastClick", null, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/acidwars/AdBlock-Lists/master/fastclick.conf", null, null },
                    { (short)832, null, "AdBlock Lists formatted for dnsmasq. Title says it all.", "https://github.com/acidwars/AdBlock-Lists#adblock-lists", null, null, "https://github.com/acidwars/AdBlock-Lists", "https://github.com/acidwars/AdBlock-Lists/issues", (short)5, "dnsmasq Adblock Lists - Facebook", null, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/acidwars/AdBlock-Lists/master/facebookblock.conf", null, null },
                    { (short)831, null, "AdBlock Lists formatted for dnsmasq. Title says it all.", "https://github.com/acidwars/AdBlock-Lists#adblock-lists", null, null, "https://github.com/acidwars/AdBlock-Lists", "https://github.com/acidwars/AdBlock-Lists/issues", (short)5, "dnsmasq Adblock Lists - Ads 01", null, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/acidwars/AdBlock-Lists/master/ads01.conf", null, null },
                    { (short)830, null, "AdBlock Lists formatted for dnsmasq. Title says it all.", "https://github.com/acidwars/AdBlock-Lists#adblock-lists", null, null, "https://github.com/acidwars/AdBlock-Lists", "https://github.com/acidwars/AdBlock-Lists/issues", (short)5, "dnsmasq Adblock Lists - Adblock", null, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/acidwars/AdBlock-Lists/master/adblock.conf", null, null },
                    { (short)400, null, "Blocks ads, fake sites, shock sites, malware hosts and trackers. This hostfile's aim is not to break any useful websites.", null, null, null, "https://github.com/notracking/hosts-blocklists", "https://github.com/notracking/hosts-blocklists/issues", (short)5, "notracking - Domains", null, new DateTime(2015, 12, 20, 0, 23, 44, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2019, 4, 14, 6, 55, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/notracking/hosts-blocklists/master/domains.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1589, null, "Most anti-malware lists are pretty big and can cover a 5- or 6-digit amount of specific domains. But my list hereby claims to remove more than 25% of all known malware sites with just a 2-digit amount of entries. This is mostly done by blocking top-level domains that have become devastatingly abused by spammers, usually because they allowed for free and uncontrolled domain registrations. There's also additional categories that cover unusual malware and phishing domains that very few other lists seem to cover.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Anti-Malware%20List.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Anti-Malware List (for Privoxy)", null, new DateTime(2018, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)19, new DateTime(2019, 4, 19, 0, 21, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwarePrivoxy.action", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Alternate%20versions%20Anti-Malware%20List/AntiMalwarePrivoxy.action", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwarePrivoxy.action" },
                    { (short)1583, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (for Privoxy)", null, new DateTime(2019, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)19, new DateTime(2019, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPrivoxy.action", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPrivoxy.action", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPrivoxy.action" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1573, null, null, null, null, null, "https://github.com/qwIvan/privoxy-adfilter", "https://github.com/qwIvan/privoxy-adfilter/issues", (short)5, "Privoxy Adfilter", null, null, (short)19, "https://raw.githubusercontent.com/qwIvan/privoxy-adfilter/master/adfilter.action", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)679, null, "This is my Privoxy configuration. It blocks common trackers and ads.", "https://github.com/fdb/privoxy-config/blob/master/README", null, null, "https://github.com/fdb/privoxy-config", "https://github.com/fdb/privoxy-config/issues", (short)5, "Privoxy Config - Block Trackers", null, new DateTime(2012, 2, 8, 10, 29, 30, 0, DateTimeKind.Unspecified), null, (short)19, new DateTime(2012, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/fdb/privoxy-config/master/block-trackers.action", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)678, null, null, null, null, null, "https://gist.github.com/sx2008/2766874", null, (short)5, "Privoxy User Action File (sx2008)", null, null, (short)19, new DateTime(2014, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://gist.githubusercontent.com/sx2008/2766874/raw/c12a305decef3332663d1e04efa80b881211cfac/user.action", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)676, null, "List of ad servers usable in Internet Junkbuster's / Privoxy block file", "https://pgl.yoyo.org/as/serverlist.php?hostformat=junkbuster;showintro=1&mimetype=plaintext", "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (Privoxy)", "https://pgl.yoyo.org/as/policy.php", null, (short)19, new DateTime(2019, 4, 13, 10, 41, 11, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/as/serverlist.php?hostformat=junkbuster;showintro=1&mimetype=plaintext", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)834, null, "AdBlock Lists formatted for dnsmasq. Title says it all.", "https://github.com/acidwars/AdBlock-Lists#adblock-lists", null, null, "https://github.com/acidwars/AdBlock-Lists", "https://github.com/acidwars/AdBlock-Lists/issues", (short)5, "dnsmasq Adblock Lists - Google", null, new DateTime(2017, 4, 18, 21, 1, 34, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2017, 4, 18, 21, 1, 34, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/acidwars/AdBlock-Lists/master/google.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1634, null, "List of 'trackers' from https://better.fyi/trackers", null, null, null, "https://gitlab.com/jamujr/lsrg", "https://gitlab.com/jamujr/lsrg/issues", (short)5, "Trackers Top 500", null, null, (short)18, "https://gitlab.com/jamujr/lsrg/raw/master/trackers-top-500.lsrules", null, null },
                    { (short)1632, null, null, null, null, null, "https://github.com/Kr00lIX/little-snitch-rules", "https://github.com/Kr00lIX/little-snitch-rules/issues", (short)5, "Kr00lIX's Tracking List", null, null, (short)18, "https://raw.githubusercontent.com/Kr00lIX/little-snitch-rules/master/Tracking.lsrules", null, null },
                    { (short)1631, null, null, null, null, null, "https://github.com/newyork10023/Little_Snitch", "https://github.com/newyork10023/Little_Snitch/issues", (short)4, "Block All All", null, null, (short)18, "https://raw.githubusercontent.com/newyork10023/Little_Snitch/master/Block_All_All.lsrules", null, null },
                    { (short)1630, null, "A set of rules for Little Snitch (4.1 or higher)", null, null, null, "https://github.com/jaydorsey/little_snitch_rules", "https://github.com/jaydorsey/little_snitch_rules/issues", (short)5, "Jay Dorsey's Little Snitch Block List", null, null, (short)18, "https://raw.githubusercontent.com/jaydorsey/little_snitch_rules/master/jaydorsey.lsrules", null, null },
                    { (short)1629, null, null, null, null, null, "https://github.com/balupton/littlesnitch-filters", "https://github.com/balupton/littlesnitch-filters/issues", (short)11, "balupton's CDN Whitelist", null, null, (short)18, "https://raw.githubusercontent.com/balupton/littlesnitch-filters/master/whitelist-cdn.lsrules", null, null },
                    { (short)1628, null, null, null, null, null, "https://github.com/balupton/littlesnitch-filters", "https://github.com/balupton/littlesnitch-filters/issues", (short)11, "balupton's Blocklist", null, null, (short)18, "https://raw.githubusercontent.com/balupton/littlesnitch-filters/master/blocklist.lsrules", null, null },
                    { (short)1627, null, "Adblock rules for Little Snitch by ThuanLe", null, null, null, "https://github.com/ldt116/little-snitch-vietnamese-ad-block-rules", "https://github.com/ldt116/little-snitch-vietnamese-ad-block-rules/issues", (short)5, "Vietnamese Ad Block by ThuanLe", null, null, (short)18, "https://raw.githubusercontent.com/ldt116/little-snitch-vietnamese-ad-block-rules/master/vietnamese-ad-block.lsrules", null, null },
                    { (short)1626, null, "Rules for Chrome, Firefox, and Safari.", null, null, null, "https://github.com/bdougherty/little-snitch-rules", "https://github.com/bdougherty/little-snitch-rules/issues", (short)2, "Browsers", null, null, (short)18, "https://raw.githubusercontent.com/bdougherty/little-snitch-rules/master/rules/browsers.lsrules", null, null },
                    { (short)1625, null, "Personal blocklist for Chinese sites", null, null, null, "https://github.com/jostyee/littlesnitch-rules", "https://github.com/jostyee/littlesnitch-rules/issues", (short)4, "jostyee's Blocklist China", null, null, (short)18, "https://raw.githubusercontent.com/jostyee/littlesnitch-rules/master/blocklist-china.lsrules", null, null },
                    { (short)1624, null, null, null, null, null, "https://github.com/jostyee/littlesnitch-rules", "https://github.com/jostyee/littlesnitch-rules/issues", (short)4, "jostyee's Blocklist", null, null, (short)18, "https://raw.githubusercontent.com/jostyee/littlesnitch-rules/master/blocklist.lsrules", null, null },
                    { (short)1623, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Social (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_social/sb_unified_hosts_social.lsrules", null, null },
                    { (short)1622, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Porn (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_porn/sb_unified_hosts_porn.lsrules", null, null },
                    { (short)1633, null, null, null, null, null, "https://github.com/Kr00lIX/little-snitch-rules", "https://github.com/Kr00lIX/little-snitch-rules/issues", (short)5, "Kr00lIX's Sync Limit Rules", null, null, (short)18, "https://raw.githubusercontent.com/Kr00lIX/little-snitch-rules/master/SyncLimit.lsrules", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1551, null, "Do you have a huge high-resolution monitor, and are feeling bothered by how websites still think that everyone are using 768-1080px monitors? Well, here's how to stretch them out like a piece of gum!", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/WebsiteStretcher4K.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Website Stretcher - 4K and 5K Edition", null, new DateTime(2019, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2019, 3, 29, 10, 37, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/WebsiteStretcher4K.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/WebsiteStretcher4K.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/WebsiteStretcher4K.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)835, null, "AdBlock Lists formatted for dnsmasq. Title says it all.", "https://github.com/acidwars/AdBlock-Lists#adblock-lists", null, null, "https://github.com/acidwars/AdBlock-Lists", "https://github.com/acidwars/AdBlock-Lists/issues", (short)5, "dnsmasq Adblock Lists - Microsoft", null, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2017, 4, 18, 20, 49, 58, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/acidwars/AdBlock-Lists/master/microsoftblock.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1479, null, null, null, null, null, "https://hblock.molinero.dev/", null, (short)2, "hBlock Hosts DNSMASQ", null, null, (short)20, new DateTime(2019, 4, 20, 5, 32, 11, 0, DateTimeKind.Unspecified), "https://hblock.molinero.dev/hosts_dnsmasq.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1455, null, "Having initially been made in a failed bid to get a 2nd list of mine included in uBlock Origin, it remains online for collection count purposes.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AnnoyancesList", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Annoyances List", null, new DateTime(2019, 2, 10, 8, 37, 20, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2019, 2, 10, 8, 37, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AnnoyancesList", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AnnoyancesList", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AnnoyancesList" },
                    { (short)1454, null, "This list was initially made as a kind gesture to https://github.com/theel0ja, who has been using, recommending, and promoting the lists above. This Nano- and uBO-exclusive list removes all sorts of annoying banners that few other lists take care of, including uncloseable overlays, banners that advertise major browsers, and certain banners that ask if you want to be asked to receive bad browser notifications (It makes sense in context).", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AnnoyingBannersAndOverlays.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Annoying Banners and Overlays List", null, new DateTime(2019, 1, 28, 17, 9, 5, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2019, 1, 28, 17, 43, 41, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AnnoyingBannersAndOverlays.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AnnoyingBannersAndOverlays.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AnnoyingBannersAndOverlays.txt" },
                    { (short)882, null, "Combines Mochi Filter, Mochi Filter Extended, Negi Filter, Kame Filter, Kotori Filter, Ichigo Filter, and Kujira Filter.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Complete Mochi Filter", null, new DateTime(2018, 2, 16, 23, 42, 21, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2019, 1, 14, 15, 3, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/all.txt", null, null },
                    { (short)853, null, "This list combines \"YouTube: Even More Pure Video Experience\", \"Stop Autoplay For YouTube\", \"Anti-Elsagate List\", \"Wikia: Pure Browsing Experience\", \"Twitch: Pure Viewing Experience\", and \"Know Your Meme: Pure Browsing Experience\". It only works with blockers that support the !#include tag, such as uBO and Nano.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/VeryThoroughWebsiteCleaner.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Very Thorough Website Cleaner", null, new DateTime(2018, 10, 12, 18, 49, 52, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2019, 1, 30, 4, 38, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/VeryThoroughWebsiteCleaner.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/VeryThoroughWebsiteCleaner.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/VeryThoroughWebsiteCleaner.txt" },
                    { (short)852, null, "This list combines \"YouTube: Even More Pure Video Experience\", \"Stop Autoplay For YouTube\", and \"Anti-Elsagate List\". It only works with blockers that support the !#include tag, such as uBO, Nano, and AdGuard.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/YouTubeYetEvenMorePureVideoExperience.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "YouTube: Yet Even More Pure Video Experience", null, new DateTime(2018, 10, 12, 18, 43, 20, 0, DateTimeKind.Unspecified), null, (short)21, new DateTime(2018, 10, 12, 18, 43, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/YouTubeYetEvenMorePureVideoExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/YouTubeYetEvenMorePureVideoExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/YouTubeYetEvenMorePureVideoExperience.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)2003, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Pro (dnsmasq)", null, null, (short)20, "https://raw.githubusercontent.com/badmojr/1Hosts/master/Pro/dnsmasq.conf", null, null },
                    { (short)2002, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Mini (dnsmasq)", null, null, (short)20, "https://raw.githubusercontent.com/badmojr/1Hosts/master/mini/dnsmasq.conf", null, null },
                    { (short)2001, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Complete (dnsmasq)", null, null, (short)20, "https://raw.githubusercontent.com/badmojr/1Hosts/master/complete/dnsmasq.conf", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1900, null, null, null, null, null, "https://github.com/javabean/dnsmasq-antispy", "https://github.com/javabean/dnsmasq-antispy/issues", (short)5, "ZZ Extra Servers Manual", null, null, (short)20, "https://raw.githubusercontent.com/javabean/dnsmasq-antispy/master/dnsmasq.zz-extra-servers-manual.conf", null, null },
                    { (short)1899, null, null, null, null, null, "https://github.com/javabean/dnsmasq-antispy", "https://github.com/javabean/dnsmasq-antispy/issues", (short)5, "Ghostery Bugs (dnsmasq)", null, null, (short)20, "https://raw.githubusercontent.com/javabean/dnsmasq-antispy/master/dnsmasq.ghostery_bugs.conf", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1775, "https://t.me/EnergizedProtection", "Regional annoyance blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Regional Extension (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/regional/formats/dnsmasq.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)842, null, null, null, "https://www.patreon.com/blocklist", null, " https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (dnsmasq)", "https://pgl.yoyo.org/as/policy.php", null, (short)20, new DateTime(2019, 4, 19, 0, 53, 10, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=dnsmasq&showintro=1&mimetype=plaintext", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1774, "https://t.me/EnergizedProtection", "Lite pornware blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Lite Extension (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/porn-lite/formats/dnsmasq.conf", null, null },
                    { (short)1772, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Xtreme Extension (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/xtreme/formats/dnsmasq.conf", null, null },
                    { (short)1771, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Unified Protection (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/unified/formats/dnsmasq.conf", null, null },
                    { (short)1770, "https://t.me/EnergizedProtection", "Energized Adware & Malware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Ultimate Protection (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/ultimate/formats/dnsmasq.conf", null, null },
                    { (short)1769, "https://t.me/EnergizedProtection", "Energized Pornware Blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Protection (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/porn/formats/dnsmasq.conf", null, null },
                    { (short)1768, "https://t.me/EnergizedProtection", "Energized Basic Protection. Basic Protection to keep you safe in a balanced way!", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Basic Protection (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/basic/formats/dnsmasq.conf", null, null },
                    { (short)1767, "https://t.me/EnergizedProtection", "Energized Liteweight Protection. Best for Android/iOS Users.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Protection (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/blu/formats/dnsmasq.conf", null, null },
                    { (short)1766, "https://t.me/EnergizedProtection", "Energized Blu Go. Another Lite Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Go Protection (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/bluGo/formats/dnsmasq.conf", null, null },
                    { (short)1765, "https://t.me/EnergizedProtection", "True Lite Hosts from Energized. Only 1MB in Size.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Spark Protection (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/spark/formats/dnsmasq.conf", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1668, null, null, null, null, null, "https://github.com/brasstax/RHEL-StreetPass-Relay", "https://github.com/brasstax/RHEL-StreetPass-Relay/issues", (short)5, "SPOOF-ATTWIFI - Pidora version (dnsmasq portion)", null, null, (short)20, new DateTime(2013, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/brasstax/RHEL-StreetPass-Relay/master/spoof-attwifi/dnsmasq.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1584, null, "This is a slimmer version of \"Dandelion Sprout's Nordic Filters\", intended for users of software tools that doesn't support adblocker syntaxes. It chiefly targets scams and malware on Norwegian or Danish sites, as well as some advert and tracking servers.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (dnsmasq)", null, new DateTime(2019, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2019, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersDnsmasq.conf", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersDnsmasq.conf", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersDnsmasq.conf" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1503, null, "This project generates dnsmasq, bind and unbound zone files to be used in DNS based AD Blockers.", null, null, null, "https://github.com/oznu/dns-zone-blacklist", "https://github.com/oznu/dns-zone-blacklist/issues", (short)5, "DNS Zone Blacklist Generator Dnsmasq", null, new DateTime(2016, 11, 9, 1, 40, 58, 0, DateTimeKind.Unspecified), null, (short)20, new DateTime(2019, 4, 12, 11, 59, 5, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/oznu/dns-zone-blacklist/master/dnsmasq/dnsmasq.blacklist", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1773, "https://t.me/EnergizedProtection", "Block social apps and sites", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Social Extension (dnsmasq)", null, "https://app.energized.pro", (short)20, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/social/formats/dnsmasq.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)67, null, "Filter any site/subsite who's only purpose is to log your IP.", "https://github.com/piperun/iploggerfilter", null, null, "https://github.com/piperun/iploggerfilter", "https://github.com/piperun/iploggerfilter/issues", (short)19, "Piperun's iplogger filter", null, new DateTime(2015, 10, 30, 17, 39, 31, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2018, 12, 4, 16, 3, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/piperun/iploggerfilter/master/filterlist", "https://gitcdn.xyz/repo/piperun/iploggerfilter/master/filterlist", "https://gitcdn.link/repo/piperun/iploggerfilter/master/filterlist" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)141, null, "Whitelists the trackers on the United Airlines shopping portal so that rewards can be credited.", null, null, null, null, null, (short)5, "Shopping Whitelist United Airlines", null, null, (short)28, "https://shopping.mileageplus.com/adBlockWhitelist.php", null, null },
                    { (short)143, null, "Whitelists the trackers on the Southwest Airlines shopping portal so that rewards can be credited.", null, null, null, null, null, (short)5, "Shopping Whitelist Southwest Airlines", null, null, (short)28, "https://rapidrewardsshopping.southwest.com/adBlockWhitelist.php", null, null },
                    { (short)1824, null, null, null, "bitcoin:1FzxJBxy3fJDv5PLGqbdN9TrQ79LE9UEtB", null, "https://myip.ms/", null, (short)5, "MyIP Blacklist", null, null, (short)33, "https://myip.ms/files/blacklist/general/latest_blacklist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1972, null, "This was made as a proof-of-concept to see if the IP-based entries of major adblock lists, could be used to create an IP adblocker list for IP blockers, despite how IP lists are normally only meant to block malware, E-mail spam, or port scanners.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "IP Entries from Adblock Lists", null, null, (short)32, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AdGuard%20Home%20Compilation%20List/AdGuardHomeCompilationListIPs.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AdGuard%20Home%20Compilation%20List/AdGuardHomeCompilationListIPs.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AdGuard%20Home%20Compilation%20List/AdGuardHomeCompilationListIPs.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1960, null, "Darklist.de is an IP blacklist that uses multiple sensors to identify network attacks (e.g. SSH brute force) and spam incidents. All reports are evaluated and in case of too many incidents the responsible IP holder is informed to solve the problem. After reporting an incident as solved the IP is removed from the blacklist.", null, null, null, "https://www.darklist.de/", null, (short)5, "DarklistDE IP Blacklist", null, null, (short)32, "https://www.darklist.de/raw.php", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1951, null, "This is a list of unusually strange and/or presumed hostile IP addresses that thought it'd be a good idea to port scan or otherwise mistreat my publicly accessible AdGuard Home server, without having anything even close to a good reason for doing so.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Disallowed Clients for AdGuard Home in Particular", null, null, (short)32, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AdGuardHomeDisallowedIPs.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AdGuardHomeDisallowedIPs.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AdGuardHomeDisallowedIPs.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1809, null, null, null, null, null, "https://rules.emergingthreats.net/", null, (short)5, "EmergingThreats Block IPs", null, null, (short)32, "https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1798, "https://t.me/EnergizedProtection", "Malicious IP protection.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized IP Extension", null, "https://app.energized.pro", (short)32, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/ips/formats/list.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)605, null, "An ipset made from blocklists that track attacks, spyware, viruses. It includes IPs than have been reported or detected in the last 30 days. (includes: bruteforceblocker ciarmy dshield_30d dshield_top_1000 malc0de maxmind_proxy_fraud myip shunlist snort_ipfilter sslbl_aggressive talosintel_ipfilter zeus vxvault)", null, null, null, "https://iplists.firehol.org/", null, (short)2, "Firehol Level 3", null, new DateTime(2018, 10, 7, 5, 30, 15, 0, DateTimeKind.Unspecified), null, (short)32, new DateTime(2019, 4, 7, 5, 30, 15, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/firehol/blocklist-ipsets/master/firehol_level3.netset", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)471, null, "An ipset made from blocklists that track attacks, during  about the last 48 hours. (includes: blocklist_de, dshield_1d, greensnow)", null, null, "costa@tsaousis.gr", null, "https://iplists.firehol.org/", null, (short)19, "Firehol Level 2", null, new DateTime(2018, 10, 7, 5, 30, 15, 0, DateTimeKind.Unspecified), null, (short)32, new DateTime(2019, 4, 14, 5, 30, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/firehol/blocklist-ipsets/master/firehol_level2.netset", null, null },
                    { (short)470, null, "A firewall blacklist composed from IP lists, providing maximum protection with minimum false positives. Suitable for basic protection on all internet facing servers, routers and firewalls. (includes: bambenek_c2, dshield, feodo, fullbogons, spamhaus_drop, spamhaus_edrop, sslbl, zeus_badips, ransomware_rw)", null, null, "costa@tsaousis.gr", null, "https://iplists.firehol.org/", null, (short)19, "Firehol Level 1", null, new DateTime(2018, 10, 7, 5, 30, 15, 0, DateTimeKind.Unspecified), null, (short)32, new DateTime(2019, 4, 14, 5, 30, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/firehol/blocklist-ipsets/master/firehol_level1.netset", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)412, null, null, null, null, null, "https://gist.github.com/BBcan177", null, (short)5, "pfBlockerNG - MS-3", null, null, (short)32, "https://gist.githubusercontent.com/BBcan177/d7105c242f17f4498f81/raw/201968fa11b1f409d408a129a0774ffedb1560e2/MS-3", null, null },
                    { (short)1949, null, null, null, null, null, null, null, (short)5, "Fengyc's URLRedirector Rules - Geekzu", null, null, (short)31, "https://raw.githubusercontent.com/fengyc/URLRedirector/master/tools/rules_geekzu.json", null, null },
                    { (short)2022, null, "The address block lists are aggregated by country. What this means is that if for instance IP address blocks 192.168.0.100/24 and 192.168.0.101/24 are allocated/assigned to the same country, we will merge them into a single 192.168.0.100/23. That's why our lists may appear smaller in size when compared to other IP address block lists when in fact they are just highly optimized to not waste memory in your router.", "http://ipverse.net/", null, null, "http://ipverse.net/", null, (short)5, "IPverse IP address block lists - PR-China IPv4", null, null, (short)34, "http://ipverse.net/ipblocks/data/countries/cn.zone", null, null },
                    { (short)1948, null, null, null, null, null, null, null, (short)5, "Fengyc's URLRedirector Rules", null, null, (short)31, "https://raw.githubusercontent.com/fengyc/URLRedirector/master/tools/rules.json", null, null },
                    { (short)1945, null, null, null, null, null, "https://github.com/Perflyst/PiHoleBlocklist/", null, (short)2, "PiHole Blocklist SmartTV (Regex extension)", null, null, (short)30, "https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/regex.list", null, null },
                    { (short)1917, null, "Custom block list annoying ads, trackers, scam sites etc. for Pi-hole (DNS Blocking)", null, null, null, "https://github.com/xlimit91/xlimit91-block-list", "https://github.com/xlimit91/xlimit91-block-list/issues", (short)5, "xlimit91 Block List for Pi-Hole (Regex)", null, null, (short)30, "https://raw.githubusercontent.com/xlimit91/xlimit91-block-list/master/regex.list", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1841, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters. uBO users should use the regular version instead.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (for Pi-hole)", null, new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)30, new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPiHole.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPiHole.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersPiHole.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1818, null, "Mmotti's regex list blocking ads and tracking sites for Pi-hole. To install it, you can manually add entries to regex.list file or use Regex Lists Installer for Pi-hole (more at https://github.com/PolishFiltersTeam/ScriptsPlayground/blob/master/Readme_RLI_for_Pi-hole.md).", null, null, null, "https://github.com/mmotti/pihole-regex", "https://github.com/mmotti/pihole-regex/issues", (short)5, "Mmoti's Regex Filters for Pi-hole", null, null, (short)30, "https://raw.githubusercontent.com/mmotti/pihole-regex/master/regex.list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1817, null, "Polish regex list blocking ads and tracking sites for Pi-hole. To install it, you can manually add entries to regex.list file or use Regex Lists Installer for Pi-hole (more at https://github.com/PolishFiltersTeam/ScriptsPlayground/blob/master/Readme_RLI_for_Pi-hole.md).", null, "https://patronite.pl/polskiefiltry", "errors@certyficate.it", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Polish Regex Filters for Pi-hole", null, "https://www.certyficate.it/kontakt/", (short)30, "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/polish-pihole-filters/hostfile_regex.txt", null, null },
                    { (short)1816, null, "Additional regex list blocking scam and phising Polish sites for Pi-hole. To install it, you can manually add entries to regex.list file or use Regex Lists Installer for Pi-hole (more at https://github.com/PolishFiltersTeam/ScriptsPlayground/blob/master/Readme_RLI_for_Pi-hole.md).", null, null, "polishjarvis@gmail.com", null, "https://kadantiscam.netlify.com/", "https://github.com/PolishFiltersTeam/KADhosts/issues", (short)8, "KADhole", null, "https://kadantiscam.netlify.com/#contact", (short)30, "https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhole.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1941, null, null, null, null, null, null, null, (short)5, "NoOnMe's List for Surge", null, null, (short)29, "https://surge.noonme.com/surge.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1842, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters. uBO users should use the regular version instead.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (for Shadowsocks)", null, new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)29, new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersSocks5.list", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersSocks5.list", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersSocks5.list" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1805, null, null, null, null, null, "https://github.com/ConnersHua/Profiles/tree/master", "https://github.com/ConnersHua/Profiles/tree/master/issues", (short)5, "ConnersHua Pro Ruleset", null, null, (short)29, "https://raw.githubusercontent.com/ConnersHua/Profiles/master/Shadow/Pro.conf", null, null },
                    { (short)1804, null, null, null, null, null, "https://github.com/ConnersHua/Profiles/tree/master", "https://github.com/ConnersHua/Profiles/tree/master/issues", (short)5, "ConnersHua Advertising Ruleset", null, null, (short)29, "https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Advertising.list", null, null },
                    { (short)1803, null, null, null, null, null, "https://github.com/scomper/surge-list/", "https://github.com/scomper/surge-list/issues", (short)5, "Scomper Surge List Reject", null, null, (short)29, "https://raw.githubusercontent.com/scomper/surge-list/master/reject.list", null, null },
                    { (short)1947, null, "Personal rules for URLRedirector.", null, null, null, "https://github.com/ivysrono/URLRedirectorRules/", null, (short)5, "Ivysrono's URLRedirector Rules", null, null, (short)31, "https://raw.githubusercontent.com/ivysrono/URLRedirectorRules/master/Directly.json", null, null },
                    { (short)1802, null, null, null, null, null, "https://github.com/HParis/SSEncrypt/", "https://github.com/HParis/SSEncrypt/issues", (short)5, "SSEncrypt Adblock", null, null, (short)29, "https://raw.githubusercontent.com/HParis/SSEncrypt/master/adblock-reject.list", null, null },
                    { (short)2023, null, "The address block lists are aggregated by country. What this means is that if for instance IP address blocks 192.168.0.100/24 and 192.168.0.101/24 are allocated/assigned to the same country, we will merge them into a single 192.168.0.100/23. That's why our lists may appear smaller in size when compared to other IP address block lists when in fact they are just highly optimized to not waste memory in your router.", "http://ipverse.net/", null, null, "http://ipverse.net/", null, (short)5, "IPverse IP address block lists - Russia IPv4", null, null, (short)34, "http://ipverse.net/ipblocks/data/countries/ru.zone", null, null },
                    { (short)2025, null, "The address block lists are aggregated by country. What this means is that if for instance IP address blocks 192.168.0.100/24 and 192.168.0.101/24 are allocated/assigned to the same country, we will merge them into a single 192.168.0.100/23. That's why our lists may appear smaller in size when compared to other IP address block lists when in fact they are just highly optimized to not waste memory in your router.", "http://ipverse.net/", null, null, "http://ipverse.net/", null, (short)5, "IPverse IP address block lists - Romania IPv4", null, null, (short)34, "http://ipverse.net/ipblocks/data/countries/ro.zone", null, null },
                    { (short)2032, null, "The address block lists are aggregated by country. What this means is that if for instance IP address blocks 192.168.0.100/24 and 192.168.0.101/24 are allocated/assigned to the same country, we will merge them into a single 192.168.0.100/23. That's why our lists may appear smaller in size when compared to other IP address block lists when in fact they are just highly optimized to not waste memory in your router.", "http://ipverse.net/", null, null, "http://ipverse.net/", null, (short)5, "IPverse IP address block lists - Romania IPv6", null, null, (short)41, "http://ipverse.net/ipblocks/data/countries/ro-ipv6.zone", null, null },
                    { (short)2031, null, "The address block lists are aggregated by country. What this means is that if for instance IP address blocks 192.168.0.100/24 and 192.168.0.101/24 are allocated/assigned to the same country, we will merge them into a single 192.168.0.100/23. That's why our lists may appear smaller in size when compared to other IP address block lists when in fact they are just highly optimized to not waste memory in your router.", "http://ipverse.net/", null, null, "http://ipverse.net/", null, (short)5, "IPverse IP address block lists - Ukraine IPv6", null, null, (short)41, "http://ipverse.net/ipblocks/data/countries/ua-ipv6.zone", null, null },
                    { (short)2030, null, "The address block lists are aggregated by country. What this means is that if for instance IP address blocks 192.168.0.100/24 and 192.168.0.101/24 are allocated/assigned to the same country, we will merge them into a single 192.168.0.100/23. That's why our lists may appear smaller in size when compared to other IP address block lists when in fact they are just highly optimized to not waste memory in your router.", "http://ipverse.net/", null, null, "http://ipverse.net/", null, (short)5, "IPverse IP address block lists - Russia IPv6", null, null, (short)41, "http://ipverse.net/ipblocks/data/countries/ru-ipv6.zone", null, null },
                    { (short)2029, null, "The address block lists are aggregated by country. What this means is that if for instance IP address blocks 192.168.0.100/24 and 192.168.0.101/24 are allocated/assigned to the same country, we will merge them into a single 192.168.0.100/23. That's why our lists may appear smaller in size when compared to other IP address block lists when in fact they are just highly optimized to not waste memory in your router.", "http://ipverse.net/", null, null, "http://ipverse.net/", null, (short)5, "IPverse IP address block lists - PR-China IPv6", null, null, (short)41, "http://ipverse.net/ipblocks/data/countries/cn-ipv6.zone", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1799, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - Arabic Only", null, new DateTime(2018, 5, 15, 9, 50, 43, 0, DateTimeKind.Unspecified), null, (short)38, "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/arabic.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1582, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters. uBO and AdGuard users should use the other versions instead.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (for AdBlock and Adblock Plus)", null, new DateTime(2019, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersABP.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersABP.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersABP.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)586, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - Spanish Only", null, new DateTime(2018, 5, 15, 9, 50, 43, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 3, 27, 10, 11, 17, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/spanish.txt", null, null },
                    { (short)585, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - Russian Only", null, new DateTime(2018, 5, 15, 9, 50, 43, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 4, 12, 13, 42, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/russian.txt", null, null },
                    { (short)583, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - Portuguese Only", null, new DateTime(2018, 8, 2, 13, 7, 41, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 3, 25, 11, 53, 1, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/portuguese.txt", null, null },
                    { (short)575, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - German Only", null, new DateTime(2018, 5, 15, 9, 50, 43, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 4, 12, 17, 24, 27, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/german.txt", null, null },
                    { (short)574, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - French Only", null, new DateTime(2018, 5, 15, 9, 50, 43, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 3, 19, 7, 42, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/french.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)2024, null, "The address block lists are aggregated by country. What this means is that if for instance IP address blocks 192.168.0.100/24 and 192.168.0.101/24 are allocated/assigned to the same country, we will merge them into a single 192.168.0.100/23. That's why our lists may appear smaller in size when compared to other IP address block lists when in fact they are just highly optimized to not waste memory in your router.", "http://ipverse.net/", null, null, "http://ipverse.net/", null, (short)5, "IPverse IP address block lists - Ukraine IPv4", null, null, (short)34, "http://ipverse.net/ipblocks/data/countries/ua.zone", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)573, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - English Only", null, new DateTime(2018, 5, 15, 9, 50, 43, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 4, 12, 17, 30, 59, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/english.txt", null, null },
                    { (short)569, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - Chinese Only", null, new DateTime(2018, 5, 15, 9, 50, 43, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 2, 21, 9, 32, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/chinese.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)566, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List", null, null, (short)38, new DateTime(2019, 4, 13, 3, 12, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)718, null, "CERNET -- China Education and Research Network. You can ignore this repository if you don't know that.", "https://github.com/popcorner/cernet-ipv6-hosts#welcome-to-cernet-ipv6-hosts", null, null, "https://github.com/popcorner/cernet-ipv6-hosts", "https://github.com/popcorner/cernet-ipv6-hosts/issues", (short)5, "CERNET IPv6 Hosts", null, new DateTime(2014, 11, 18, 12, 42, 33, 0, DateTimeKind.Unspecified), null, (short)37, new DateTime(2019, 3, 10, 21, 11, 5, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/popcorner/cernet-ipv6-hosts/hosts/hosts", null, null },
                    { (short)716, null, null, null, null, null, "https://github.com/lennylxx/ipv6-hosts", "https://github.com/lennylxx/ipv6-hosts/issues", (short)2, "lennylxx IPv6 Hosts", null, new DateTime(2014, 7, 15, 12, 43, 47, 0, DateTimeKind.Unspecified), null, (short)37, new DateTime(2019, 1, 28, 22, 55, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/lennylxx/ipv6-hosts/master/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1712, null, null, null, null, null, "https://github.com/abc45628/hosts/", "https://github.com/abc45628/hosts//issues", (short)5, "abc45628 Hosts", null, null, (short)36, "https://raw.githubusercontent.com/abc45628/hosts/master/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1506, null, null, null, null, null, "https://github.com/ReddestDream/reddestdream.github.io", "https://github.com/ReddestDream/reddestdream.github.io/issues", (short)5, "ReddestDream MinimalHosts", null, new DateTime(2016, 1, 22, 5, 31, 27, 0, DateTimeKind.Unspecified), null, (short)36, new DateTime(2016, 8, 4, 15, 12, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ReddestDream/reddestdream.github.io/master/Projects/MinimalHosts/etc/MinimalHostsBlocker/minimalhosts", null, null },
                    { (short)1505, null, null, null, null, null, "https://github.com/ReddestDream/reddestdream.github.io", "https://github.com/ReddestDream/reddestdream.github.io/issues", (short)5, "ReddestDream MinimalHostsBlockerCB", null, new DateTime(2016, 8, 4, 20, 17, 23, 0, DateTimeKind.Unspecified), null, (short)36, new DateTime(2016, 8, 4, 20, 17, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ReddestDream/reddestdream.github.io/master/Projects/MinimalHostsCB/etc/MinimalHostsBlocker/minimalhosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)628, null, "Say goodbye to ads, spies, tracking and untrusted hosts.", "https://raw.githubusercontent.com/TakoYachty/Gift-Card-Killer/master/Untrusted%20Hosts%20Blocker.txt", null, null, "https://github.com/TakoYachty/Gift-Card-Killer", "https://github.com/TakoYachty/Gift-Card-Killer/issues", (short)5, "Untrusted Hosts Blocker", null, null, (short)36, "https://raw.githubusercontent.com/TakoYachty/Gift-Card-Killer/master/Untrusted%20Hosts%20Blocker.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)324, null, "A minimal adblocker for iOS.", "https://github.com/arcetera/Minimal-Hosts-Blocker", null, null, "https://github.com/arcetera/Minimal-Hosts-Blocker", "https://github.com/arcetera/Minimal-Hosts-Blocker/issues", (short)5, "Minimal Hosts Blocker", null, new DateTime(2015, 1, 25, 20, 21, 51, 0, DateTimeKind.Unspecified), null, (short)36, new DateTime(2015, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/arcetera/Minimal-Hosts-Blocker/master/etc/MinimalHostsBlocker/minimalhosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)2000, null, "Use this file to prevent your computer from connecting to selected internet hosts. This is an easy and effective way to protect you from many types of spyware, reduces bandwidth use, blocks certain pop-up traps, prevents user tracking by way of \"web bugs\" embedded in spam, provides partial protection to IE from certain web-based exploits and blocks most advertising you would otherwise be subjected to on the internet.", "https://someonewhocares.org/hosts/", null, "hosts@someonewhocares.org", null, "https://someonewhocares.org/hosts/", null, (short)32, "Dan Pollock's Hosts (IPv4 + IPv6)", null, null, (short)35, "https://someonewhocares.org/hosts/ipv6/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1557, null, "Android AdBlock Hosts file for /etc/hosts", null, null, null, "https://github.com/DataMaster-2501/DataMaster-Android-AdBlock-Hosts", "https://github.com/DataMaster-2501/DataMaster-Android-AdBlock-Hosts/issues", (short)4, "DataMaster Android AdBlock Hosts", null, new DateTime(2017, 9, 10, 3, 35, 12, 0, DateTimeKind.Unspecified), null, (short)35, new DateTime(2019, 4, 14, 7, 58, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DataMaster-2501/DataMaster-Android-AdBlock-Hosts/master/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)570, null, "Filter list designed to fight circumvention ads in Adblock Plus", "https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt", null, "filters+cv@adblockplus.org", null, "https://github.com/abp-filters/abp-filters-anti-cv", "https://github.com/abp-filters/abp-filters-anti-cv/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)4, "ABP Anti-Circumvention Filter List - Czech Only", null, new DateTime(2018, 5, 15, 9, 50, 43, 0, DateTimeKind.Unspecified), null, (short)38, new DateTime(2019, 3, 25, 21, 10, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abp-filters/abp-filters-anti-cv/master/czech.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1801, null, null, null, null, null, "https://github.com/lhie1/Rules/", "https://github.com/lhie1/Rules/issues", (short)19, "Lhie1's Auto Rules", null, null, (short)29, "https://raw.githubusercontent.com/lhie1/Rules/master/Auto/REJECT.conf", null, null },
                    { (short)1800, null, null, null, null, null, null, null, (short)5, "Rixcloud Rules", null, null, (short)29, "https://cdn.rixcloud.io/Quantumult/Rules/Default.conf", null, null },
                    { (short)2027, null, null, null, null, null, "https://hblock.molinero.dev/", null, (short)2, "hBlock Hosts Adblockers", null, null, (short)28, "https://hblock.molinero.dev/hosts_adblock.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1661, null, "Blocks trackers and analytics on web pages", null, null, null, "https://github.com/Strappazzon/filterlists", "https://github.com/Strappazzon/filterlists/issues", (short)2, "Strappazzon's Tracking list", null, null, (short)28, new DateTime(2019, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Strappazzon/filterlists/master/Filterlists/Tracking.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1650, null, null, null, null, null, "https://github.com/migueldemoura/ublock-umatrix-rulesets", "https://github.com/migueldemoura/ublock-umatrix-rulesets/issues", (short)8, "migueldemoura's uBlock List - Facebook Messenger", null, null, (short)28, "https://raw.githubusercontent.com/migueldemoura/ublock-umatrix-rulesets/master/uBlock/facebook/messenger", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1586, null, "Most anti-malware lists are pretty big and can cover a 5- or 6-digit amount of specific domains. But my list hereby claims to remove more than 25% of all known malware sites with just a 2-digit amount of entries. This is mostly done by blocking top-level domains that have become devastatingly abused by spammers, usually because they allowed for free and uncontrolled domain registrations. There's also additional categories that cover unusual malware and phishing domains that very few other lists seem to cover.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Anti-Malware%20List.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Anti-Malware List (for Adblock Plus and AdBlock)", null, new DateTime(2018, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 4, 19, 0, 21, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareABP.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Alternate%20versions%20Anti-Malware%20List/AntiMalwareABP.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareABP.txt" },
                    { (short)1530, null, "Blocks every chat or helpdesk pop up in your browser.", null, null, "hello@hellogoodbye.app", null, "https://hellogoodbye.app/", "https://github.com/bcye/Hello-Goodbye/issues", (short)4, "Hello, Goodbye!", null, new DateTime(2019, 3, 17, 4, 29, 7, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 4, 7, 20, 7, 39, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bcye/Hello-Goodbye/master/filterlist.txt", null, null },
                    { (short)1296, null, "DomainVoider is dedicated to providing AdGuard Pro for iOS users with custom built, privacy and security focused filters using a simplified adblocking format. Also for use with uBlock Origin for Firefox.", null, null, "intr0@intr0.com", null, "https://intr0.com/", "https://gitlab.com/intr0/DomainVoider/issues", (short)19, "DomainVoider", null, new DateTime(2017, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 4, 10, 23, 58, 11, 0, DateTimeKind.Unspecified), "https://gitlab.com/intr0/DomainVoider/raw/master/DomainVoider.txt", "https://notabug.org/-intr0/DomainVoider/raw/master/DomainVoider.txt", "http://w2caclgy62idhzyut23ucimqw5tsmfbl4b2iyjzpvngatast2fiqxbyd.onion/domainvoider/DomainVoider.txt" },
                    { (short)877, null, "Coin mining block.", "https://github.com/eEIi0A5L/adblock_filter/blob/master/README.md", null, "mochifilter@yahoo.co.jp", null, "https://pokapoka.shoooter.net/", "https://github.com/eEIi0A5L/adblock_filter/issues", (short)5, "Whale Filter", null, new DateTime(2017, 12, 27, 22, 53, 18, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 3, 2, 21, 1, 24, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eEIi0A5L/adblock_filter/master/kujira_filter.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)836, null, "This AdBlock list contains strange media sites created after the disinformation campaign that took place following the fire at the Colectiv nightclub in 2015.", "https://github.com/Recon/romanian-media-propaganda-adblock-list#romanian-media-propaganda-adblock-list", null, null, "https://github.com/Recon/romanian-media-propaganda-adblock-list", "https://github.com/Recon/romanian-media-propaganda-adblock-list/issues", (short)9, "Romanian Media Propaganda AdBlock List", null, new DateTime(2015, 11, 12, 19, 0, 24, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2015, 11, 13, 10, 10, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Recon/romanian-media-propaganda-adblock-list/master/ro-media-blocklist.txt", null, null },
                    { (short)823, null, "uBlock/Adblock filters to block known NSA malware servers from Shadow Brokers dump.", "https://github.com/gasull/adblock-nsa#adblock-the-nsa", null, null, "https://github.com/gasull/adblock-nsa", "https://github.com/gasull/adblock-nsa/issues", (short)5, "Adblock the NSA", null, new DateTime(2016, 11, 1, 10, 14, 53, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2016, 11, 1, 10, 14, 53, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/gasull/adblock-nsa/master/filters.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)821, null, null, null, null, "support@brave.com", null, "https://github.com/brave/adblock-lists", "https://github.com/brave/adblock-lists/issues", (short)33, "Brave Unbreak", null, new DateTime(2016, 11, 10, 13, 11, 50, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 4, 16, 2, 38, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/brave/adblock-lists/master/brave-unbreak.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)733, null, "Collect the annoyance ad hosts for mobile webs using AdBlockPlus filter format. Mainly focus on Chinese web sites.", "https://github.com/yowu/AnnoyanceMobileAdHosts#annoyancemobileadhosts", null, null, "https://github.com/yowu/AnnoyanceMobileAdHosts", "https://github.com/yowu/AnnoyanceMobileAdHosts/issues", (short)2, "Annoyance Mobile Ad hosts filter", null, new DateTime(2016, 9, 9, 5, 32, 12, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2018, 1, 16, 3, 26, 53, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/yowu/AnnoyanceMobileAdHosts/master/AnnoyanceMobileAdHosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)600, null, "The ABP advertising filter is built with the mission of improving the browsing experience for the Vietnamese users. ABPVN may not help block all ads, but ABPVN will minimize the appearance of ads on most websites in Vietnam.", "https://raw.githubusercontent.com/abpvn/abpvn/master/filter/abpvn_noelemhide.txt", null, "support@abpvn.com", "http://www.vn-zoom.com/f77/abp-bo-loc-quang-cao-cho-nguoi-viet-2856275.html", "https://abpvn.com/", null, (short)5, "ABPVN List - No Element Hide", null, new DateTime(2016, 10, 26, 10, 6, 22, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 4, 13, 9, 9, 49, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/abpvn/abpvn/master/filter/abpvn_noelemhide.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1703, null, "Domain name filters.", null, null, null, "https://in0de.synology.me", null, (short)5, "Synology's pwn", null, null, (short)28, "https://in0de.synology.me/pwn.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)377, null, "A block list of malicious domains.", "https://github.com/cb-software/CB-Malicious-Domains/blob/master/README.md", null, null, "https://github.com/cb-software/CB-Malicious-Domains", "https://github.com/cb-software/CB-Malicious-Domains/issues", (short)2, "CB Malicious Domains", null, new DateTime(2018, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2018, 11, 12, 22, 16, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cb-software/CB-Malicious-Domains/master/block_lists/adblock_plus.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)271, null, "This is a list of malware domains generated from malwaredomains.com data.", "https://easylist-downloads.adblockplus.org/malwaredomains_full.txt", "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Adblock Plus Malware Domains Full", null, null, (short)28, new DateTime(2019, 4, 8, 17, 42, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/malwaredomains_full.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)265, null, "Blocks common tracking scripts such as Omniture, Webtrends, Foresee, Coremetrics, Google-Analytics, Touchclarity, ChannelIntelligence.", "https://fanboy.co.nz/filters.html", "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WMGE9MAGGGMHW", null, "https://fanboy.co.nz/", "https://github.com/easylist/easylist/issues", (short)16, "Fanboy's Enhanced Tracking List", null, null, (short)28, new DateTime(2019, 4, 8, 15, 19, 10, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/enhancedstats.txt", null, null },
                    { (short)249, null, "Blocks fonts loaded from third parties.", null, null, null, "https://fanboy.co.nz/", null, (short)16, "Fanboy's Anti-thirdparty Fonts", null, null, (short)28, new DateTime(2018, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://fanboy.co.nz/fanboy-antifonts.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)244, null, "This EasyList variant only contains blocking filters to remove adverts, with no element rules whatsoever; it, therefore, has more limited coverage than the full version of the list, although still commands a niche market.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "easylist.subscription@gmail.com", "https://forums.lanik.us/viewforum.php?f=23", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyList Without Element Hiding Rules", null, null, (short)28, new DateTime(2019, 4, 8, 11, 36, 15, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylist_noelemhide.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)238, null, "Members with ad blocking software may experience issues receiving Cash Back. If you have AdBlock, Adblock Plus or uBlock, you can add or subscribe to the Ebates Cash Back Shopping filter list.", "https://www.ebates.com/help/troubleshooting.htm#abp", null, null, "https://www.ebates.com/", null, (short)5, "Ebates Cash Back Shopping", null, null, (short)28, new DateTime(2018, 12, 9, 21, 22, 11, 0, DateTimeKind.Unspecified), "https://www.ebates.com/whitelist/ebates-cash-back-shopping.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)234, null, "Block Facebook objects on non-Facebook websites", "http://www.squirrelconspiracy.net/abp/facebook-privacy-list.txt", null, "fbprivacylist@squirrelconspiracy.net", null, "http://www.squirrelconspiracy.net/abp/facebook-privacy-list.html", null, (short)12, "Facebook Privacy List", null, null, (short)28, new DateTime(2010, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), "http://www.squirrelconspiracy.net/abp/facebook-privacy-list.txt", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/Facebook%20Privacy%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/Facebook%20Privacy%20List.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)183, null, "Blocks shady, annoying pop-under ads from the infamous PopAds ad network.", null, null, null, "https://github.com/Yhonay/antipopads", "https://github.com/Yhonay/antipopads/issues", (short)14, "Anti-PopAds", null, new DateTime(2016, 10, 29, 15, 8, 58, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 4, 15, 5, 38, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Yhonay/antipopads/master/popads.txt", "https://gitcdn.xyz/repo/Yhonay/antipopads/master/popads.txt", "https://rawcdn.githack.com/Yhonay/antipopads/master/popads.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)168, null, "A filter composed from several other filters (English filter, Social media filter, Spyware filter, Mobile ads filter, EasyList and EasyPrivacy) and simplified specifically to be better compatible with DNS-level ad blocking. This filter is used by AdGuard DNS servers to block ads.", "https://kb.adguard.com/en/general/adguard-ad-filters#simplified-domain-names-filter", null, null, "https://github.com/AdguardTeam/AdguardDNS", "https://github.com/AdguardTeam/AdguardDNS/issues", (short)12, "AdGuard Simplified Domain Names Filter", "https://kb.adguard.com/en/general/adguard-filter-policy", null, (short)28, new DateTime(2019, 4, 15, 6, 34, 10, 0, DateTimeKind.Unspecified), "https://filters.adtidy.org/windows/filters/15.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)151, null, "Whitelists the trackers on the BarclayCard shopping portal so that rewards can be credited.", null, null, null, null, null, (short)5, "Shopping Whitelist BarclayCard", null, null, (short)28, "https://www.barclaycardrewardsboost.com/adBlockWhitelist.php", null, null },
                    { (short)145, null, "Whitelists the trackers on the Alaska Airlines shopping portal so that rewards can be credited.", null, null, null, null, null, (short)5, "Shopping Whitelist Alaska Airlines", null, null, (short)28, "https://www.mileageplanshopping.com/adBlockWhitelist.php", null, null },
                    { (short)144, null, "Whitelists the trackers on the American Airlines shopping portal so that rewards can be credited.", null, null, null, null, null, (short)5, "Shopping Whitelist American Airlines", null, null, (short)28, "https://www.aadvantageeshopping.com/adBlockWhitelist.php", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)279, null, "EFF maintains a Privacy Badger \"yellowlist\" of domains for which requests are allowed but Privacy Badger restricts access or availability of objectionable cookies and potentially other objectionable identifiers.", "https://github.com/EFForg/privacybadger/blob/master/doc/yellowlist-criteria.md", "https://supporters.eff.org/donate/support-privacy-badger", null, "https://www.eff.org/privacybadger", "https://github.com/EFForg/privacybadger/issues", (short)4, "EFF Cookie Blocklist", null, null, (short)28, new DateTime(2019, 3, 3, 11, 11, 11, 0, DateTimeKind.Unspecified), "https://www.eff.org/files/cookieblocklist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1736, null, "AdGuard Home is one of the tools for the future, or at least it is for those who know how to set up and use a Raspberry Pi. However, its current internal structure discards virtually every $-using block rule (e.g. EasyList), which makes EasyList and similar lists virtually useless in AdGuard Home, despite how many of the entries would be ≥90% as functional without them. So until the AdGuard Home team implements a better way to deal with $ values, here's my intermissional list to work around it.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's AdGuard Home Compilation List", null, null, (short)28, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AdGuard%20Home%20Compilation%20List/AdGuardHomeCompilationList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AdGuard%20Home%20Compilation%20List/AdGuardHomeCompilationList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AdGuard%20Home%20Compilation%20List/AdGuardHomeCompilationList.txt" },
                    { (short)1738, null, "Most anti-malware lists are pretty big and can cover a 5- or 6-digit amount of specific domains. But my list hereby claims to remove more than 25% of all known malware sites with just a 2-digit amount of entries. This is mostly done by blocking top-level domains that have become devastatingly abused by spammers, usually because they allowed for free and uncontrolled domain registrations. There's also additional categories that cover unusual malware and phishing domains that very few other lists seem to cover.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Anti-Malware%20List.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Anti-Malware List (for AdGuard Home)", null, null, (short)28, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareAdGuardHome.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Alternate%20versions%20Anti-Malware%20List/AntiMalwareAdGuardHome.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareAdGuardHome.txt" },
                    { (short)1754, "https://t.me/EnergizedProtection", "True Lite Hosts from Energized. Only 1MB in Size.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Spark Protection (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/spark/formats/filter", null, null },
                    { (short)1989, null, "Are you desperate to get some quality time with your brother or dad, who is so much into Pokémon GO that they play it to this day while hacking around from the couch? Here's how to get that quality time back… unless they just switch to 4G instead, in which case you're screwed. May also work against 'Harry Potter: Wizards Unite' and 'Ingress Prime'", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Pokémon No-GO Zone", null, null, (short)28, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Pok%C3%A9monNoGOZone.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Pok%C3%A9monNoGOZone.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/Pok%C3%A9monNoGOZone.txt" },
                    { (short)1979, null, "Are you tired of being nagged on by websites, that say \"Log in to read more\"? With this list, you'll be much less nagged on from now own.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Browse websites without logging in (for AdGuard Home)", null, null, (short)28, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/BrowseWebsitesWithoutLoggingInAGH.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/BrowseWebsitesWithoutLoggingInAGH.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/BrowseWebsitesWithoutLoggingInAGH.txt" },
                    { (short)1955, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Pro (Adblock Plus)", null, null, (short)28, "https://raw.githubusercontent.com/badmojr/1Hosts/master/Pro/adblock.txt", null, null },
                    { (short)1954, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Mini (Adblock Plus)", null, null, (short)28, "https://raw.githubusercontent.com/badmojr/1Hosts/master/mini/adblock.txt", null, null },
                    { (short)1953, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Complete (Adblock Plus)", null, null, (short)28, "https://raw.githubusercontent.com/badmojr/1Hosts/master/complete/adblock.txt", null, null },
                    { (short)1952, null, "Twitter is a place full of distractions, strange things, and people you'd want to stay 200km away from at all times. If you wish to focus strictly on the 2% of Twitter that is actually any good nowadays, here's a list for you.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Twitter: Pure Reading Experience", null, null, (short)28, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/TwitterPureReadingExperience.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/TwitterPureReadingExperience.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/TwitterPureReadingExperience.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1943, null, null, null, null, null, null, null, (short)19, "Ben Tasker's List (Adblock Plus)", null, null, (short)28, "https://www.bentasker.co.uk/adblock/adblock_compiled.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1930, null, "Much like there's now lists for AdGuard Home and Pi-hole to block ads on smart-TVs, here's an attempt from me at doing the same for videogame consoles with AdGuard Home. Enjoy.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Game Console Adblock List", null, null, (short)28, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/GameConsoleAdblockList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/GameConsoleAdblockList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/GameConsoleAdblockList.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1893, null, null, null, null, null, "https://github.com/deletescape/noads", "https://github.com/deletescape/noads/issues", (short)35, "noads.online whitelist", null, null, (short)28, "https://raw.githubusercontent.com/deletescape/noads/master/lists/unbreak.txt", null, null },
                    { (short)1892, null, null, null, null, null, "https://github.com/deletescape/noads", "https://github.com/deletescape/noads/issues", (short)35, "noads.online AdGuard Home Megalist", null, null, (short)28, "https://lists.noads.online/lists/compilation.txt", null, null },
                    { (short)1889, null, null, null, null, null, "https://github.com/DavidTai780/AdGuard-Home-Private-Rules", "https://github.com/DavidTai780/AdGuard-Home-Private-Rules/issues", (short)5, "Private Ads Block List", null, null, (short)28, "https://raw.githubusercontent.com/DavidTai780/AdGuard-Home-Private-Rules/master/ads-block.txt", null, null },
                    { (short)1888, null, null, null, null, null, "https://github.com/DavidTai780/AdGuard-Home-Private-Rules", "https://github.com/DavidTai780/AdGuard-Home-Private-Rules/issues", (short)5, "Custom Hosts Domain Filter for AdGuard", null, null, (short)28, "https://raw.githubusercontent.com/DavidTai780/AdGuard-Home-Private-Rules/master/hosts.txt", null, null },
                    { (short)1866, null, "A combined list of all the Ad Domains.", null, null, null, "https://github.com/LanikSJ/ubo-filters", null, (short)4, "Ad Domains Filter List", null, null, (short)28, "https://raw.githubusercontent.com/LanikSJ/ubo-filters/master/filters/combined-filters.txt", null, null },
                    { (short)1858, null, "DNS rule filters to strengthen ad blocking.", null, null, null, "https://github.com/nanj-adguard2/nanj-kakuchou-filter", null, (short)20, "Nanj Kakuchou Filter - DNS Rules", null, null, (short)28, "https://raw.githubusercontent.com/nanj-adguard2/nanj-kakuchou-filter/master/DNS-rules.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1840, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters. uBO users should use the regular version instead.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (for AdGuard Home)", null, new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)28, new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersAdGuardHome.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersAdGuardHome.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersAdGuardHome.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1764, "https://t.me/EnergizedProtection", "Regional annoyance blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Regional Extension (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/regional/formats/filter", null, null },
                    { (short)1763, "https://t.me/EnergizedProtection", "Lite pornware blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Lite Extension (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/porn-lite/formats/filter", null, null },
                    { (short)1762, "https://t.me/EnergizedProtection", "Block social apps and sites", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Social Extension (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/social/formats/filter", null, null },
                    { (short)1761, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Xtreme Extension (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/xtreme/formats/filter", null, null },
                    { (short)1760, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Unified Protection (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/unified/formats/filter", null, null },
                    { (short)1759, "https://t.me/EnergizedProtection", "Energized Adware & Malware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Ultimate Protection (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/ultimate/formats/filter", null, null },
                    { (short)1758, "https://t.me/EnergizedProtection", "Energized Pornware Blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Protection (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/porn/formats/filter", null, null },
                    { (short)1757, "https://t.me/EnergizedProtection", "Energized Basic Protection. Basic Protection to keep you safe in a balanced way!", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Basic Protection (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/basic/formats/filter", null, null },
                    { (short)1756, "https://t.me/EnergizedProtection", "Energized Liteweight Protection. Best for Android/iOS Users.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Protection (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/blu/formats/filter", null, null },
                    { (short)1755, "https://t.me/EnergizedProtection", "Energized Blu Go. Another Lite Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Go Protection (Adblock Plus)", null, "https://app.energized.pro", (short)28, "https://raw.githubusercontent.com/EnergizedProtection/block/master/bluGo/formats/filter", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1621, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Porn + Social (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_porn-social/sb_unified_hosts_porn-social.lsrules", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)28, null, "The Quiet list blocks all other notices regardless of their size or obnoxiousness. Simple two- or three-word links to privacy pages aren't blocked (such as links in a page footer), but a lengthy paragraph mid-page will be.", "https://github.com/liamja/Prebake", null, "cookies@prebake.eu", null, "http://prebake.eu/", "https://github.com/liamja/Prebake/issues", (short)2, "Prebake Quiet", null, new DateTime(2012, 11, 18, 20, 23, 53, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/liamja/Prebake/master/quiet.txt", "https://gitcdn.xyz/repo/liamja/Prebake/master/quiet.txt", "https://rawcdn.githack.com/liamja/Prebake/master/quiet.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1620, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Gambling (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_gambling/sb_unified_hosts_gambling.lsrules", null, null },
                    { (short)1618, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Gambling + Porn (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_gambling-porn/sb_unified_hosts_gambling-porn.lsrules", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1486, null, "An updated list of public BitTorrent trackers", null, null, null, "https://github.com/ngosang/trackerslist", null, (short)19, "List of torrent trackers: Blacklist", null, new DateTime(2016, 4, 25, 23, 22, 37, 0, DateTimeKind.Unspecified), null, (short)8, new DateTime(2019, 2, 24, 23, 10, 59, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ngosang/trackerslist/master/blacklist.txt", null, null },
                    { (short)1485, null, "An updated list of public BitTorrent trackers", null, null, null, "https://github.com/ngosang/trackerslist", null, (short)19, "List of torrent trackers", null, new DateTime(2016, 4, 24, 19, 30, 50, 0, DateTimeKind.Unspecified), null, (short)8, new DateTime(2019, 4, 20, 22, 6, 39, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt", null, null },
                    { (short)1452, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Webtv Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/webtv", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/webtv/urls", null, null },
                    { (short)1450, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Webradio Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/webradio", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/webradio/urls", null, null },
                    { (short)1448, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Webphone Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/webphone", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/webphone/urls", null, null },
                    { (short)1446, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Webmail Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/webmail", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/webmail/urls", null, null },
                    { (short)1444, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Weapons Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/weapons", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/weapons/urls", null, null },
                    { (short)1442, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Warez Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/warez", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/warez/urls", null, null },
                    { (short)1440, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Violence Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/violence", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/violence/urls", null, null },
                    { (short)1438, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Urlshortener Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/urlshortener", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/urlshortener/urls", null, null },
                    { (short)1436, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Program Updates Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/updatesites", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/updatesites/urls", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1500, null, null, null, null, null, "https://cybercrime-tracker.net", null, (short)5, "Cybercrime List", null, null, (short)8, new DateTime(2019, 4, 21, 4, 48, 12, 0, DateTimeKind.Unspecified), "https://cybercrime-tracker.net/all.php", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1434, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Tracker Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/tracker", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/tracker/urls", null, null },
                    { (short)1430, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Socialnet Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/socialnet", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/socialnet/urls", null, null },
                    { (short)1428, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Shopping Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/shopping", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/shopping/urls", null, null },
                    { (short)1426, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Sex Lingerie Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/sex/lingerie", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/sex/lingerie/urls", null, null },
                    { (short)1424, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Sex Education Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/sex/education", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/sex/education/urls", null, null },
                    { (short)1422, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Searchengines Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/searchengines", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/searchengines/urls", null, null },
                    { (short)1420, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Science Chemistry Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/science/chemistry", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/science/chemistry/urls", null, null },
                    { (short)1418, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Science Astronomy Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/science/astronomy", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/science/astronomy/urls", null, null },
                    { (short)1416, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Ringtones Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/ringtones", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/ringtones/urls", null, null },
                    { (short)1414, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Remotecontrol Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/remotecontrol", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/remotecontrol/urls", null, null },
                    { (short)1412, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Religion Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/religion", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/religion/urls", null, null },
                    { (short)1410, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Redirector Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/redirector", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/redirector/urls", null, null },
                    { (short)1432, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Spyware Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/spyware", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/spyware/urls", null, null },
                    { (short)1408, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Wellness Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/wellness", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/wellness/urls", null, null },
                    { (short)1501, null, "This is a project that provides a pornography URL blacklist", null, null, null, "https://github.com/joelotz/URL_Blacklist", null, (short)5, "joelotz URLBlacklist", null, new DateTime(2010, 3, 14, 6, 34, 14, 0, DateTimeKind.Unspecified), null, (short)8, new DateTime(2010, 3, 14, 6, 34, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/joelotz/URL_Blacklist/master/blacklist.csv", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1664, null, "URLhaus is a project from abuse.ch with the goal of sharing malicious URLs that are being used for malware distribution.", null, null, null, "https://urlhaus.abuse.ch/", null, (short)28, "abuse.ch URLhaus Malicious URL Blocklist", null, null, (short)8, "https://urlhaus.abuse.ch/downloads/text/", null, null },
                    { (short)1827, null, "Sites engaged in the selling or distribution of bogus or fraudulent applications and/or provision of fraudulent services.", null, null, null, null, null, (short)5, "hpHosts FSA (IPs)", null, null, (short)9, "https://iplists.firehol.org/files/hphosts_fsa.ipset", null, null },
                    { (short)1826, null, "Sites engaged in browser hijacking or other forms of hijacking (OS services, bandwidth, DNS, etc.).", null, null, null, null, null, (short)5, "hpHosts HJK (IPs)", null, null, (short)9, "https://iplists.firehol.org/files/hphosts_HJK.ipset", null, null },
                    { (short)1825, null, "Sites engaged in illegal pharmacy activities.", null, null, null, null, null, (short)5, "hpHosts PHA (IPs)", null, null, (short)9, "https://iplists.firehol.org/files/hphosts_pha.ipset", null, null },
                    { (short)1823, null, null, null, null, null, null, null, (short)5, "Unsubscore Blacklist", null, null, (short)9, "http://www.unsubscore.com/blacklist.txt", null, null },
                    { (short)1822, null, "The following list is individual IP Addresses that have attempted to attack our servers. These IP addresses are currently recommended as a DENY, REJECT or BLOCK on your firewalls.", null, "https://www.cruzit.com/hth.php", null, "https://www.cruzit.com/wbl.php", null, (short)5, "Cruzit Server Blocklist", null, null, (short)9, "https://www.cruzit.com/xxwbl2txt.php", null, null },
                    { (short)1813, null, "CINS Army is a way for our company to give back to the community by sharing valuable threat intelligence harvested from our CINS system. The CINS Army list is a subset of the CINS Active Threat Intelligence ruleset, and consists of IP addresses that meet one of two basic criteria: 1) The IP's recent Rogue Packet score factor is very poor, or 2) The IP has tripped a designated number of 'trusted' alerts across a given number of our Sentinels deployed around the world.", null, null, null, "https://cinsscore.com/", null, (short)5, "CINS Army Bad Guys", null, null, (short)9, "https://cinsscore.com/list/ci-badguys.txt", null, null },
                    { (short)1812, null, null, null, null, null, "https://www.nothink.org/", null, (short)5, "NoThink SSH Blacklist", null, null, (short)9, "https://www.nothink.org/blacklist/blacklist_ssh_all.txt", null, null },
                    { (short)1811, null, null, null, null, null, "https://www.binarydefense.com/", null, (short)32, "Binary Defense Systems Artillery Threat Intelligence Feed and Banlist Feed", null, null, (short)9, "https://www.binarydefense.com/banlist.txt", null, null },
                    { (short)1810, null, "GreenSnow is a team consisting of the best specialists in computer security, we harvest a large number of IPs from different computers located around the world.", null, null, null, "https://greensnow.co/", null, (short)5, "Greensnow Blocklist", null, null, (short)9, "https://blocklist.greensnow.co/greensnow.txt", null, null },
                    { (short)1808, null, null, null, null, null, "https://rules.emergingthreats.net/", null, (short)5, "EmergingThreats Compromised IPs", null, null, (short)9, "https://rules.emergingthreats.net/blockrules/compromised-ips.txt", null, null },
                    { (short)1807, null, "Its main purpose is to block SSH bruteforce attacks via firewall.", null, null, null, "http://danger.rulez.sk/index.php/bruteforceblocker/", null, (short)5, "DangerRulezSK Brute Force Blocker", null, null, (short)9, "http://danger.rulez.sk/projects/bruteforceblocker/blist.php", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1513, null, "Black list for Squid proxy.", null, null, null, "https://github.com/oleksiig/Squid-BlackList/", "https://www.badips.com/documentation#3", (short)5, "Gulchenko's SquidBlackList", null, new DateTime(2014, 3, 2, 17, 16, 3, 0, DateTimeKind.Unspecified), null, (short)8, new DateTime(2017, 7, 4, 18, 55, 24, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/oleksiig/Squid-BlackList/master/denied_ext.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1806, null, "The mission is to report any and all attacks to the respective abuse departments of the infected PCs/servers, to ensure that the responsible provider can inform their customer about the infection and disable the attacker. ", null, "https://flattr.com/@blocklist.de", null, "https://www.blocklist.de/en/index.html", null, (short)5, "BlocklistDE All", null, null, (short)9, "https://lists.blocklist.de/lists/all.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1517, null, null, null, null, null, "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist", "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist/issues", (short)2, "Ultimate Hosts Blacklist IPs", null, new DateTime(2019, 3, 2, 18, 18, 31, 0, DateTimeKind.Unspecified), null, (short)9, new DateTime(2019, 4, 20, 16, 4, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Ultimate.Hosts.Blacklist/master/ips/ips0.list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1164, null, "List of toxic links for Turkey.", null, null, null, "https://phishing.horus.com.tr/", null, (short)2, "TR-PhishingList IP List", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)9, new DateTime(2019, 2, 16, 10, 14, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/HorusTeknoloji/TR-PhishingList/master/ip-lists.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)691, null, "Lists of the top attacking IP addresses trying to hack or compromise Wordpress web sites. Information is sourced from reports released monthly by Wordfence", "https://github.com/mitchellkrogza/Top-Attacking-IP-Addresses-Against-Wordpress-Sites#top-attacking-ip-addresses-against-wordpress-sites", "https://www.paypal.me/mitchellkrog/", "mitchellkrog@gmail.com", null, "https://github.com/mitchellkrogza/Top-Attacking-IP-Addresses-Against-Wordpress-Sites", "https://github.com/mitchellkrogza/Top-Attacking-IP-Addresses-Against-Wordpress-Sites/issues", (short)2, "Top Attacking IP Addresses Against Wordpress Sites", null, new DateTime(2017, 7, 18, 12, 10, 14, 0, DateTimeKind.Unspecified), null, (short)9, new DateTime(2017, 11, 12, 9, 43, 32, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Top-Attacking-IP-Addresses-Against-Wordpress-Sites/master/wordpress-attacking-ips.txt", null, null },
                    { (short)690, null, "A daily updated list of suspicious, snooping, sniffing and hacking attempts from IP addresses against services like SSH, HTTP and Wordpress Hack Attempts", "https://github.com/mitchellkrogza/Suspicious.Snooping.Sniffing.Hacking.IP.Addresses#suspicioussnoopingsniffinghackingipaddresses", "https://www.paypal.me/mitchellkrog/", "mitchellkrog@gmail.com", null, "https://github.com/mitchellkrogza/Suspicious.Snooping.Sniffing.Hacking.IP.Addresses", "https://github.com/mitchellkrogza/Suspicious.Snooping.Sniffing.Hacking.IP.Addresses/issues", (short)2, "Suspicious Snooping Sniffing Hacking IP Addresses", null, new DateTime(2018, 4, 14, 11, 56, 37, 0, DateTimeKind.Unspecified), null, (short)9, new DateTime(2019, 4, 15, 6, 1, 37, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Suspicious.Snooping.Sniffing.Hacking.IP.Addresses/master/ips.list", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)683, null, null, null, null, "support@novirusthanks.com", null, "http://www.urlvir.com/", null, (short)5, "URLVir Active Malicious IP Addresses Hosting Malware", null, null, (short)9, new DateTime(2019, 4, 15, 5, 38, 11, 0, DateTimeKind.Unspecified), "http://www.urlvir.com/export-ip-addresses/", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)682, null, "This file will be automatically updated daily and populated with the last 30 days of malicious IP addresses.", null, null, null, "https://malc0de.com/dashboard/", null, (short)5, "Malc0de IP Blacklist", null, null, (short)9, new DateTime(2019, 4, 15, 5, 33, 9, 0, DateTimeKind.Unspecified), "https://malc0de.com/bl/IP_Blacklist.txt", null, null },
                    { (short)681, null, "An IP list of domains serving malware", null, null, "https://www.malwaredomainlist.com/forums/", "https://www.malwaredomainlist.com/", null, (short)7, "Malware Domain List (IPs)", null, "https://www.malwaredomainlist.com/contact.php", (short)9, new DateTime(2019, 2, 24, 13, 32, 10, 0, DateTimeKind.Unspecified), "https://www.malwaredomainlist.com/hostslist/ip.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)675, null, null, null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (IPs)", "https://pgl.yoyo.org/as/policy.php", null, (short)9, new DateTime(2019, 4, 13, 10, 36, 13, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/iplist.php?ipformat=plain&showintro=1&mimetype=plaintext", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)604, null, "IPs used by forum spammers (last 30 days)", null, null, "https://www.stopforumspam.com/forum/", "https://www.stopforumspam.com/", null, (short)26, "StopForumSpam", null, new DateTime(2018, 10, 7, 5, 30, 15, 0, DateTimeKind.Unspecified), null, (short)9, new DateTime(2019, 4, 7, 5, 30, 15, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/firehol/blocklist-ipsets/master/stopforumspam_30d.ipset", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)415, null, null, null, null, null, "https://gist.github.com/BBcan177", null, (short)5, "pfBlockerNG - MS-1", null, null, (short)9, "https://gist.githubusercontent.com/BBcan177/bf29d47ea04391cb3eb0/raw/7290e0681bcd07415420b5c80a253652fd13f840/MS-1", null, null },
                    { (short)1920, null, "Blocklist for Ad Redirects", null, null, null, "https://github.com/zznidar/BAR", "https://github.com/zznidar/BAR/issues", (short)5, "BAR-List (URLs)", null, null, (short)8, "https://raw.githubusercontent.com/zznidar/BAR/master/URLs_full", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1534, null, null, null, null, "wduk10@hotmail.com", null, "https://hostsfile.mine.nu/", null, (short)34, "The Hosts File Project IPs", null, null, (short)9, new DateTime(2005, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://hostsfile.mine.nu/hosts.ips", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1828, null, "Sites engaged in astroturfing (otherwise known as grass roots marketing) or spamming.", null, null, null, null, null, (short)5, "hpHosts GRM (IPs)", null, null, (short)9, "https://iplists.firehol.org/files/hphosts_grm.ipset", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1406, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Travel Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/travel", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/travel/urls", null, null },
                    { (short)1402, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Restaurants Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/restaurants", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/restaurants/urls", null, null },
                    { (short)1344, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Realestate Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/realestate", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/realestate/urls", null, null },
                    { (short)1342, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Other Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/other", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/other/urls", null, null },
                    { (short)1340, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Moneylending Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/moneylending", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/moneylending/urls", null, null },
                    { (short)1338, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Insurance Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/insurance", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/insurance/urls", null, null },
                    { (short)1336, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Banking Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/banking", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/banking/urls", null, null },
                    { (short)1334, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Education Schools Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/education/schools", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/education/schools/urls", null, null },
                    { (short)1332, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Dynamic Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/dynamic", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/dynamic/urls", null, null },
                    { (short)1330, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Drugs Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/drugs", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/drugs/urls", null, null },
                    { (short)1328, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Downloads Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/downloads", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/downloads/urls", null, null },
                    { (short)1326, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Dating Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/dating", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/dating/urls", null, null },
                    { (short)1324, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Costtraps Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/costtraps", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/costtraps/urls", null, null },
                    { (short)1346, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Trading Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/trading", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/trading/urls", null, null },
                    { (short)1322, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Chat Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/chat", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/chat/urls", null, null },
                    { (short)1318, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Automobile Cars Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/automobile/cars", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/automobile/cars/urls", null, null },
                    { (short)1316, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Automobile Boats Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/automobile/boats", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/automobile/boats/urls", null, null },
                    { (short)1314, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Automobile Bikes Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/automobile/bikes", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/automobile/bikes/urls", null, null },
                    { (short)1312, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List AnonVPN Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/anonvpn", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/anonvpn/urls", null, null },
                    { (short)1310, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Alcohol Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/alcohol", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/alcohol/urls", null, null },
                    { (short)1308, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Aggressive Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/aggressive", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/aggressive/urls", null, null },
                    { (short)1306, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Adv Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/adv", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/adv/urls", null, null },
                    { (short)496, null, "MrThreats filter list that blocks confirmed phishing domains", null, null, null, "https://github.com/MrThreat/Confirmed-Phish", "https://github.com/MrThreat/Confirmed-Phish/issues", (short)5, "Confirmed Phishing Domains", null, new DateTime(2018, 8, 20, 1, 51, 59, 0, DateTimeKind.Unspecified), null, (short)8, new DateTime(2018, 9, 21, 5, 50, 27, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MrThreat/Confirmed-Phish/master/phish.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)348, null, null, null, null, null, "http://vxvault.net/", null, (short)39, "VXVault", null, null, (short)8, new DateTime(2019, 4, 13, 13, 8, 11, 0, DateTimeKind.Unspecified), "http://vxvault.net/URL_List.php", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)34, null, "OpenPhish uses proprietary Artificial Intelligence algorithms to automatically identify zero-day phishing sites and provide comprehensive, actionable, real-time threat intelligence.", "https://openphish.com/", null, "contact@openphish.com", null, "https://openphish.com/", null, (short)5, "OpenPhish Phishing Intelligence Community Feed", null, null, (short)8, new DateTime(2019, 4, 8, 19, 57, 11, 0, DateTimeKind.Unspecified), "https://openphish.com/feed.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1660, null, null, null, null, null, "https://github.com/bzsparks/uMatrix", "https://github.com/bzsparks/uMatrix/issues", (short)5, "bzspark's uMatrix Rules", null, null, (short)7, new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bzsparks/uMatrix/master/my-umatrix-rules.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1320, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Automobile Planes Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/automobile/planes", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/automobile/planes/urls", null, null },
                    { (short)1404, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Sports Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/sports", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/sports/urls", null, null },
                    { (short)1348, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Fortunetelling Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/fortunetelling", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/fortunetelling/urls", null, null },
                    { (short)1352, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Gamble Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/gamble", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/gamble/urls", null, null },
                    { (short)1400, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Martialarts Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/martialarts", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/martialarts/urls", null, null },
                    { (short)1398, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Humor Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/humor", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/humor/urls", null, null },
                    { (short)1396, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Radiotv Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/radiotv", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/radiotv/urls", null, null },
                    { (short)1394, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Porn Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/porn", (short)8, new DateTime(2019, 4, 4, 2, 0, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/porn/urls", null, null },
                    { (short)1392, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Politics Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/politics", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/politics/urls", null, null },
                    { (short)1390, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Podcasts Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/podcasts", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/podcasts/urls", null, null },
                    { (short)1388, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List News Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/news", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/news/urls", null, null },
                    { (short)1386, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Music Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/music", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/music/urls", null, null },
                    { (short)1384, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Movies Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/movies", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/movies/urls", null, null },
                    { (short)1382, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Models Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/models", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/models/urls", null, null },
                    { (short)1380, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Military Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/military", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/military/urls", null, null },
                    { (short)1350, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Forum Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/forum", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/forum/urls", null, null },
                    { (short)1378, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Library Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/library", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/library/urls", null, null },
                    { (short)1374, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Isp Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/isp", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/isp/urls", null, null },
                    { (short)1372, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Imagehosting Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/imagehosting", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/imagehosting/urls", null, null },
                    { (short)1370, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hospitals Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hospitals", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hospitals/urls", null, null },
                    { (short)1368, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Homestyle Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/homestyle", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/homestyle/urls", null, null },
                    { (short)1366, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Pets Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/pets", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/pets/urls", null, null },
                    { (short)1364, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Gardening Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/gardening", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/gardening/urls", null, null },
                    { (short)1362, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Games-online Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/games-online", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/games-online/urls", null, null },
                    { (short)1360, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Games-misc Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/games-misc", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/games-misc/urls", null, null },
                    { (short)1358, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Cooking Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/cooking", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/cooking/urls", null, null },
                    { (short)1356, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hacking Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hacking", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hacking/urls", null, null },
                    { (short)1354, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Government Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/government", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/government/domains", null, null },
                    { (short)1376, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Jobsearch Urls", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/jobsearch", (short)8, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/jobsearch/urls", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1829, null, "Sites engaged in the housing, development or distribution of exploits, including but not limited to exploitation of browser, software (inclusive of website software such as CMS), operating system exploits as well as those engaged in exploits via social engineering.", null, null, null, null, null, (short)5, "hpHosts EXP (IPs)", null, null, (short)9, "https://iplists.firehol.org/files/hphosts_exp.ipset", null, null },
                    { (short)1830, null, "Sites engaged in malware distribution.", null, null, null, null, null, (short)5, "hpHosts EMD (IPs)", null, null, (short)9, "https://iplists.firehol.org/files/hphosts_emd.ipset", null, null },
                    { (short)1831, null, "This classification is assigned for domains being used for advert or tracking purposes.", null, null, null, null, null, (short)5, "hpHosts ATS (IPs)", null, null, (short)9, "https://iplists.firehol.org/files/hphosts_exp.ipset", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1524, null, "Is a DAT-format IP block list suitable for use in torrent clients like Halite for Windows. The list is merged from BlueTack levels 1 and 2, then deduped and sorted. This will come in especially handy on public trackers. This file will be updated every two weeks.", null, null, null, "https://github.com/bongochong/CombinedPrivacyBlockLists", null, (short)4, "Combined Privacy Block Lists IPs DAT-format", null, new DateTime(2017, 10, 21, 0, 57, 14, 0, DateTimeKind.Unspecified), null, (short)15, new DateTime(2019, 4, 8, 8, 56, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bongochong/CombinedPrivacyBlockLists/master/combined-final-win.dat", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)302, null, "This list summarizes the top 20 attacking class C (/24) subnets over the last three days. The number of 'attacks' indicates the number of targets reporting scans from this subnet.", "https://feeds.dshield.org/block.txt", null, "info@dshield.org", null, "https://dshield.org/suspicious_domains.html", null, (short)25, "DShield.org Recommended Block List", null, null, (short)15, new DateTime(2019, 4, 13, 1, 58, 12, 0, DateTimeKind.Unspecified), "https://feeds.dshield.org/block.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1959, null, "A hosts file to connect to the third-party DS/Wii online servers hosted by RiiConnect24 and Wiimmfi. Can be used for Nintendo DS games and WiiConnect24. Unfortunately doesn't work for Wii games.", null, null, null, "https://github.com/RiiConnect24/DNS-Server/", null, (short)5, "RiiConnect24/Wiimmfi List for Users of AdGuard Home and Pi-Hole", null, null, (short)14, "https://raw.githubusercontent.com/RiiConnect24/DNS-Server/master/dns_zones-hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1638, null, "This file is useful to unblock some websites that blocked by internet positive or so. You can also say it bypass, it's easy to use.", "https://github.com/Hakame-kun/uBlock-Filters-Indonesia/tree/master/Windows%20Host", null, null, "https://github.com/Hakame-kun/uBlock-Filters-Indonesia", "https://github.com/Hakame-kun/uBlock-Filters-Indonesia/issues", (short)5, "Hakame-kun's Windows Host", null, null, (short)14, new DateTime(2019, 4, 16, 23, 19, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Hakame-kun/uBlock-Filters-Indonesia/master/Windows%20Host/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1555, null, "This script can help you bypass all website content that is blocked by Indonesia's «Positive Internet» campaign through the hosts file.", "https://github.com/gvoze32/unblockhostid#unblockhostid", "https://unblockhostid.github.io/", null, "https://unblockhostid.github.io/", "https://github.com/gvoze32/bebasid/issues", (short)2, "UNBLOCKHOSTID", null, new DateTime(2017, 6, 23, 13, 44, 9, 0, DateTimeKind.Unspecified), null, (short)14, new DateTime(2019, 4, 15, 16, 54, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/gvoze32/bebasid/master/releases/hosts", null, null },
                    { (short)717, null, "The project does not make any profit, only for convenient browsing of some websites for study and research, please comply with local laws.", "https://github.com/superliaoyong/hosts#%E9%A1%B9%E7%9B%AE%E4%B8%8D%E5%81%9A%E4%BB%BB%E4%BD%95%E7%9B%88%E5%88%A9%E5%8F%AA%E4%BE%9B%E4%BE%BF%E5%88%A9%E7%9A%84%E6%B5%8F%E8%A7%88%E9%83%A8%E5%88%86%E7%BD%91%E7%AB%99%E4%BB%A5%E5%AD%A6%E4%B9%A0%E7%A0%94%E7%A9%B6%E8%AF%B7%E9%81%B5%E5%AE%88%E5%BD%93%E5%9C%B0%E6%B3%95%E5%BE%8B", null, null, "https://github.com/superliaoyong/hosts", null, (short)5, "Full Address Hosts File", "https://github.com/superliaoyong/hosts#%E9%A1%B9%E7%9B%AE%E5%BC%80%E6%BA%90%E5%A4%8D%E5%88%B6%E6%97%B6%E6%B3%A8%E6%98%8E%E6%9D%A5%E6%BA%90%E4%BD%86%E7%A6%81%E6%AD%A2%E4%BB%BB%E4%BD%95%E4%BA%BA%E6%88%96%E7%BB%84%E7%BB%87%E9%87%8D%E5%8F%91%E5%B8%83%E5%88%B0%E5%A4%A7%E9%99%86%E7%BD%91%E7%AB%99", new DateTime(2016, 7, 10, 13, 38, 56, 0, DateTimeKind.Unspecified), null, (short)14, new DateTime(2016, 7, 10, 13, 38, 56, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/superliaoyong/hosts/master/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)715, null, null, null, null, "admin@highsea90.com", null, "https://github.com/highsea/Hosts", "https://github.com/highsea/Hosts/issues", (short)5, "High Sea Hosts", null, new DateTime(2015, 1, 15, 8, 3, 24, 0, DateTimeKind.Unspecified), null, (short)14, new DateTime(2015, 3, 30, 4, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/highsea/Hosts/master/host-include-appale/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)435, null, "A redirector list for Chinese users.", null, null, null, "https://github.com/googlehosts/hosts", "https://github.com/googlehosts/hosts/issues", (short)22, "Google Hosts", null, new DateTime(2017, 8, 18, 7, 43, 41, 0, DateTimeKind.Unspecified), null, (short)14, new DateTime(2019, 4, 15, 6, 1, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/googlehosts/hosts/master/hosts-files/hosts", "https://coding.net/u/scaffrey/p/hosts/git/raw/master/hosts-files/hosts", null },
                    { (short)340, null, "Redirector list intended for Chinese users, for Gmail, Instagram, Wikipedia, Yahoo, Telegram(WEB), Dropbox, Flipboard, Mage, Line, Pinterest, W3schools, Ingress, Twitch, SoundCloud, Xboxlive, WordPress, Tapatalk, Kobo, Vimeo, Nytimes, Issuu, Tor, DuckDuckGo, Imgur, Pcbeta…", null, null, null, "https://github.com/Lerist/Go-Hosts", "https://github.com/Lerist/Go-Hosts/issues", (short)2, "Go Hosts", null, new DateTime(2017, 3, 11, 18, 2, 38, 0, DateTimeKind.Unspecified), null, (short)14, new DateTime(2017, 10, 10, 2, 0, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Lerist/Go-Hosts/master/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1878, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters. uBO users should use the regular version instead. Note: This list does not actually block any mining-related stuff.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (for MinerBlock)", null, new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)13, new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersForMinerBlock.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/NordicFiltersForMinerBlock.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/NordicFiltersForMinerBlock.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)512, null, "MinerBlock is an efficient browser extension that focuses on blocking browser-based cryptocurrency miners all over the web.", "https://github.com/xd4rker/MinerBlock", "https://github.com/xd4rker/MinerBlock#donations", null, "https://github.com/xd4rker/MinerBlock", "https://github.com/xd4rker/MinerBlock/issues", (short)2, "MinerBlock Filters", null, new DateTime(2017, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)13, new DateTime(2019, 2, 3, 19, 21, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/xd4rker/MinerBlock/master/assets/filters.txt", null, null },
                    { (short)1525, null, "Is a P2P-format IP block list suitable for use in torrent clients like qBitTorrent and Transmission under any OS. The list is merged from BlueTack levels 1 and 2, then deduped and sorted. This will also come in especially handy on public trackers. This file will be updated every two weeks.", null, null, null, "https://github.com/bongochong/CombinedPrivacyBlockLists", null, (short)4, "Combined Privacy Block Lists IPs P2P-format", null, new DateTime(2017, 10, 21, 0, 57, 14, 0, DateTimeKind.Unspecified), null, (short)15, new DateTime(2019, 4, 8, 8, 56, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bongochong/CombinedPrivacyBlockLists/master/combined-final.p2p", null, null },
                    { (short)398, null, null, null, null, null, "https://github.com/NanoAdblocker/NanoFilters", "https://github.com/NanoAdblocker/NanoFilters/issues", (short)4, "Nano filters - Annoyance", null, new DateTime(2017, 12, 11, 15, 31, 47, 0, DateTimeKind.Unspecified), null, (short)12, new DateTime(2019, 4, 6, 2, 34, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/NanoAdblocker/NanoFilters/master/NanoFilters/NanoAnnoyance.txt", null, null },
                    { (short)396, null, null, null, null, null, "https://github.com/NanoAdblocker/NanoFilters", "https://github.com/NanoAdblocker/NanoFilters/issues", (short)4, "Nano filters", null, new DateTime(2017, 12, 9, 3, 28, 59, 0, DateTimeKind.Unspecified), null, (short)12, new DateTime(2019, 4, 14, 16, 26, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/NanoAdblocker/NanoFilters/master/NanoFilters/NanoBase.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)857, null, "A list that makes use of Einar Egilsson's Redirector extension, in order to make links to certain websites redirect to the proper .onion pages. For example, clicking on links to nytimes.com would instead lead to nytimes3xbfgragh.onion.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt/tree/master/Dandelion%20Sprout-s%20Redirector%20Assistant%20List", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Tor Redirector List", null, new DateTime(2018, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)11, new DateTime(2019, 4, 8, 2, 36, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout-s%20Redirector%20Assistant%20List/TorRedirectorList.json", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Dandelion%20Sprout-s%20Redirector%20Assistant%20List/TorRedirectorList.json", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Dandelion%20Sprout-s%20Redirector%20Assistant%20List/TorRedirectorList.json" },
                    { (short)393, null, "A list that shows off and makes use of Einar Egilsson's Redirector extension, in order to accomplish things that no adblock tool could've achieved. Examples include turning 32-bit Windows program installation links into 64-bit ones, making Disney's US websites accessible from other countries, turning mobile Wikipedia links into desktop ones, changing Reddit/YouTube UIs into their old ones, and making image resolutions on some sites larger, among many other things.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt/tree/master/Dandelion%20Sprout-s%20Redirector%20Assistant%20List", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Redirector List", null, new DateTime(2018, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)11, new DateTime(2019, 4, 14, 23, 37, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout-s%20Redirector%20Assistant%20List/DandelionSproutRedirectorList.json", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Dandelion%20Sprout-s%20Redirector%20Assistant%20List/DandelionSproutRedirectorList.json", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Dandelion%20Sprout-s%20Redirector%20Assistant%20List/DandelionSproutRedirectorList.json" },
                    { (short)1588, null, "There's categories that cover unusual malware and phishing domains that very few other lists seem to cover.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Anti-Malware%20List.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Anti-Malware List (TPL)", null, new DateTime(2018, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)10, new DateTime(2019, 4, 19, 0, 21, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareTPL.tpl", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Alternate%20versions%20Anti-Malware%20List/AntiMalwareTPL.tpl", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareTPL.tpl" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1547, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "IndianList (TPL)", null, null, (short)10, new DateTime(2019, 4, 18, 23, 25, 9, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/indianlist.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1546, null, "Finnish supplement list for EasyList.", "https://raw.githubusercontent.com/wiltteri/subscriptions/master/wiltteri.txt", null, null, "https://github.com/wiltteri/subscriptions", null, (short)11, "Wiltteri Reborn (TPL)", null, new DateTime(2015, 4, 25, 19, 15, 33, 0, DateTimeKind.Unspecified), null, (short)10, new DateTime(2015, 5, 16, 15, 23, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/wiltteri/subscriptions/master/wiltteri-reborn.tpl", null, null },
                    { (short)1545, null, "Finnish supplement list for EasyList.", "https://raw.githubusercontent.com/wiltteri/subscriptions/master/wiltteri.txt", null, null, "https://github.com/wiltteri/subscriptions", null, (short)11, "Wiltteri (TPL)", null, new DateTime(2015, 4, 25, 19, 15, 33, 0, DateTimeKind.Unspecified), null, (short)10, new DateTime(2015, 5, 16, 15, 23, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/wiltteri/subscriptions/master/wiltteri.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1544, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyList Portuguese (TPL)", null, null, (short)10, new DateTime(2019, 4, 18, 23, 19, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistportuguese.tpl", null, null },
                    { (short)1543, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "KoreanList (TPL)", null, null, (short)10, new DateTime(2019, 4, 18, 23, 15, 9, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/koreanlist.tpl", null, null },
                    { (short)1542, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "Adware Filters (TPL)", null, null, (short)10, new DateTime(2019, 4, 18, 23, 11, 9, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/adwarefilters.tpl", null, null },
                    { (short)1541, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "Acceptable Ads (TPL)", null, null, (short)10, new DateTime(2019, 4, 18, 23, 6, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/exceptionrules.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)397, null, null, null, null, null, "https://github.com/NanoAdblocker/NanoFilters", "https://github.com/NanoAdblocker/NanoFilters/issues", (short)4, "Nano filters - Whitelist", null, new DateTime(2017, 12, 19, 18, 51, 51, 0, DateTimeKind.Unspecified), null, (short)12, new DateTime(2019, 2, 8, 2, 10, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/NanoAdblocker/NanoFilters/master/NanoFilters/NanoWhitelist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1540, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyList Polish (TPL)", null, null, (short)10, new DateTime(2019, 4, 18, 23, 2, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylistpolish.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)510, null, "Filter list for uBlock, AdBlock and similar extensions.", "https://raw.githubusercontent.com/UnluckyLuke/BlockUnderRadarJunk/master/blockunderradarjunk-list.txt", null, null, "https://github.com/UnluckyLuke/BlockUnderRadarJunk", "https://github.com/UnluckyLuke/BlockUnderRadarJunk/issues", (short)24, "BlockUnderRadarJunk", null, new DateTime(2018, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)16, new DateTime(2019, 3, 17, 22, 28, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/UnluckyLuke/BlockUnderRadarJunk/master/blockunderradarjunk-list.txt", null, null },
                    { (short)1463, null, "Personal hosts list for Samsung Knox-based ad blockers.", null, null, null, "https://github.com/CitizenXVIL/Hosts", "https://github.com/CitizenXVIL/Hosts/issues", (short)5, "CitizenXVIL Hosts", null, new DateTime(2018, 5, 23, 18, 28, 32, 0, DateTimeKind.Unspecified), null, (short)16, new DateTime(2019, 4, 3, 3, 14, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/CitizenXVIL/Hosts/master/Optimized_hosts_list.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1617, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Gambling + Porn + Social (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_gambling-porn-social/sb_unified_hosts_gambling-porn-social.lsrules", null, null },
                    { (short)1616, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Fakenews (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_fakenews/sb_unified_hosts_fakenews.lsrules", null, null },
                    { (short)1615, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Fakenews + Social (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_fakenews-social/sb_unified_hosts_fakenews-social.lsrules", null, null },
                    { (short)1614, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Fakenews + Porn (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_fakenews-porn/sb_unified_hosts_fakenews-porn.lsrules", null, null },
                    { (short)1613, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Fakenews + Porn + Social (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_fakenews-porn-social/sb_unified_hosts_fakenews-porn-social.lsrules", null, null },
                    { (short)1612, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Fakenews + Gambling (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_fakenews-gambling-porn/sb_unified_hosts_fakenews-gambling-porn.lsrules", null, null },
                    { (short)1611, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Fakenews + Gambling + Social (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_fakenews-gambling-social/sb_unified_hosts_fakenews-gambling-social.lsrules", null, null },
                    { (short)1610, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Fakenews + Gambling + Porn (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_fakenews-gambling-porn/sb_unified_hosts_fakenews-gambling-porn.lsrules", null, null },
                    { (short)1609, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Fakenews + Gambling + Porn + Social (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_fakenews-gambling-porn-social/sb_unified_hosts_fakenews-gambling-porn-social.lsrules", null, null },
                    { (short)1608, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_base/sb_unified_hosts_base.lsrules", null, null },
                    { (short)1578, null, "This is a long list of domains accociated with facebook taken from https://github.com/jmdugan/blocklists", "https://raw.githubusercontent.com/fabianmoronzirfas/block-facebook/master/block-facebook.lsrules", null, null, "https://github.com/fabianmoronzirfas/block-facebook", "https://github.com/fabianmoronzirfas/block-facebook/issues", (short)28, "Little Snitch Block Facebook Rule Set", null, null, (short)18, "https://raw.githubusercontent.com/fabianmoronzirfas/block-facebook/master/block-facebook.lsrules", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)677, null, null, null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (Domains with wildcards)", "https://pgl.yoyo.org/as/policy.php", null, (short)16, new DateTime(2019, 4, 13, 10, 46, 11, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/as/serverlist.php?hostformat=adblock;showintro=1&mimetype=plaintext", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1282, null, "Little Snitch rules for Mac apps.", "https://github.com/koenrh/little-snitch-rules", null, null, "https://github.com/koenrh/little-snitch-rules", "https://github.com/koenrh/little-snitch-rules/issues", (short)5, "Koen's Little Snitch rules", null, new DateTime(2018, 6, 14, 17, 24, 0, 0, DateTimeKind.Unspecified), null, (short)18, new DateTime(2018, 6, 15, 8, 2, 27, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/koenrh/little-snitch-rules/master/apps.lsrules", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)671, null, "This rule group demonstrates the subscription of a blocklist. It's for demo purposes only. It lets you try out the subscription procedure and the available configuration options. You can rename the group, enable/disable either individual rules or the entire group, specify the update interval, and more.", null, null, null, "https://www.obdev.at/products/littlesnitch/index.html", null, (short)5, "Little Snitch Blocklist Example", null, null, (short)18, "https://obdev.at/resources/littlesnitch/blocklist-example.lsrules", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)670, null, "A version of the Nordic filter list for Little Snitch. It currently doesn't see much work done on it, as the maintainer does not have a Mac to test it with.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (Little Snitch)", null, null, (short)18, new DateTime(2019, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/LittleSnitchNorwegianList.lsrules", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/LittleSnitchNorwegianList.lsrules", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/LittleSnitchNorwegianList.lsrules" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1635, null, "This aggregate list currently targets hateful/scamming religious preachers, astrology, and prayer time listings on mainstream websites.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Anti-'Religious insanity' List", null, new DateTime(2019, 6, 28, 16, 0, 0, 0, DateTimeKind.Unspecified), null, (short)17, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Anti-Religion%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Dandelion%20Sprout's%20Anti-Religion%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Dandelion%20Sprout's%20Anti-Religion%20List.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1592, null, "So you're browsing Reddit or Twitch, and you're seeing an interesting info link? Well… about that link… this list will turn links to the biggest YouTube uploads of Rick Astley's «Never Gonna Give You Up» into a bright red colour, thus helping you steer clear of being rickrolled.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Rickroll Link Identifier", null, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)17, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/RickrollLinkIdentifier.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/RickrollLinkIdentifier.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/RickrollLinkIdentifier.txt" },
                    { (short)1290, null, "Most anti-malware lists are pretty big and can cover a 5- or 6-digit amount of specific domains. But my list hereby claims to remove more than 25% of all known malware sites with just a 2-digit amount of entries. This is mostly done by blocking top-level domains that have become devastatingly abused by spammers, usually because they allowed for free and uncontrolled domain registrations. There's also additional categories that cover unusual malware and phishing domains that very few other lists seem to cover.", "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Anti-Malware%20List.txt", "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Anti-Malware List", null, new DateTime(2018, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)17, new DateTime(2019, 4, 19, 0, 21, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Dandelion%20Sprout's%20Anti-Malware%20List.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Dandelion%20Sprout's%20Anti-Malware%20List.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Dandelion%20Sprout's%20Anti-Malware%20List.txt" },
                    { (short)84, null, "uBlock Origin supplement list for Official Polish Filters for AdBlock, uBlock Origin & AdGuard", null, "https://patronite.pl/polskiefiltry", "errors@certyficate.it", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Official Polish Filters for AdBlock, uBlock Origin & AdGuard - Supplement for uBlock", null, new DateTime(2016, 8, 7, 20, 10, 32, 0, DateTimeKind.Unspecified), "https://www.certyficate.it/kontakt/", (short)17, new DateTime(2019, 4, 8, 4, 8, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/polish-adblock-filters/adblock_ublock.txt", "https://gitcdn.xyz/repo/MajkiIT/polish-ads-filter/master/polish-adblock-filters/adblock_ublock.txt", "https://rawcdn.githack.com/MajkiIT/polish-ads-filter/master/polish-adblock-filters/adblock_ublock.txt" },
                    { (short)20, null, "Removes ads, affiliation ads, and empty boxes on Norwegian, Danish, Icelandic, Sami and Danish territorial sites to produce a cleaner browser experience. Meant to be used on top of general filters.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites", null, new DateTime(2018, 5, 15, 2, 39, 19, 0, DateTimeKind.Unspecified), null, (short)17, new DateTime(2019, 4, 8, 1, 41, 2, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianList.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1469, null, "Some optimized host files for Knox Adblockers.", null, null, null, "https://github.com/Zykreh/vortexhosts", null, (short)5, "Vortex Hosts Lite", null, new DateTime(2019, 2, 9, 8, 43, 10, 0, DateTimeKind.Unspecified), null, (short)16, new DateTime(2019, 2, 9, 11, 36, 53, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Zykreh/vortexhosts/master/vortex_lite.txt", null, null },
                    { (short)1468, null, "Some optimized host files for Knox Adblockers.", null, null, null, "https://github.com/Zykreh/vortexhosts", null, (short)5, "Vortex Hosts Experimental", null, new DateTime(2019, 2, 10, 10, 5, 7, 0, DateTimeKind.Unspecified), null, (short)16, new DateTime(2019, 2, 10, 16, 39, 47, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Zykreh/vortexhosts/master/vortex_experimental.txt", null, null },
                    { (short)1467, null, "Some optimized host files for Knox Adblockers.", null, null, null, "https://github.com/Zykreh/vortexhosts", null, (short)5, "Vortex Hosts Energized", null, new DateTime(2019, 2, 9, 11, 50, 11, 0, DateTimeKind.Unspecified), null, (short)16, new DateTime(2019, 2, 9, 11, 59, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Zykreh/vortexhosts/master/vortex_energized.txt", null, null },
                    { (short)1466, null, "Some optimized host files for Knox Adblockers.", null, null, null, "https://github.com/Zykreh/vortexhosts", null, (short)5, "Vortex Hosts", null, new DateTime(2019, 2, 9, 9, 25, 43, 0, DateTimeKind.Unspecified), null, (short)16, new DateTime(2019, 2, 27, 22, 27, 17, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Zykreh/vortexhosts/master/vortex.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)672, null, "Ad server list for use with Little Snitch", null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (Little Snitch)", "https://pgl.yoyo.org/as/policy.php", null, (short)18, new DateTime(2019, 4, 13, 10, 21, 10, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=littlesnitch-rule-group-subscriptions;showintro=1&mimetype=plaintext", null, null },
                    { (short)1539, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyTest (TPL)", null, null, (short)10, new DateTime(2019, 4, 18, 22, 57, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easytest.tpl", null, null },
                    { (short)1538, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyList Without Element Hiding Rules (TPL)", null, null, (short)10, new DateTime(2019, 4, 18, 22, 48, 9, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/easylist_noelemhide.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1537, null, "EasyPrivacy is an optional supplementary filter list that completely removes all forms of tracking from the internet, including web bugs, tracking scripts and information collectors, thereby protecting your personal data.", "https://easylist.to/", null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyPrivacy (TPL)", null, null, (short)10, "https://easylist-msie.adblockplus.org/easyprivacy.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)764, null, null, null, null, null, "http://jansal.net/TPL.shtml", null, (short)16, "Fanboy's Enhanced Tracking List", null, null, (short)10, new DateTime(2016, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), "http://jansal.net/tpl/fanboy/enhancedstats-addon.tpl", null, null },
                    { (short)763, null, null, null, "https://www.paypal.com/nz/cgi-bin/webscr?cmd=_flow&SESSION=e3IZrPcc9VRrZhVknlZQ_6FjPBYH0_TRCkvdN7P_2F8lM3LsRl5iaKoa5LO&dispatch=5885d80a13c0db1f8e263663d3faee8db8175432b4df92754f4b4adb5a123d61&rapidsState=Donation__DonationFlow___StateDonationLogin&rapidsStateSignature=97ea3fa28f688ec0477182a325851e412cbbd40d", null, "https://www.fanboy.co.nz/", null, (short)16, "Fanboy's Tracking List (TPL)", null, null, (short)10, new DateTime(2013, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://www.fanboy.co.nz/adblock/ie/fanboy-tracking.tpl", null, null },
                    { (short)762, null, null, null, "https://www.paypal.com/nz/cgi-bin/webscr?cmd=_flow&SESSION=e3IZrPcc9VRrZhVknlZQ_6FjPBYH0_TRCkvdN7P_2F8lM3LsRl5iaKoa5LO&dispatch=5885d80a13c0db1f8e263663d3faee8db8175432b4df92754f4b4adb5a123d61&rapidsState=Donation__DonationFlow___StateDonationLogin&rapidsStateSignature=97ea3fa28f688ec0477182a325851e412cbbd40d", null, "https://www.fanboy.co.nz/", null, (short)16, "Fanboy's Adblock-Nonelements List", null, null, (short)10, new DateTime(2013, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://www.fanboy.co.nz/adblock/ie/fanboy-noele.tpl", null, null },
                    { (short)761, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)16, "Adversity (TPL)", null, null, (short)10, new DateTime(2013, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/Adversity/Adversity.tpl", null, null },
                    { (short)760, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)16, "Adversity - AntiSocial (TPL)", null, null, (short)10, new DateTime(2013, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/Adversity/Antisocial.tpl", null, null },
                    { (short)759, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)5, "Fanboy's IsraelList (TPL)", null, null, (short)10, new DateTime(2013, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/IsraelList.tpl", null, null },
                    { (short)758, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)5, "Adblock Persian List (TPL)", null, null, (short)10, new DateTime(2016, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/adblock-persian.tpl", null, null },
                    { (short)757, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)5, "Facebook Connect Opt-Out", null, null, (short)10, new DateTime(2011, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/facebook-connect-optout-adblockplusfilter.tpl", null, null },
                    { (short)756, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)8, "Latvian List (TPL)", null, null, (short)10, new DateTime(2016, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/latvian-list.tpl", null, null },
                    { (short)755, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)5, "Sucuri M", null, null, (short)10, new DateTime(2013, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/m.tpl", null, null },
                    { (short)754, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)5, "Malware Patrol TPL", null, null, (short)10, new DateTime(2016, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/malpatrol.tpl", null, null },
                    { (short)765, null, null, null, null, null, "http://jansal.net/TPL.shtml", null, (short)16, "Fanboy's Adblock List (TPL)", null, null, (short)10, new DateTime(2013, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), "http://jansal.net/tpl/fanboy/fanboy-adult.tpl", null, null },
                    { (short)753, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)2, "Prebake TPL", null, null, (short)10, new DateTime(2016, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/obtrusive.tpl", null, null },
                    { (short)751, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)5, "Rickroll Blacklist (TPL)", null, null, (short)10, new DateTime(2016, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/ricklist.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)750, null, "TRUSTe's Easy Tracking Protection list enables relevant and targeted content from companies that demonstrate respectful consumer privacy practices and comply with TRUSTe's high standards and direct oversight.", "https://easy-tracking-protection.truste.com/easy.tpl", null, null, "https://www.trustarc.com/blog/2011/02/17/truste-tpl-next-steps/", null, (short)5, "TRUSTe Easy Tracking Protection List", null, null, (short)10, "https://easy-tracking-protection.truste.com/easy.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)749, null, "This is a list of malware domains generated from malwaredomains.com data.", "https://easylist-msie.adblockplus.org/malwaredomains_full.tpl", null, "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Malware Domains (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 23, 30, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/malwaredomains_full.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)748, null, "Blocks 3rd-party Google tracking", "https://www.microsoft.com/cms/api/am/binary/RWilsQ", null, null, "https://blogs.msdn.microsoft.com/ie/2012/02/20/google-bypassing-user-privacy-settings/", null, (short)5, "Stop Google Tracking", null, null, (short)10, new DateTime(2013, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://www.microsoft.com/cms/api/am/binary/RWilsQ", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)673, null, null, null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (Internet Explorer)", "https://pgl.yoyo.org/as/policy.php", null, (short)10, new DateTime(2019, 4, 13, 10, 26, 11, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=msfilter&showintro=1&mimetype=plaintext", null, null },
                    { (short)507, null, "EasyList is the primary filter list that removes most adverts from international web pages, including unwanted frames, images, and objects. It is the most popular list used by many ad blockers and forms the basis of over a dozen combination and supplementary filter lists.", "https://easylist.to/", null, "easylist.subscription@gmail.com", "https://forums.lanik.us/viewforum.php?f=23", "https://easylist.to/", "https://github.com/easylist/easylist/issues", (short)4, "EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 8, 12, 48, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylist.tpl", null, null },
                    { (short)388, null, "Removes ads, affiliation ads, and empty boxes on Nordic sites to produce a cleaner browser experience. Meant to be used on top of general filters. The quality of the current TPL conversion is so-so, so don't expect perfect results.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (TPL)", null, null, (short)10, new DateTime(2019, 4, 14, 22, 37, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/DandelionSproutsNorskeFiltre.tpl", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/DandelionSproutsNorskeFiltre.tpl", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/DandelionSproutsNorskeFiltre.tpl" },
                    { (short)370, null, "Official filter list file used for blocking ads on Czech and Slovak websites.", "https://github.com/tomasko126/easylistczechandslovak", null, "tomastaro@adblock.sk", "https://easylist-czech-and-slovak.tenderapp.com/", "https://adblock.sk/", "https://github.com/tomasko126/easylistczechandslovak/issues", (short)8, "EasyList Czech and Slovak - IE", null, null, (short)10, new DateTime(2019, 4, 14, 18, 58, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistczechslovak+easylist.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1962, null, null, null, null, null, "https://github.com/xorcan/hosts/", null, (short)4, "xorcan Türk harmful ip-list (Turkish)", null, null, (short)9, "https://raw.githubusercontent.com/xorcan/hosts/master/xips.txt", null, null },
                    { (short)1910, null, null, null, null, null, "https://github.com/svetlyobg/svet-custom-domains", "https://github.com/svetlyobg/svet-custom-domains/issues", (short)5, "Svet Custom Domains (IPs)", null, null, (short)9, "https://raw.githubusercontent.com/svetlyobg/svet-custom-domains/master/ads-IPs", null, null },
                    { (short)1871, null, "Malware, advert and tracking blacklist", null, null, null, "https://github.com/mkb2091/blockconvert", null, (short)4, "BlockConvert (IPs)", null, null, (short)9, "https://raw.githubusercontent.com/mkb2091/blockconvert/master/output/ip_blocklist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)752, null, null, null, null, null, "https://jansal.net/TPL.shtml", null, (short)16, "Popup Block List for Adblock Plus Popup Addon", null, null, (short)10, new DateTime(2011, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://jansal.net/tpl/popup-block.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)773, null, null, null, null, "easylist.germany@gmail.com", "https://forums.lanik.us/viewforum.php?f=90", "https://easylist.to/", null, (short)4, "EasyList Germany + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 5, 22, 14, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistgermany+easylist.tpl", null, null },
                    { (short)774, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", null, (short)16, "Fanboy's Annoyance List (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 16, 15, 10, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/fanboy-annoyance.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)775, null, null, null, null, null, "https://margevicius.lt/", null, (short)4, "EasyList Lithuania + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 5, 22, 25, 15, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistlithuania+easylist.tpl", null, null },
                    { (short)800, null, null, null, null, "https://forums.lanik.us/viewforum.php?f=103", "https://easylist.to/", null, (short)4, "EasyList Spanish + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 19, 35, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistspanish+easylist.tpl", null, null },
                    { (short)799, null, null, null, null, null, "https://easylist.to/", null, (short)4, "EasyList Italy (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 19, 30, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistitaly.tpl", null, null },
                    { (short)798, null, null, null, null, "https://forums.lanik.us/viewforum.php?f=91", "https://easylist.to/", null, (short)6, "Liste FR + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 19, 14, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/liste_fr+easylist.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)797, null, null, null, null, "easylist.subscription+anti@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", null, (short)4, "Adblock Warning Removal List (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 19, 9, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/antiadblockfilters.tpl", null, null },
                    { (short)796, null, null, null, null, "easylist.germany@gmail.com", "https://forums.lanik.us/viewforum.php?f=90", "https://easylist.to/", null, (short)4, "EasyList Germany (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 19, 4, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistgermany.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)795, null, null, null, null, "https://forums.lanik.us/viewforum.php?f=91", "https://easylist.to/", null, (short)6, "Liste FR (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 59, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/liste_fr.tpl", null, null },
                    { (short)794, null, null, null, null, null, "https://easylist.to/", null, (short)4, "EasyList China (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 54, 10, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistchina.tpl", null, null },
                    { (short)793, null, null, null, null, "https://forums.lanik.us/viewforum.php?f=103", "https://easylist.to/", null, (short)4, "EasyList Spanish (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 49, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistspanish.tpl", null, null },
                    { (short)792, null, null, null, null, "https://forums.lanik.us/", "https://easylist.to/", null, (short)4, "EasyList Without Rules for Adult Sites (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 38, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylist_noadult.tpl", null, null },
                    { (short)791, null, null, null, null, "https://forums.lanik.us/viewforum.php?f=102", "https://easylist.to/", null, (short)16, "RU AdList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 33, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/advblock.tpl", null, null },
                    { (short)790, null, null, null, null, "https://forums.lanik.us/", "https://easylist.to/", null, (short)4, "EasyPrivacy Without International Rules (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 28, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easyprivacy_nointernational.tpl", null, null },
                    { (short)789, null, null, null, null, null, "https://easylist.to/", null, (short)4, "EasyList Dutch (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 23, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistdutch.tpl", null, null },
                    { (short)788, null, null, null, null, null, "https://code.google.com/archive/p/liste-ar-adblock/", null, (short)12, "Liste AR (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 18, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/Liste_AR.tpl", null, null },
                    { (short)787, null, null, null, null, null, "https://easylist.to/", null, (short)16, "RU AdList + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 18, 1, 13, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/ruadlist+easylist.tpl", null, null },
                    { (short)786, null, null, null, null, null, "https://code.google.com/archive/p/liste-ar-adblock/", null, (short)12, "Liste AR + Liste FR + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 5, 22, 47, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/liste_ar+liste_fr+easylist.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)785, null, null, null, null, "easylist.subscription@gmail.com", "https://forums.lanik.us/", "https://easylist.to/", null, (short)16, "Fanboy's Social Blocking List (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 17, 56, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/fanboy-social.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)784, null, null, null, null, null, "https://easylist.to/", null, (short)11, "Wiltteri + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 5, 22, 36, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/wiltteri+easylist.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)783, null, null, null, null, "mail@zoso.ro", null, "https://www.zoso.ro/rolist/", null, (short)5, "ROList + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 17, 45, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/rolist+easylist.tpl", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)782, null, null, null, null, null, "https://easylist.to/", null, (short)4, "EasyList Dutch + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 17, 34, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistdutch+easylist.tpl", null, null },
                    { (short)781, null, null, null, null, null, "https://easylist.to/", null, (short)4, "EasyList China + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 17, 18, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistchina+easylist.tpl", null, null },
                    { (short)780, null, null, null, null, null, "https://github.com/easylist/EasyListHebrew", null, (short)4, "EasyList Hebrew + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 17, 7, 11, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/israellist+easylist.tpl", null, null },
                    { (short)779, null, null, null, null, null, "https://easylist.to/", null, (short)4, "EasyList Italy + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 16, 56, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easylistitaly+easylist.tpl", null, null },
                    { (short)778, null, null, null, null, null, "https://easylist.to/", null, (short)4, "EasyPrivacy + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 16, 40, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/easyprivacy+easylist.tpl", null, null },
                    { (short)777, null, null, null, null, null, "https://easylist.to/", null, (short)8, "Latvian List + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 16, 30, 14, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/latvianlist+easylist.tpl", null, null },
                    { (short)776, null, null, null, null, null, "https://stanev.org/abp/", null, (short)4, "Bulgarian List + EasyList (TPL)", null, null, (short)10, new DateTime(2019, 4, 16, 16, 20, 12, 0, DateTimeKind.Unspecified), "https://easylist-msie.adblockplus.org/bulgarian_list+easylist.tpl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1619, null, "This repo provide rule groups for Little Snitch based on unified host list to block ads, malware, fake news and porn", null, null, null, "https://github.com/naveednajam/Little-Snitch---Rule-Groups", "https://github.com/naveednajam/Little-Snitch---Rule-Groups/issues", (short)4, "Unified Hosts + Gambling + Social (Little Snitch)", null, null, (short)18, "https://raw.githubusercontent.com/naveednajam/Little-Snitch---Rule-Groups/master/unified_hosts_gambling-social/sb_unified_hosts_gambling-social.lsrules", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)18, null, "Remove filler, upsells, click bait and other low or negative-value annoyances.", "https://github.com/taylr/linkedinsanity", null, null, "https://github.com/taylr/linkedinsanity", "https://github.com/taylr/linkedinsanity/issues", (short)2, "Linked Insanity Annoyance Rules", null, new DateTime(2014, 6, 16, 23, 37, 58, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2018, 11, 19, 14, 2, 50, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/taylr/linkedinsanity/master/linkedinsanity.txt", "https://gitcdn.xyz/repo/taylr/linkedinsanity/master/linkedinsanity.txt", "https://rawcdn.githack.com/taylr/linkedinsanity/master/linkedinsanity.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)233, null, "Block only sidebar annoyances.", "https://facebook.adblockplus.me/", "https://adblockplus.org/en/donate", "subscriptionlist@adblockplus.org", null, "https://facebook.adblockplus.me/", null, (short)5, "Facebook Sidebar Blocker", null, null, (short)3, new DateTime(2019, 4, 8, 8, 52, 10, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/fb_annoyances_sidebar.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)13, null, "A merged list of Liste AR, Liste FR, and EasyList", null, null, null, null, null, (short)6, "Liste AR + Liste FR + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 16, 32, 11, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/liste_ar+liste_fr+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)901, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bahamas", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 56, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Bahamas.txt", null, null },
                    { (short)900, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Azerbaijan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 53, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Azerbaijan.txt", null, null },
                    { (short)899, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Austria", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Austria.txt", null, null },
                    { (short)898, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Australia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Australia.txt", null, null },
                    { (short)897, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Ascension Island", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/AscensionIsland.txt", null, null },
                    { (short)896, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Armenia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Armenia.txt", null, null },
                    { (short)895, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Argentina", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Argentina.txt", null, null },
                    { (short)894, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Antigua And Barbuda", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 35, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/AntiguaAndBarbuda.txt", null, null },
                    { (short)893, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Antarctica", null, new DateTime(2018, 3, 1, 0, 40, 19, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Antarctica.txt", null, null },
                    { (short)892, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Anguilla", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 31, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Anguilla.txt", null, null },
                    { (short)891, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Angola", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 28, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Angola.txt", null, null },
                    { (short)902, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bahrain", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Bahrain.txt", null, null },
                    { (short)890, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Andorra", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 25, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Andorra.txt", null, null },
                    { (short)888, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Algeria", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 19, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Algeria.txt", null, null },
                    { (short)887, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Albania", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Albania.txt", null, null },
                    { (short)886, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Åland", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Aland.txt", null, null },
                    { (short)885, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Afghanistan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 12, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Afghanistan.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)858, null, "A block list of malicious URLs that are being used for malware distribution. Smaller than the official version with de-duplicated malware domains, while including full malicious URls of popular domains.", "https://gitlab.com/curben/urlhaus-filter/blob/master/README.md", null, null, "https://gitlab.com/curben/urlhaus-filter", "https://gitlab.com/curben/urlhaus-filter/issues", (short)28, "urlhaus-filter", null, null, (short)2, new DateTime(2019, 4, 5, 22, 9, 10, 0, DateTimeKind.Unspecified), "https://gitlab.com/curben/urlhaus-filter/raw/master/urlhaus-filter.txt", "https://cdn.statically.io/gl/curben/urlhaus-filter/raw/master/urlhaus-filter.txt", "https://glcdn.githack.com/curben/urlhaus-filter/raw/master/urlhaus-filter.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)826, null, null, null, null, null, "https://github.com/w13d/adblockListABP-PiHole", "https://github.com/w13d/adblockListABP-PiHole/issues", (short)5, "Spotify AdBlocking for pihole", null, new DateTime(2018, 9, 17, 1, 28, 44, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 9, 21, 3, 30, 59, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/w13d/adblockListABP-PiHole/master/Spotify.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)812, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Mini (Domains)", null, null, (short)2, new DateTime(2019, 4, 16, 2, 52, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/badmojr/1Hosts/master/mini/domains.txt", null, null },
                    { (short)810, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Complete (Domains)", null, null, (short)2, new DateTime(2019, 4, 16, 2, 23, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/badmojr/1Hosts/master/complete/domains.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)713, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "AdGuard DNS (Domains)", null, new DateTime(2018, 6, 23, 1, 33, 18, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 16, 16, 1, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/adguard.txt", null, null },
                    { (short)712, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "Spotify Ad Domains", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 6, 23, 1, 32, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/spotifyads.txt", null, null },
                    { (short)711, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "Unchecky Ads (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 16, 16, 0, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/uncheckyads.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)889, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - American Samoa", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 15, 22, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/AmericanSamoa.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)710, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "Tyzbit (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/tyzbit.txt", "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Tyzbit.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)903, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bangladesh", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 16, 0, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Bangladesh.txt", null, null },
                    { (short)905, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Belgium", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Belgium.txt", null, null },
                    { (short)929, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Cocos Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/CocosKeelingIslands.txt", null, null },
                    { (short)928, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Christmas Island", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 12, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/ChristmasIsland.txt", null, null },
                    { (short)927, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - China, Peoples Republic of", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/ChinaPeoplesRepublicof.txt", null, null },
                    { (short)926, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Chile", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Chile.txt", null, null },
                    { (short)925, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Central African Republic", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/CentralAfricanRepublic.txt", null, null },
                    { (short)924, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Cayman Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/CaymanIslands.txt", null, null },
                    { (short)923, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Catalonia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 16, 53, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Catalonia.txt", null, null },
                    { (short)922, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Cape Verde", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/CapeVerde.txt", null, null },
                    { (short)921, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Canada", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Canada.txt", null, null },
                    { (short)920, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Cameroon", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Cameroon.txt", null, null },
                    { (short)919, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Cambodia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Cambodia.txt", null, null },
                    { (short)904, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Belarus", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Belarus.txt", null, null },
                    { (short)918, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Burundi", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 11, 0, 38, 56, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Burundi.txt", null, null },
                    { (short)916, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bulgaria", null, new DateTime(2018, 4, 28, 22, 50, 18, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Bulgaria.txt", null, null },
                    { (short)915, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - British Virgin Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 16, 37, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/BritishVirginIslands.txt", null, null },
                    { (short)914, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - British Indian Ocean Territory", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 8, 0, 38, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/BritishIndianOceanTerritory.txt", null, null },
                    { (short)913, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Brazil", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 27, 0, 40, 34, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Brazil.txt", null, null },
                    { (short)912, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Botswana", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Botswana.txt", null, null },
                    { (short)911, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bosnia And Herzegovina", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/BosniaAndHerzegovina.txt", null, null },
                    { (short)910, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bonaire", null, new DateTime(2018, 4, 28, 22, 50, 18, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Bonaire.txt", null, null },
                    { (short)909, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bolivia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 16, 16, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Bolivia.txt", null, null },
                    { (short)908, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bhutan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 16, 13, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Bhutan.txt", null, null },
                    { (short)907, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Bermuda", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Bermuda.txt", null, null },
                    { (short)906, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Belize", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 30, 0, 41, 49, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Belize.txt", null, null },
                    { (short)917, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Burkina Faso", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/BurkinaFaso.txt", null, null },
                    { (short)930, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Colombia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 27, 0, 40, 34, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Colombia.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)709, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "add.Spam (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 16, 16, 0, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/add-spam.txt", null, null },
                    { (short)707, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "add.Dead (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 16, 8, 0, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/add-dead.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)448, null, "Malware Domains Block List from quidsup.net", null, "https://quidsup.net/donate/", null, "https://quidsup.net/notrack/blocklist.php", "https://gitlab.com/quidsup/notrack-blocklists/issues", (short)4, "NoTrack Malware Blocklist", null, "https://quidsup.net/notrack/report.php?view=submit", (short)2, new DateTime(2019, 4, 15, 8, 46, 11, 0, DateTimeKind.Unspecified), "https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt", null, null },
                    { (short)447, null, "Tracker Domains Block List from quidsup.net", null, "https://quidsup.net/donate/", null, "https://quidsup.net/notrack/blocklist.php", "https://gitlab.com/quidsup/notrack-blocklists/issues", (short)4, "NoTrack Tracker Blocklist", null, "https://quidsup.net/notrack/report.php?view=submit", (short)2, new DateTime(2019, 4, 15, 8, 40, 12, 0, DateTimeKind.Unspecified), "https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt", null, null },
                    { (short)446, null, null, null, null, null, null, null, (short)2, "Prigent Ads", null, null, (short)2, new DateTime(2019, 4, 15, 8, 34, 9, 0, DateTimeKind.Unspecified), "https://v.firebog.net/hosts/Prigent-Ads.txt", null, null },
                    { (short)445, null, null, null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=HU4EDJZP2S9QA", null, "https://firebog.net/", null, (short)2, "EasyPrivacy Domains", null, null, (short)2, new DateTime(2019, 4, 15, 8, 28, 9, 0, DateTimeKind.Unspecified), "https://v.firebog.net/hosts/Easyprivacy.txt", null, null },
                    { (short)444, null, null, null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=HU4EDJZP2S9QA", null, "https://firebog.net/", null, (short)2, "EasyList (Hosts)", null, null, (short)2, new DateTime(2019, 4, 15, 8, 22, 11, 0, DateTimeKind.Unspecified), "https://v.firebog.net/hosts/Easylist.txt", null, null },
                    { (short)443, null, "To block out ads, mostly tracking services, to prevent data from being collected.", "https://www.kowabit.de/blcklst/", "https://www.kowabit.de/willkommen/finanzierung-von-kowabit/", null, "https://www.kowabit.de/blcklst/", null, (short)20, "Kowabit - bl*cklist of death", null, null, (short)2, new DateTime(2019, 1, 27, 19, 45, 10, 0, DateTimeKind.Unspecified), "https://blocklist.kowabit.de/list.txt", "https://v.firebog.net/hosts/Kowabit.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)442, null, null, null, null, null, null, null, (short)2, "Bill Stearns' Hosts", null, null, (short)2, "https://v.firebog.net/hosts/BillStearns.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)441, null, "Personal Blocklist by WaLLy3K (https://firebog.net/about).  Content added to this list has been manually verified, and usually updated every two weeks.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=HU4EDJZP2S9QA", null, "https://firebog.net/", null, (short)13, "WaLLy3K Blocklist", null, null, (short)2, new DateTime(2019, 4, 15, 8, 10, 11, 0, DateTimeKind.Unspecified), "https://v.firebog.net/hosts/static/w3kbl.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)440, null, null, null, null, "mail@perflyst.de", null, "https://github.com/Perflyst/PiHoleBlocklist", "https://github.com/Perflyst/PiHoleBlocklist/issues", (short)2, "PiHole Blocklist Android Tracking", null, new DateTime(2018, 3, 17, 13, 29, 1, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 4, 16, 32, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/android-tracking.txt", null, null },
                    { (short)439, null, null, null, null, "mail@perflyst.de", null, "https://github.com/Perflyst/PiHoleBlocklist", "https://github.com/Perflyst/PiHoleBlocklist/issues", (short)2, "PiHole Blocklist SmartTV", null, new DateTime(2018, 2, 27, 13, 10, 1, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 14, 7, 34, 50, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV.txt", null, null },
                    { (short)438, null, null, null, null, "mail@perflyst.de", null, "https://github.com/Perflyst/PiHoleBlocklist", "https://github.com/Perflyst/PiHoleBlocklist/issues", (short)2, "PiHole Blocklist Session Replay", null, new DateTime(2018, 3, 17, 13, 20, 17, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 3, 17, 13, 20, 17, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SessionReplay.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)463, null, null, null, null, null, null, null, (short)2, "Prigent Malware", null, null, (short)2, new DateTime(2019, 4, 15, 9, 58, 10, 0, DateTimeKind.Unspecified), "https://v.firebog.net/hosts/Prigent-Malware.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)428, null, null, null, null, null, "https://www.threatcrowd.org/", null, (short)5, "ThreatCrowd Domains", null, null, (short)2, "https://www.threatcrowd.org/feeds/domains.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)426, null, "Master Feed of known, active and non-sinkholed C&Cs IP addresses", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=YMFSMT9MW2Y6Q", null, "https://osint.bambenekconsulting.com/feeds/", null, (short)21, "OSINT C2 IP Feed", null, null, (short)2, new DateTime(2019, 4, 15, 6, 56, 10, 0, DateTimeKind.Unspecified), "https://osint.bambenekconsulting.com/feeds/c2-ipmasterlist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)425, null, "Self-updating PHP library which blocks hundreds of spammy domains from ruining your website statistics", "https://github.com/nabble/semalt-blocker#self-updating-php-library-which-blocks-hundreds-of-spammy-domains-from-ruining-your-website-statistics", null, null, "https://github.com/nabble/semalt-blocker", "https://github.com/nabble/semalt-blocker/issues", (short)2, "Semalt Blocked Domains", null, new DateTime(2014, 8, 8, 9, 1, 49, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2016, 12, 1, 10, 14, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/nabble/semalt-blocker/master/domains/blocked", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)424, null, null, null, null, null, "https://gist.github.com/MOxFIVE", null, (short)5, "Personal Blocklist (MOxFIVE)", null, null, (short)2, "https://gist.githubusercontent.com/MOxFIVE/4730cac715ef406bd8eac7b29335be4a/raw/d21fa08e97963edde372d0d3e50703c783c9c32e/Personal%2520Blocklist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)422, null, "List of shit websites for Google Personal Blocklist or Google Hit Hider by Domain", "https://github.com/ligyxy/Blocklist#blocklist", null, null, "https://github.com/ligyxy/Blocklist", "https://github.com/ligyxy/Blocklist/issues", (short)2, "Blocklist (ligyxy)", null, new DateTime(2016, 9, 24, 4, 19, 44, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 10, 3, 41, 32, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ligyxy/Blocklist/master/BLOCKLIST", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)420, null, null, null, "https://www.joewein.net/spam/blacklist.htm", null, "https://www.joewein.net/spam/index.htm", null, (short)5, "JoeWein Email Sender Blacklist", null, null, (short)2, new DateTime(2019, 4, 15, 4, 7, 12, 0, DateTimeKind.Unspecified), "https://www.joewein.net/dl/bl/from-bl.txt", null, null },
                    { (short)419, null, "Spammers get paid by businesses whose websites they advertise. We refuse to accept spam from any of following domains or advertising any of these domains, as we don't want to buy from spammers. We publish this list for informational purposes only.", "https://www.joewein.net/spam/blacklist.htm", "https://www.joewein.net/spam/blacklist.htm", null, "https://www.joewein.net/spam/index.htm", null, (short)5, "JoeWein Domain Blacklist Base", null, null, (short)2, new DateTime(2019, 4, 15, 3, 5, 12, 0, DateTimeKind.Unspecified), "https://www.joewein.net/dl/bl/dom-bl-base.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)418, null, null, "https://github.com/desbma/referer-spam-domains-blacklist#referer-spam-blacklist", null, null, "https://github.com/desbma/referer-spam-domains-blacklist", "https://github.com/desbma/referer-spam-domains-blacklist/issues", (short)14, "Referer Spam Blacklist (desbma)", null, new DateTime(2015, 4, 19, 11, 34, 53, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 12, 22, 30, 49, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/desbma/referer-spam-domains-blacklist/master/spammers.txt", null, null },
                    { (short)417, null, "This is a community-contributed list of referrer spammers maintained by Matomo, the leading open source web analytics platform.", null, null, null, "https://github.com/matomo-org/referrer-spam-blacklist", "https://github.com/matomo-org/referrer-spam-blacklist/issues", (short)20, "Referrer Spam Blacklist (Matomo)", null, new DateTime(2015, 4, 19, 11, 34, 53, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 12, 16, 32, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/matomo-org/referrer-spam-blacklist/master/spammers.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)416, null, null, null, null, null, "https://gist.github.com/BBcan177", null, (short)5, "EasyList Germany (Domains)", null, null, (short)2, "https://gist.githubusercontent.com/BBcan177/2a9fc2548c3c5a5e2dc86e580b5795d2/raw/2f5c90ffb3bd02199ace1b16a0bd9f53b29f0879/EasyList_DE", null, null },
                    { (short)414, null, null, null, null, null, "https://gist.github.com/BBcan177", null, (short)5, "pfBlockerNG - MS-2", null, null, (short)2, "https://gist.githubusercontent.com/BBcan177/4a8bf37c131be4803cb2/raw/343ff780e15205b4dd0de37c86af34cfb26b2fbe/MS-2", null, null },
                    { (short)413, null, "The following is the list of sites from Alexa top 1 million which embed scripts that extract email addresses from the browsers' built-in login (password) managers.", null, null, null, "https://gist.github.com/BBcan177", null, (short)5, "pfBlockerNG - MS-4", null, null, (short)2, "https://gist.githubusercontent.com/BBcan177/b6df57cef74e28d90acf1eec93d62d3b/raw/f0996cf5248657ada2adb396f3636be8716b99eb/MS-4", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)427, null, "The phishing bad sites is updated using data from www.phishtank.com once per day. The domains included are known to be fraudulent and generally dangerous.", null, null, null, "http://phishing.mailscanner.info/", null, (short)5, "Phishing Bad Sites", null, null, (short)2, new DateTime(2018, 9, 18, 13, 28, 51, 0, DateTimeKind.Unspecified), "http://phishing.mailscanner.info/phishing.bad.sites.conf", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)708, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "add.Risk (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 12, 16, 0, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/add-risk.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)465, null, null, null, null, null, null, null, (short)2, "Shalla Malware", null, null, (short)2, new DateTime(2019, 3, 10, 11, 9, 9, 0, DateTimeKind.Unspecified), "https://v.firebog.net/hosts/Shalla-mal.txt", "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Shalla-Malicious.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)518, null, "This list consists of Low Level Sensitivity website URLs", "https://www.dshield.org/feeds/suspiciousdomains_Low.txt", null, "info@dshield.org", null, "https://dshield.org/suspicious_domains.html", null, (short)25, "DShield.org Suspicious Domain List - Low", null, null, (short)2, new DateTime(2019, 4, 8, 15, 2, 9, 0, DateTimeKind.Unspecified), "https://www.dshield.org/feeds/suspiciousdomains_Low.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)706, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "add.2o7Net (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 10, 20, 16, 0, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/add-2o7net.txt", null, null },
                    { (short)705, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "Badd Boyz Hosts (Domains)", null, new DateTime(2018, 2, 25, 22, 37, 5, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 6, 3, 8, 0, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/coinblocker.txt", null, null },
                    { (short)704, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "Steven Black's Hosts (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 15, 16, 0, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/steven-blacks-ad-hoc-list.txt", null, null },
                    { (short)703, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "KAD Hosts File (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 16, 0, 0, 52, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/kadhosts.txt", null, null },
                    { (short)700, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "EasyList (Domains)", null, new DateTime(2018, 6, 23, 1, 33, 18, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 16, 16, 1, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/easylist.txt", null, null },
                    { (short)699, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "NoCoin (Domains)", null, new DateTime(2018, 2, 25, 0, 22, 29, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 12, 16, 0, 32, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/nocoin.txt", null, null },
                    { (short)698, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "Malware Domain List (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 22, 0, 0, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/malware-domain-list.txt", null, null },
                    { (short)697, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "MVPS Hosts (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 9, 0, 0, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/mvps-hosts-file.txt", null, null },
                    { (short)696, null, null, null, null, "me@austinheap.com", null, "https://github.com/austinheap/sophos-xg-block-lists", null, (short)2, "Dan Pollock's Hosts (Domains)", null, new DateTime(2017, 2, 23, 5, 59, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 15, 0, 0, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/austinheap/sophos-xg-block-lists/master/dan-pollock-someonewhocares-org.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)694, null, null, null, "https://www.paypal.me/mitchellkrog/", "mitchellkrog@gmail.com", null, "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist", "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist/issues", (short)2, "Ultimate Hosts Blacklist - Domains", null, null, (short)2, new DateTime(2019, 4, 19, 1, 6, 1, 0, DateTimeKind.Unspecified), "https://hosts.ubuntu101.co.za/domains.list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)692, null, "This repository contains a list of all web sites I come across that are hacked with malware, ransomware or trojans. Most site owners are unaware their sites have been hacked and are being used to plant malware.", "https://github.com/mitchellkrogza/The-Big-List-of-Hacked-Malware-Web-Sites#the-big-list-of-hacked-malware-web-sites", "https://www.paypal.me/mitchellkrog/", "mitchellkrog@gmail.com", null, "https://github.com/mitchellkrogza/The-Big-List-of-Hacked-Malware-Web-Sites", "https://github.com/mitchellkrogza/The-Big-List-of-Hacked-Malware-Web-Sites/issues", (short)2, "The Big List of Hacked Malware Web Sites", null, new DateTime(2017, 9, 20, 13, 22, 22, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 16, 11, 54, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/The-Big-List-of-Hacked-Malware-Web-Sites/master/hacked-domains.list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)516, null, "BarbBlock is a content blocking list with standalone browser extensions for Chrome and Firefox. It blacklists sites which have used DMCA takedowns to force removal from other content blocking lists. Such takedowns are categorically invalid, but they can be effective at intimidating small open-source projects into compliance.", "https://github.com/paulgb/BarbBlock/blob/master/README.md", null, null, "https://ssl.bblck.me/", "https://github.com/paulgb/BarbBlock/issues", (short)2, "BarbBlock Domains", null, new DateTime(2017, 8, 14, 9, 11, 43, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 8, 50, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/paulgb/BarbBlock/master/blacklists/domain-list.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)684, null, null, null, null, "support@novirusthanks.com", null, "http://www.urlvir.com/", null, (short)5, "URLVir Active Malicious Hosts", null, null, (short)2, new DateTime(2019, 4, 15, 5, 43, 12, 0, DateTimeKind.Unspecified), "http://www.urlvir.com/export-hosts/", null, null },
                    { (short)674, null, null, null, "https://www.patreon.com/blocklist", "pgl@yoyo.org", null, "https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (Domains)", "https://pgl.yoyo.org/as/policy.php", null, (short)2, new DateTime(2019, 4, 13, 10, 31, 11, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=nohtml&showintro=1&mimetype=plaintext", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)632, null, "Samsung SmartTV domains (Will block the \"Smart\" aspects of devices)", "https://v.firebog.net/hosts/static/SamsungSmart.txt", null, null, null, null, (short)5, "Samsung SmartTV Domains", null, null, (short)2, "https://v.firebog.net/hosts/static/SamsungSmart.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)631, null, null, null, null, null, null, null, (short)5, "Prigent Phishing", null, null, (short)2, new DateTime(2019, 4, 14, 13, 48, 11, 0, DateTimeKind.Unspecified), "https://v.firebog.net/hosts/Prigent-Phishing.txt", "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Prigent-Phishing.txt", null },
                    { (short)630, null, null, null, null, null, null, null, (short)5, "AdGuard Simplified Domain Names Filter (Domains)", null, null, (short)2, new DateTime(2019, 4, 14, 13, 38, 10, 0, DateTimeKind.Unspecified), "https://v.firebog.net/hosts/AdguardDNS.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)618, null, null, "https://bitbucket.org/ethanr/dns-blacklists/raw/8575c9f96e5b4a1308f2f12394abd86d0927a4a0/bad_lists/Mandiant_APT1_Report_Appendix_D.txt", null, null, null, null, (short)5, "Mandiant APT1 Report Appendix D", null, null, (short)2, "https://bitbucket.org/ethanr/dns-blacklists/raw/8575c9f96e5b4a1308f2f12394abd86d0927a4a0/bad_lists/Mandiant_APT1_Report_Appendix_D.txt", "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Mandiant-APT1-Report.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)526, null, "This list is a slightly edited list from Université Toulouse 1 Capitole.", "https://github.com/chadmayfield/my-pihole-blocklists", null, null, "https://github.com/chadmayfield/my-pihole-blocklists", "https://github.com/chadmayfield/my-pihole-blocklists/issues", (short)4, "Chad Mayfield's Porn List Heavy", null, new DateTime(2017, 5, 6, 16, 37, 22, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 22, 33, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/chadmayfield/my-pihole-blocklists/master/lists/pi_blocklist_porn_all.list", "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Chad-Mayfield-Porn-Blocklist-Heavy.txt", null },
                    { (short)525, null, "This list is a correlated list to only block porn sites that appear on Alex'a top 1m site list.", "https://github.com/chadmayfield/my-pihole-blocklists", null, null, "https://github.com/chadmayfield/my-pihole-blocklists", "https://github.com/chadmayfield/my-pihole-blocklists/issues", (short)4, "Chad Mayfield's Porn List Light", null, new DateTime(2017, 5, 6, 16, 37, 22, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 22, 33, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/chadmayfield/my-pihole-blocklists/master/lists/pi_blocklist_porn_top1m.list", "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Chad-Mayfield-Porn-Blocklist-Light.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)522, null, "If you want to specifically block service from Microsoft with respect to Windows 10 , then you use this list.", "https://www.kowabit.de/blcklst/", "https://www.kowabit.de/willkommen/finanzierung-von-kowabit/", null, "https://www.kowabit.de/blcklst/", null, (short)20, "Kowabit - blocklist of death for Windows 10", null, null, (short)2, new DateTime(2019, 1, 14, 9, 39, 10, 0, DateTimeKind.Unspecified), "https://blocklist.kowabit.de/fritzboxliste.txt", null, null },
                    { (short)521, null, "To block out ads, mostly tracking services, to prevent data from being collected.", "https://www.kowabit.de/blcklst/", "https://www.kowabit.de/willkommen/finanzierung-von-kowabit/", null, "https://www.kowabit.de/blcklst/", null, (short)20, "Kowabit - bl*cklist of death - List for Fritz!Box routers", null, null, (short)2, new DateTime(2019, 1, 14, 9, 19, 10, 0, DateTimeKind.Unspecified), "https://blocklist.kowabit.de/fritzboxliste.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)520, null, "This list consists of High Level Sensitivity website URLs", "https://www.dshield.org/feeds/suspiciousdomains_High.txt", null, "info@dshield.org", null, "https://dshield.org/suspicious_domains.html", null, (short)25, "DShield.org Suspicious Domain List - High", null, null, (short)2, new DateTime(2019, 4, 8, 15, 14, 14, 0, DateTimeKind.Unspecified), "https://www.dshield.org/feeds/suspiciousdomains_High.txt", null, null },
                    { (short)519, null, "This list consists of Medium Level Sensitivity website URLs", "https://www.dshield.org/feeds/suspiciousdomains_Medium.txt", null, "info@dshield.org", null, "https://dshield.org/suspicious_domains.html", null, (short)25, "DShield.org Suspicious Domain List - Medium", null, null, (short)2, new DateTime(2019, 4, 8, 15, 8, 11, 0, DateTimeKind.Unspecified), "https://www.dshield.org/feeds/suspiciousdomains_Medium.txt", "https://isc.sans.edu/feeds/suspiciousdomains_Medium.txt", null },
                    { (short)680, null, "This is a slimmer version of \"Dandelion Sprout's Nordic Filters\", intended for users of software tools that doesn't support adblocker syntaxes. It chiefly targets scams and malware on Norwegian or Danish sites, as well as some advert and tracking servers.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (Domains)", null, null, (short)2, new DateTime(2019, 2, 23, 15, 45, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/DandelionSproutsNorskeFiltreDomains.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/DandelionSproutsNorskeFiltreDomains.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/DandelionSproutsNorskeFiltreDomains.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)931, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Congo Kinshasa", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 21, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/CongoKinshasa.txt", null, null },
                    { (short)932, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Cook Islands", null, new DateTime(2017, 9, 1, 5, 7, 38, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 24, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/CookIslands.txt", null, null },
                    { (short)933, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Costa Rica", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 27, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/CostaRica.txt", null, null },
                    { (short)1014, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Montserrat", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Montserrat.txt", null, null },
                    { (short)1013, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Montenegro", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Montenegro.txt", null, null },
                    { (short)1012, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Mongolia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 21, 11, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Mongolia.txt", null, null },
                    { (short)1011, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Moldova", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Moldova.txt", null, null },
                    { (short)1010, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Mexico", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Mexico.txt", null, null },
                    { (short)1009, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Mayotte", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 13, 0, 37, 35, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Mayotte.txt", null, null },
                    { (short)1008, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Mauritius", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Mauritius.txt", null, null },
                    { (short)1007, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Mauritania", null, new DateTime(2017, 9, 1, 5, 7, 38, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Mauritania.txt", null, null },
                    { (short)1006, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Malta", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Malta.txt", null, null },
                    { (short)1005, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Mali", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Mali.txt", null, null },
                    { (short)1004, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Malaysia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Malaysia.txt", null, null },
                    { (short)1015, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Morocco", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 21, 20, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Morocco.txt", null, null },
                    { (short)1003, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Malawi", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 20, 48, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Malawi.txt", null, null },
                    { (short)1001, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - North Macedonia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Macedonia.txt", null, null },
                    { (short)1000, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Macau", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 20, 41, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Macau.txt", null, null },
                    { (short)999, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Luxembourg", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Luxembourg.txt", null, null },
                    { (short)998, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Lithuania", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Lithuania.txt", null, null },
                    { (short)997, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Liechtenstein", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Liechtenstein.txt", null, null },
                    { (short)996, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Libya", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 20, 29, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Libya.txt", null, null },
                    { (short)995, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Lebanon", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 20, 26, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Lebanon.txt", null, null },
                    { (short)994, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Latvia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Latvia.txt", null, null },
                    { (short)993, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Laos", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Laos.txt", null, null },
                    { (short)992, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Kyrgyzstan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 20, 17, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Kyrgyzstan.txt", null, null },
                    { (short)991, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Kuwait", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 20, 14, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Kuwait.txt", null, null },
                    { (short)1002, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Madagascar", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Madagascar.txt", null, null },
                    { (short)990, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Kiribati", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Kiribati.txt", null, null },
                    { (short)1016, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Mozambique", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 21, 23, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Mozambique.txt", null, null },
                    { (short)1018, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Nauru", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Nauru.txt", null, null },
                    { (short)1042, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Qatar", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Qatar.txt", null, null },
                    { (short)1041, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Puerto Rico", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/PuertoRico.txt", null, null },
                    { (short)1040, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Portugal", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Portugal.txt", null, null },
                    { (short)1039, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Poland", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 27, 0, 40, 34, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Poland.txt", null, null },
                    { (short)1038, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Pitcairn Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 22, 22, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/PitcairnIslands.txt", null, null },
                    { (short)1037, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Philippines", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Philippines.txt", null, null },
                    { (short)1036, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Peru", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Peru.txt", null, null },
                    { (short)1035, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Paraguay", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 22, 13, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Paraguay.txt", null, null },
                    { (short)1034, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Panama", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 22, 10, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Panama.txt", null, null },
                    { (short)1033, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Palestine", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 22, 7, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Palestine.txt", null, null },
                    { (short)1032, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Palau", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 3, 0, 41, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Palau.txt", null, null },
                    { (short)1017, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Namibia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Namibia.txt", null, null },
                    { (short)1031, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Pakistan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 22, 1, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Pakistan.txt", null, null },
                    { (short)1029, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Norway", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Norway.txt", null, null },
                    { (short)1028, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Northern Mariana Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/NorthernMarianaIslands.txt", null, null },
                    { (short)1027, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Norfolk Island", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 21, 51, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/NorfolkIsland.txt", null, null },
                    { (short)1026, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Niue", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Niue.txt", null, null },
                    { (short)1025, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Nigeria", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Nigeria.txt", null, null },
                    { (short)1024, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Niger", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 21, 42, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Niger.txt", null, null },
                    { (short)1023, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Nicaragua", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Nicaragua.txt", null, null },
                    { (short)1022, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - New Zealand", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/NewZealand.txt", null, null },
                    { (short)1021, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - New Caledonia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/NewCaledonia.txt", null, null },
                    { (short)1020, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Netherlands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Netherlands.txt", null, null },
                    { (short)1019, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Nepal", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 21, 28, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Nepal.txt", null, null },
                    { (short)1030, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Oman", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 21, 58, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Oman.txt", null, null },
                    { (short)989, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Kenya", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Kenya.txt", null, null },
                    { (short)988, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Kazakhstan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 31, 0, 42, 45, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Kazakhstan.txt", null, null },
                    { (short)987, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Jordan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 20, 4, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Jordan.txt", null, null },
                    { (short)957, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Gaza Strip", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 18, 36, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/GazaStrip.txt", null, null },
                    { (short)956, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Gambia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 18, 33, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Gambia.txt", null, null },
                    { (short)955, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Gabonese Republic", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/GaboneseRepublic.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)954, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - French Southern And Antarctic Lands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 18, 27, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/FrenchSouthernAndAntarcticLands.txt", null, null },
                    { (short)953, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - French Polynesia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/FrenchPolynesia.txt", null, null },
                    { (short)952, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - France", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 30, 0, 41, 49, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/France.txt", null, null },
                    { (short)951, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Finland", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Finland.txt", null, null },
                    { (short)950, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Fiji", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 18, 14, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Fiji.txt", null, null },
                    { (short)949, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Federated States Of Micronesia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/FederatedStatesOfMicronesia.txt", null, null },
                    { (short)948, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Faroe Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/FaeroeIslands.txt", null, null },
                    { (short)947, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - European Union", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/EuropeanUnion.txt", null, null },
                    { (short)958, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Georgia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 18, 39, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Georgia.txt", null, null },
                    { (short)946, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Estonia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Estonia.txt", null, null },
                    { (short)944, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - El Salvador", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 58, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/ElSalvador.txt", null, null },
                    { (short)943, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Egypt", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Egypt.txt", null, null },
                    { (short)942, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Ecuador", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 52, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Ecuador.txt", null, null },
                    { (short)941, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Dominican Republic", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 49, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/DominicanRepublic.txt", null, null },
                    { (short)940, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Dominica", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Dominica.txt", null, null },
                    { (short)939, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Djibouti", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 45, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Djibouti.txt", null, null },
                    { (short)938, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Denmark", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Denmark.txt", null, null },
                    { (short)937, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Czech Republic", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/CzechRepublic.txt", null, null },
                    { (short)936, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Cyprus", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Cyprus.txt", null, null },
                    { (short)935, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Cuba", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 17, 33, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Cuba.txt", null, null },
                    { (short)934, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Croatia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Croatia.txt", null, null },
                    { (short)945, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Equatorial Guinea", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/EquatorialGuinea.txt", null, null },
                    { (short)959, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Germany", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 5, 0, 42, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Germany.txt", null, null },
                    { (short)960, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Ghana", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 18, 50, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Ghana.txt", null, null },
                    { (short)961, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Greece", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Greece.txt", null, null },
                    { (short)986, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Jersey", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 20, 1, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Jersey.txt", null, null },
                    { (short)985, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Japan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Japan.txt", null, null },
                    { (short)984, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Ivory Coast", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 19, 55, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/IvoryCoast.txt", null, null },
                    { (short)983, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Italy", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 5, 0, 42, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Italy.txt", null, null },
                    { (short)982, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Israel", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Israel.txt", null, null },
                    { (short)981, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Isle of Man", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/IsleofMan.txt", null, null },
                    { (short)980, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Ireland", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Ireland.txt", null, null },
                    { (short)979, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Iraq", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Iraq.txt", null, null },
                    { (short)978, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Iran", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 6, 0, 39, 32, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Iran.txt", null, null },
                    { (short)977, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Indonesia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Indonesia.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)14, null, "Liste AR is an EasyList affiliated filter list that specifically removes adverts on Arabic language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "liste.ar.adblock@gmail.com", "https://forums.lanik.us/viewforum.php?f=98", "https://code.google.com/archive/p/liste-ar-adblock/", null, (short)6, "Liste AR", null, null, (short)3, new DateTime(2019, 4, 8, 17, 36, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/Liste_AR.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)975, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Iceland", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Iceland.txt", null, null },
                    { (short)974, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Hungary", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Hungary.txt", null, null },
                    { (short)973, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Hong Kong", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/HongKong.txt", null, null },
                    { (short)972, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Honduras", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Honduras.txt", null, null },
                    { (short)971, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Heard Island And McDonald Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 19, 15, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/HeardIslandAndMcDonaldIslands.txt", null, null },
                    { (short)970, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Haiti", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 19, 12, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Haiti.txt", null, null },
                    { (short)969, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Guyana", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 19, 9, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Guyana.txt", null, null },
                    { (short)968, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Guinea", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Guinea.txt", null, null },
                    { (short)967, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Guernsey", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Guernsey.txt", null, null },
                    { (short)966, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Guatemala", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 19, 2, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Guatemala.txt", null, null },
                    { (short)965, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Guam", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Guam.txt", null, null },
                    { (short)964, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Guadeloupe", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Guadeloupe.txt", null, null },
                    { (short)963, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Grenada", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 18, 57, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Grenada.txt", null, null },
                    { (short)962, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Greenland", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Greenland.txt", null, null },
                    { (short)395, null, "This is a whitelist for DNSlock & PiHole which unblocks some of the popular domains which were wrongly listed and blocked by hosts file from various sources.", null, null, null, "https://github.com/raghavdua1995/DNSlock-PiHole-whitelist", "https://github.com/raghavdua1995/DNSlock-PiHole-whitelist/issues", (short)7, "DNSlock-PiHole-whitelist", null, new DateTime(2018, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 15, 4, 50, 51, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/raghavdua1995/DNSlock-PiHole-whitelist/master/whitelist.list", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)366, null, "Malicious, hijacked, ransomware, dangerous websites", "https://www.squidblacklist.org/downloads.html", null, "webmaster@squidblacklist.org", null, "https://www.squidblacklist.org/", null, (short)15, "Squid Blacklist Malicious", null, "https://www.squidblacklist.org/php/url_submission_form.php", (short)2, new DateTime(2019, 4, 14, 17, 55, 12, 0, DateTimeKind.Unspecified), "https://www.squidblacklist.org/downloads/dg-malicious.acl", null, null },
                    { (short)365, null, "Official Facebook domains", "https://www.squidblacklist.org/downloads.html", null, "webmaster@squidblacklist.org", null, "https://www.squidblacklist.org/", null, (short)15, "Squid Blacklist Facebook", null, "https://www.squidblacklist.org/php/url_submission_form.php", (short)2, new DateTime(2019, 4, 14, 17, 39, 12, 0, DateTimeKind.Unspecified), "https://www.squidblacklist.org/downloads/dg-facebook.acl", null, null },
                    { (short)364, null, "Advertisements and tracking", "https://www.squidblacklist.org/downloads.html", null, "webmaster@squidblacklist.org", null, "https://www.squidblacklist.org/", null, (short)15, "Squid Blacklist Ad Servers and Trackers", null, "https://www.squidblacklist.org/php/url_submission_form.php", (short)2, new DateTime(2019, 4, 14, 17, 23, 13, 0, DateTimeKind.Unspecified), "https://www.squidblacklist.org/downloads/dg-ads.acl", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)347, null, "Polish hosts file for use in Pi-hole", null, "https://patronite.pl/polskiefiltry", "errors@certyficate.it", null, "https://www.certyficate.it/", "https://github.com/MajkiIT/polish-ads-filter/issues", (short)9, "Polish Filters for Pi-hole", null, new DateTime(2017, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://www.certyficate.it/kontakt/", (short)1, new DateTime(2019, 4, 12, 1, 3, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MajkiIT/polish-ads-filter/master/polish-pihole-filters/hostfile.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)339, null, "Hosts file to block ads on Chinese and some international sites.", null, null, null, "https://github.com/Lerist/Go-Hosts", "https://github.com/Lerist/Go-Hosts/issues", (short)2, "Go Hosts AD", null, new DateTime(2017, 3, 11, 21, 4, 46, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2017, 3, 11, 21, 4, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Lerist/Go-Hosts/master/hosts-ad", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)338, null, "Useful from any site It is a sharp meta-analysis that was born as a result of brushing up, collecting such files, eliminating all error syntax, saving waste, etc. It is a powerful file to prevent uprooting affiliates and magical advertisements.", "https://cosmonote.blogspot.com/2013/07/adaway-hosts-adfree-windows7-windows8.html", null, null, "https://cosmonote.blogspot.com/2013/07/adaway-hosts-adfree-windows7-windows8.html", null, (short)5, "Japan Hosts Ultimate", null, null, (short)1, new DateTime(2014, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://sites.google.com/site/cosmonoteshosts/hosts_Ultimate.txt", null, null },
                    { (short)337, null, "Advertisements on smartphones are versatile, there are many things too complicated. Several HOSTSs have been released to Adaway since the beginning, but this file was further integrated, sorted, deleted duplicates, and polished.", "https://cosmonote.blogspot.com/2013/07/adaway-hosts-adfree-windows7-windows8.html", null, null, "https://cosmonote.blogspot.com/2013/07/adaway-hosts-adfree-windows7-windows8.html", null, (short)5, "HOSTS for Adaway for Japan", null, null, (short)1, new DateTime(2014, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://sites.google.com/site/cosmonoteshosts/hosts_for_Adaway.txt", null, null },
                    { (short)336, null, "Amazon, Yahoo, Facebook, Twitter, etc. It is a file created as a result of verifying and reducing connection failure as much as possible by making the filter mild. We also do not connect to tracking cookies or some malicious sites.", "https://cosmonote.blogspot.com/2013/07/adaway-hosts-adfree-windows7-windows8.html", null, null, "https://cosmonote.blogspot.com/2013/07/adaway-hosts-adfree-windows7-windows8.html", null, (short)5, "HOSTS for Windows PC for Japan", null, null, (short)1, new DateTime(2014, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://sites.google.com/site/cosmonoteshosts/hosts_for_Windows8.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)335, null, "Hosts for Adaway. Block mainly on advertisements for mobile.", "https://github.com/multiverse2011/adawaylist-jp/blob/master/README.md", null, null, "https://github.com/multiverse2011/adawaylist-jp", "https://github.com/multiverse2011/adawaylist-jp/issues", (short)5, "Adawaylist JP", null, new DateTime(2015, 8, 30, 12, 13, 43, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2017, 5, 23, 12, 11, 24, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/multiverse2011/adawaylist-jp/master/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)334, null, "Hosts file to avoid advertisement display on website.", "https://warui.intaa.net/adhosts/", null, null, "https://warui.intaa.net/adhosts/", null, (short)5, "Warui Hosts", null, "https://warui.intaa.net/adhosts/#fh5co-blog-section", (short)1, new DateTime(2019, 4, 13, 10, 0, 14, 0, DateTimeKind.Unspecified), "https://warui.intaa.net/adhosts/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)330, null, "To block domains that known as cost-per-action (AOC/CPA) services in Thailand, aim to prevent additional costs (post-paid plan) or balance deduction (pre-paid plan) that caused by some nasty ads that auto subscribe SMS/MMS/WAP services.", "https://github.com/kowith337/ThaiConsentHosts/blob/master/readme.md", null, null, "https://github.com/kowith337/ThaiConsentHosts", "https://github.com/kowith337/ThaiConsentHosts/issues", (short)13, "ThaiConsentHosts", null, new DateTime(2017, 5, 12, 13, 34, 17, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 9, 6, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/ThaiConsentHosts/master/ThaiConsentHosts.txt", "https://gitlab.com/kowith337/ThaiConsentHosts/raw/master/ThaiConsentHosts.txt", null },
                    { (short)329, null, "A hosts file for Chinese websites.", null, null, null, "https://github.com/vokins/yhosts", "https://github.com/vokins/yhosts/issues", (short)1, "Yhosts", null, new DateTime(2016, 1, 12, 12, 53, 17, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 2, 19, 59, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/vokins/yhosts/master/hosts.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)325, null, "Hosts file, filled with advertisers and other purveyors of worthless content.", "https://github.com/bjornstar/hosts", null, "bjorn@bjornstar.com", null, "https://github.com/bjornstar/hosts", "https://github.com/bjornstar/hosts/issues", (short)11, "Bjornstar's Hosts", null, new DateTime(2013, 8, 28, 15, 57, 44, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 11, 23, 8, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bjornstar/hosts/master/hosts", null, null },
                    { (short)320, null, "An expiremental hosts list for blocking YouTube video ads.", null, null, "anudeep@protonmail.com", null, "https://github.com/anudeepND/youtubeadsblacklist", "https://github.com/anudeepND/youtubeadsblacklist/issues", (short)14, "YouTube Video Ads Blocklist Hosts", null, new DateTime(2017, 10, 30, 21, 53, 22, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2017, 10, 30, 21, 53, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anudeepND/youtubeadsblacklist/master/hosts.txt", null, null },
                    { (short)349, null, "Polish hosts file for blocking scams (without controversial pages => https://github.com/PolishFiltersTeam/KAD/issues/649).", null, null, "polishjarvis@gmail.com", null, "https://kadantiscam.netlify.com/", "https://github.com/PolishFiltersTeam/KADhosts/issues", (short)8, "KADHosts (without controversies)", null, new DateTime(2017, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://kadantiscam.netlify.com/#contact", (short)1, new DateTime(2019, 4, 12, 18, 0, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts_without_controversies.txt", "https://gitcdn.xyz/repo/PolishFiltersTeam/KADhosts/master/KADhosts_without_controversies.txt", "https://rawcdn.githack.com/PolishFiltersTeam/KADhosts/master/KADhosts_without_controversies.txt" },
                    { (short)318, null, "Blocks crytocurrency miner hosts.", null, null, "anudeep@protonmail.com", null, "https://github.com/anudeepND/blacklist", "https://github.com/anudeepND/blacklist/issues", (short)2, "CoinMiner", null, new DateTime(2017, 11, 25, 9, 12, 55, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 2, 9, 8, 2, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anudeepND/blacklist/master/CoinMiner.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)316, null, "Ad servers list to block ads on Turkish websites.", "https://github.com/bkrucarci/turk-adlist", null, null, "https://github.com/bkrucarci/turk-adlist", "https://github.com/bkrucarci/turk-adlist/issues", (short)12, "Turk-Adlist", null, new DateTime(2016, 11, 19, 12, 25, 54, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 21, 22, 49, 56, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bkrucarci/turk-adlist/master/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)309, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Complete", null, null, (short)1, new DateTime(2019, 4, 13, 2, 55, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/badmojr/1Hosts/master/complete/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)308, null, "A hosts list to stop cryptomining in your browser.", null, null, null, "https://github.com/hoshsadiq/adblock-nocoin-list", "https://github.com/hoshsadiq/adblock-nocoin-list/issues", (short)2, "NoCoin Hosts", null, new DateTime(2017, 9, 24, 7, 21, 24, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 12, 13, 38, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/hoshsadiq/adblock-nocoin-list/master/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)282, null, "CAMELEON is a free system that helps Internet users or administrators to blocks web-adverts.", "http://sysctl.org/cameleon/", null, "philippe@sysctl.org", null, "http://sysctl.org/cameleon/", null, (short)5, "CAMELEON Hosts", null, null, (short)1, "http://sysctl.org/cameleon/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)276, null, "Use this file to prevent your computer from connecting to selected internet hosts. This is an easy and effective way to protect you from many types of spyware, reduces bandwidth use, blocks certain pop-up traps, prevents user tracking by way of \"web bugs\" embedded in spam, provides partial protection to IE from certain web-based exploits and blocks most advertising you would otherwise be subjected to on the internet.", "https://someonewhocares.org/hosts/", null, "hosts@someonewhocares.org", null, "https://someonewhocares.org/hosts/", null, (short)32, "Dan Pollock's Hosts (IPv4)", null, null, (short)1, new DateTime(2019, 4, 8, 18, 18, 11, 0, DateTimeKind.Unspecified), "https://someonewhocares.org/hosts/zero/hosts", "https://raw.githubusercontent.com/StevenBlack/hosts/master/data/someonewhocares.org/hosts", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)252, null, "Tentative hosts file for Italian sites created from Easylist Italy and ADB X Files.", "https://filtri-dns.ga/filtri.txt", null, null, "https://filtri-dns.ga/", null, (short)4, "Filtri DNS", null, null, (short)1, new DateTime(2019, 4, 8, 12, 59, 13, 0, DateTimeKind.Unspecified), "https://filtri-dns.ga/filtri.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)226, null, "Blocking mobile ad providers and some analytics providers.", "https://adaway.org/hosts.txt", "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=dominik%40sufficientlysecure.org&lc=US&item_name=AdAway%20Donation&no_note=0&no_shipping=1&currency_code=EUR", "https://forum.xda-developers.com/showthread.php?t=2190753", "https://adaway.org/", "https://github.com/AdAway/AdAway/issues", (short)16, "AdAway", null, null, (short)1, "https://adaway.org/hosts.txt", null, null },
                    { (short)225, null, "Blocks Japanese regional advertisements and trackers.", null, null, null, "https://logroid.blogspot.com/", null, (short)5, "AdAway Blocking Hosts File for Japan", null, null, (short)1, "https://sites.google.com/site/logroid/files/hosts.txt?attredirects=0", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)212, null, "2o7Net tracking sites based on BadHosts content.", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/FadeMind/hosts.extras", "https://github.com/FadeMind/hosts.extras/issues", (short)2, "add.2o7Net", null, new DateTime(2016, 9, 29, 13, 52, 34, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 10, 20, 11, 25, 50, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.2o7Net/hosts", "https://gitcdn.xyz/repo/FadeMind/hosts.extras/master/add.2o7Net/hosts", "https://gitcdn.link/repo/FadeMind/hosts.extras/master/add.2o7Net/hosts" },
                    { (short)192, null, "Dead sites based on BadHosts content.", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/FadeMind/hosts.extras", "https://github.com/FadeMind/hosts.extras/issues", (short)2, "add.Dead", null, new DateTime(2016, 9, 30, 11, 36, 6, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 16, 6, 43, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Dead/hosts", "https://gitcdn.xyz/repo/FadeMind/hosts.extras/master/add.Dead/hosts", "https://gitcdn.link/repo/FadeMind/hosts.extras/master/add.Dead/hosts" },
                    { (short)191, null, "Risk content sites based on BadHosts content.", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/FadeMind/hosts.extras", "https://github.com/FadeMind/hosts.extras/issues", (short)2, "add.Risk", null, new DateTime(2016, 9, 30, 11, 36, 6, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 2, 12, 10, 55, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts", "https://gitcdn.xyz/repo/FadeMind/hosts.extras/master/add.Risk/hosts", "https://gitcdn.link/repo/FadeMind/hosts.extras/master/add.Risk/hosts" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)317, null, "Host file to block ads, tracking and more!", "https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt", null, "anudeep@protonmail.com", null, "https://github.com/anudeepND/blacklist", "https://github.com/anudeepND/blacklist/issues", (short)2, "Adserving and Tracking Domains", null, new DateTime(2017, 7, 11, 7, 43, 35, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 11, 11, 21, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)190, null, "Spam sites based on BadHosts content.", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/FadeMind/hosts.extras", "https://github.com/FadeMind/hosts.extras/issues", (short)2, "add.Spam", null, new DateTime(2016, 9, 30, 11, 36, 6, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 10, 5, 13, 34, 57, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Spam/hosts", "https://gitcdn.xyz/repo/FadeMind/hosts.extras/master/add.Spam/hosts", "https://gitcdn.link/repo/FadeMind/hosts.extras/master/add.Spam/hosts" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)360, null, "A hostslist for administrators to prevent mining in networks", "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://www.amazon.de/hz/wishlist/ls/2DDEDPJU2996I?filter=unpurchased&language=en_GB&sort=priority&type=wishlist", "zerodot1@bk.ru", null, "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://gitlab.com/ZeroDot1/CoinBlockerLists/issues", (short)4, "CoinBlocker Hosts List", null, new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 14, 16, 8, 11, 0, DateTimeKind.Unspecified), "https://gitlab.com/ZeroDot1/CoinBlockerLists/raw/master/hosts", null, null },
                    { (short)362, null, "A hostslist to prevent browser mining only", "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://www.amazon.de/hz/wishlist/ls/2DDEDPJU2996I?filter=unpurchased&language=en_GB&sort=priority&type=wishlist", "zerodot1@bk.ru", null, "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://gitlab.com/ZeroDot1/CoinBlockerLists/issues", (short)4, "CoinBlocker Hosts List Browser", null, new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 14, 16, 45, 11, 0, DateTimeKind.Unspecified), "https://gitlab.com/ZeroDot1/CoinBlockerLists/raw/master/hosts_browser", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)491, null, "This is an endeavour to find all porn domains and compile them into a single hosts to allow for easy blocking of porn on your local machine or on a network.", null, null, null, "https://github.com/Clefspeare13/pornhosts", "https://github.com/Clefspeare13/pornhosts/issues", (short)2, "pornhosts", null, new DateTime(2016, 12, 18, 5, 38, 1, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 26, 18, 31, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Clefspeare13/pornhosts/master/0.0.0.0/hosts", null, null },
                    { (short)490, null, null, null, null, null, "https://github.com/CyanideBrother/anti-pr0n", "https://github.com/CyanideBrother/anti-pr0n/issues", (short)5, "Anti-pr0n hosts", null, new DateTime(2016, 5, 30, 20, 52, 2, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 2, 4, 13, 6, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/CyanideBrother/anti-pr0n/master/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)487, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Unified Protection", null, new DateTime(2018, 10, 8, 6, 24, 46, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/unified/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/unified/formats/hosts.txt", null },
                    { (short)486, "https://t.me/EnergizedProtection", "Energized Adware & Malware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Ultimate Protection", null, new DateTime(2018, 10, 8, 6, 24, 46, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/ultimate/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/ultimate/formats/hosts.txt", null },
                    { (short)485, "https://t.me/EnergizedProtection", "Energized Pornware Blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Protection", null, new DateTime(2018, 10, 8, 6, 24, 46, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/porn/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/porn/formats/hosts.txt", null },
                    { (short)484, "https://t.me/EnergizedProtection", "Energized Basic Protection. Basic Protection to keep you safe in a balanced way!", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Basic Protection", null, new DateTime(2018, 10, 12, 13, 30, 18, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/basic/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/basic/formats/hosts.txt", null },
                    { (short)483, "https://t.me/EnergizedProtection", "Energized Liteweight Protection. Best for Android/iOS Users.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Protection", null, new DateTime(2018, 10, 12, 13, 30, 18, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/blu/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/blu/formats/hosts.txt", null },
                    { (short)482, "https://t.me/EnergizedProtection", "Energized Blu Go. Another Lite Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Go Protection", null, new DateTime(2018, 10, 12, 13, 30, 18, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/bluGo/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/bluGo/formats/hosts.txt", null },
                    { (short)481, "https://t.me/EnergizedProtection", "True Lite Hosts from Energized. Only 1MB in Size.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Spark Protection", null, new DateTime(2018, 10, 12, 13, 30, 18, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/spark/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/spark/formats/hosts.txt", null },
                    { (short)478, null, "Blocks access to international Google domains.", null, null, "jmdugan_pubprofile_1522347973@biocontact.org", null, "https://github.com/jmdugan/blocklists", "https://github.com/jmdugan/blocklists/issues", (short)28, "jmdugan Blocklists Google International", null, new DateTime(2016, 5, 29, 0, 40, 45, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2016, 5, 29, 0, 40, 45, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jmdugan/blocklists/master/corporations/google/localized", null, null },
                    { (short)477, null, "Blocks access to utility Google domains.", null, null, "jmdugan_pubprofile_1522347973@biocontact.org", null, "https://github.com/jmdugan/blocklists", "https://github.com/jmdugan/blocklists/issues", (short)28, "jmdugan Blocklists Google Utility", null, new DateTime(2016, 5, 29, 0, 40, 45, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 4, 2, 18, 25, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jmdugan/blocklists/master/corporations/google/non_localized", null, null },
                    { (short)361, null, "An additional hostslist for administrators", "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://www.amazon.de/hz/wishlist/ls/2DDEDPJU2996I?filter=unpurchased&language=en_GB&sort=priority&type=wishlist", "zerodot1@bk.ru", null, "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://gitlab.com/ZeroDot1/CoinBlockerLists/issues", (short)4, "CoinBlocker Hosts List Optional", null, new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 14, 16, 24, 11, 0, DateTimeKind.Unspecified), "https://gitlab.com/ZeroDot1/CoinBlockerLists/raw/master/hosts_optional", null, null },
                    { (short)476, null, "Blocks access to Microsoft domains.", null, null, "jmdugan_pubprofile_1522347973@biocontact.org", null, "https://github.com/jmdugan/blocklists", "https://github.com/jmdugan/blocklists/issues", (short)28, "jmdugan Blocklists Microsoft", null, new DateTime(2016, 6, 7, 15, 37, 24, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2016, 6, 7, 15, 37, 24, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jmdugan/blocklists/master/corporations/microsoft/all", null, null },
                    { (short)474, null, "Blocks access to all Facebook domains.", null, null, "jmdugan_pubprofile_1522347973@biocontact.org", null, "https://github.com/jmdugan/blocklists", "https://github.com/jmdugan/blocklists/issues", (short)28, "jmdugan Blocklists Facebook", null, new DateTime(2016, 5, 27, 15, 43, 4, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 4, 12, 22, 5, 39, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jmdugan/blocklists/master/corporations/facebook/all", null, null },
                    { (short)473, null, "Blocks access to CloudFlare domains.", null, null, "jmdugan_pubprofile_1522347973@biocontact.org", null, "https://github.com/jmdugan/blocklists", "https://github.com/jmdugan/blocklists/issues", (short)28, "jmdugan Blocklists CloudFlare", null, new DateTime(2016, 5, 28, 21, 9, 25, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2016, 5, 28, 21, 9, 25, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jmdugan/blocklists/master/corporations/cloudflare/all", null, null },
                    { (short)472, null, "Blocks access to Pinterest domains.", null, null, "jmdugan_pubprofile_1522347973@biocontact.org", null, "https://github.com/jmdugan/blocklists", "https://github.com/jmdugan/blocklists/issues", (short)28, "jmdugan Blocklists Pinterest", null, new DateTime(2016, 5, 27, 16, 16, 45, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 4, 2, 18, 23, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jmdugan/blocklists/master/corporations/pinterest/all", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)451, null, null, null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=CXF2HBWCMSZVL", null, "https://github.com/crazy-max/WindowsSpyBlocker", "https://github.com/crazy-max/WindowsSpyBlocker/issues", (short)2, "WindowsSpyBlocker Hosts Extra", null, new DateTime(2018, 6, 2, 20, 9, 11, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 2, 20, 52, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/extra.txt", null, null },
                    { (short)450, null, "Blocks Windows updates.", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=CXF2HBWCMSZVL", null, "https://github.com/crazy-max/WindowsSpyBlocker", "https://github.com/crazy-max/WindowsSpyBlocker/issues", (short)2, "WindowsSpyBlocker Hosts Update", null, new DateTime(2018, 6, 2, 20, 9, 11, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 2, 3, 26, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/update.txt", null, null },
                    { (short)449, null, null, null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=CXF2HBWCMSZVL", null, "https://github.com/crazy-max/WindowsSpyBlocker", "https://github.com/crazy-max/WindowsSpyBlocker/issues", (short)2, "WindowsSpyBlocker Hosts Spy", null, new DateTime(2018, 6, 2, 20, 9, 11, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 2, 3, 26, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)430, null, "Blocks rogue websites and some ads on Norwegian and Danish sites. Intended for use only with hosts-file-specific tools and with system «hosts» files.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Nordic Filters for Tidier Websites (Hosts)", null, null, (short)1, new DateTime(2019, 2, 24, 14, 41, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/NorwegianExperimentalList%20alternate%20versions/AdawayHosts", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/NorwegianExperimentalList%20alternate%20versions/AdawayHosts", "https://gitlab.com/DandelionSprout/adfilt/raw/master/NorwegianExperimentalList%20alternate%20versions/AdawayHosts" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)423, null, null, null, "https://www.malekal.com/dons-pour-malekal-com/", null, "https://www.malekal.com", null, (short)5, "Malekal's Hosts", null, null, (short)1, "https://www.malekal.com/HOSTS_filtre/HOSTS.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)421, null, "A host file generated from updated phishing site feeds.", "https://gitlab.com/Kurobeats/phishing_hosts#phishing-site-hosts-generator", null, null, "https://gitlab.com/Kurobeats/phishing_hosts", "https://gitlab.com/Kurobeats/phishing_hosts/issues", (short)19, "Phishing Hosts", null, null, (short)1, new DateTime(2018, 9, 18, 12, 37, 20, 0, DateTimeKind.Unspecified), "https://gitlab.com/Kurobeats/phishing_hosts/raw/master/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)401, null, "Blocks ads, fake sites, shock sites, malware hosts and trackers. This hostfile's aim is not to break any useful websites.", null, null, null, "https://github.com/notracking/hosts-blocklists", "https://github.com/notracking/hosts-blocklists/issues", (short)5, "notracking - Hostnames", null, new DateTime(2015, 12, 20, 0, 23, 44, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 14, 6, 55, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/notracking/hosts-blocklists/master/hostnames.txt", null, null },
                    { (short)378, null, "A block list of malicious domains.", "https://github.com/cb-software/CB-Malicious-Domains/blob/master/README.md", null, null, "https://github.com/cb-software/CB-Malicious-Domains", "https://github.com/cb-software/CB-Malicious-Domains/issues", (short)2, "CB Malicious Domains - Hosts", null, new DateTime(2018, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 11, 12, 22, 16, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cb-software/CB-Malicious-Domains/master/block_lists/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)475, null, "Blocks access to Mozilla tracking domains.", null, null, "jmdugan_pubprofile_1522347973@biocontact.org", null, "https://github.com/jmdugan/blocklists", "https://github.com/jmdugan/blocklists/issues", (short)28, "jmdugan Blocklists Mozilla", null, new DateTime(2018, 4, 2, 18, 25, 40, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 4, 2, 18, 25, 40, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jmdugan/blocklists/master/corporations/mozilla/all.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)189, null, "A hosts list blocking advertising sites. (Compressed, currently cannot be subscribed to/added.)", null, "http://rlwpx.free.fr/WPFF/don.htm", "contact.wiki.airelle@spamgourmet.com", "http://rlwpx.free.fr/Webforum/", "http://rlwpx.free.fr/WPFF/hosts.htm", null, (short)31, "Airelle's Anti-Advertisements Hosts", null, null, (short)1, new DateTime(2018, 10, 11, 8, 13, 10, 0, DateTimeKind.Unspecified), "http://rlwpx.free.fr/WPFF/hpub.7z", null, null },
                    { (short)188, null, "A hosts list blocking adult/pornographic sites. (Compressed, currently cannot be subscribed to/added.)", null, "http://rlwpx.free.fr/WPFF/don.htm", "contact.wiki.airelle@spamgourmet.com", "http://rlwpx.free.fr/Webforum/", "http://rlwpx.free.fr/WPFF/hosts.htm", null, (short)31, "Airelle's Anti-Sex Hosts", null, null, (short)1, new DateTime(2018, 10, 11, 4, 23, 10, 0, DateTimeKind.Unspecified), "http://rlwpx.free.fr/WPFF/hsex.7z", null, null },
                    { (short)187, null, "A hosts list blocking tracking sites.", null, "http://rlwpx.free.fr/WPFF/don.htm", "contact.wiki.airelle@spamgourmet.com", "http://rlwpx.free.fr/Webforum/", "http://rlwpx.free.fr/WPFF/hosts.htm", null, (short)31, "Airelle's Anti-Trackers Hosts", null, null, (short)1, new DateTime(2018, 10, 11, 4, 17, 9, 0, DateTimeKind.Unspecified), "http://rlwpx.free.fr/WPFF/htrc.7z", "https://v.firebog.net/hosts/Airelle-trc.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)64, null, "A list combining Malware Domain List and Spybot.", null, null, null, null, null, (short)12, "Jansal's Hosts Light", null, new DateTime(2010, 12, 11, 10, 54, 9, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 9, 22, 6, 5, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/lewisje/jansal/master/adblock/hostslt", "https://gitcdn.xyz/repo/lewisje/jansal/master/adblock/hostslt", "https://gitcdn.link/repo/lewisje/jansal/master/adblock/hostslt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)60, null, "Polish hosts file for blocking scams (Experimental).", null, null, "polishjarvis@gmail.com", null, "https://kadantiscam.netlify.com/", "https://github.com/PolishFiltersTeam/KADhosts/issues", (short)8, "KADhosts", null, new DateTime(2016, 11, 20, 11, 41, 2, 0, DateTimeKind.Unspecified), "https://kadantiscam.netlify.com/#contact", (short)1, new DateTime(2019, 4, 8, 9, 8, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts.txt", "https://gitcdn.xyz/repo/PolishFiltersTeam/KADhosts/master/KADhosts.txt", "https://rawcdn.githack.com/PolishFiltersTeam/KADhosts/master/KADhosts.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)58, null, "Sites engaged in the distribution of Potentially Unwanted Programs.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts PUP", null, null, (short)1, new DateTime(2019, 4, 13, 6, 35, 10, 0, DateTimeKind.Unspecified), "https://hosts-file.net/pup.txt", null, null },
                    { (short)57, null, "Sites engaged in illegal pharmacy activities.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts PHA", null, null, (short)1, new DateTime(2019, 4, 13, 6, 29, 9, 0, DateTimeKind.Unspecified), "https://hosts-file.net/pha.txt", null, null },
                    { (short)55, null, "The following hosts were added to hpHosts AFTER the last full release.", "https://hosts-file.net/hphosts-partial.txt", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts Partial", null, null, (short)1, new DateTime(2019, 4, 13, 3, 17, 11, 0, DateTimeKind.Unspecified), "https://hosts-file.net/hphosts-partial.txt", null, null },
                    { (short)54, null, "Block ads with /etc/hosts.", null, null, null, null, null, (short)16, "G&J Hosts", null, null, (short)1, new DateTime(2016, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://web.archive.org/web/20160221140034if_/http://adblock.gjtech.net/?format=unix-hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)53, null, "Blocks Japanese regional mobile advertisements and trackers.", null, null, null, "https://gmbk0.tumblr.com/", null, (short)20, "gmbkslist (Hosts)", null, null, (short)1, new DateTime(2018, 10, 4, 3, 4, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AncientLibrary/gmbkslist%20(Hosts).txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AncientLibrary/gmbkslist%20(Hosts).txt", "https://gitcdn.xyz/repo/DandelionSprout/adfilt/master/AncientLibrary/gmbkslist%20(Hosts).txt" },
                    { (short)49, null, "Japanese ad servers hosts file.", null, null, "https://potato.5ch.net/test/read.cgi/android/1450730522/", "https://sites.google.com/site/hosts2ch/", null, (short)20, "Hosts2ch", null, null, (short)1, new DateTime(2019, 3, 23, 22, 11, 10, 0, DateTimeKind.Unspecified), "https://sites.google.com/site/hosts2ch/ja?attredirects=0", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)48, null, "hpHosts is a community managed and maintained hosts file that allows an additional layer of protection against access to ad, tracking and malicious websites.", "https://hosts-file.net/", null, null, "https://hosts-file.net/", null, (short)5, "hpHosts", null, null, (short)1, "https://hosts-file.net/download/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)47, null, "This classification is assigned for domains being used for advert or tracking purposes.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts ATS", null, null, (short)1, new DateTime(2019, 3, 8, 18, 54, 9, 0, DateTimeKind.Unspecified), "https://hosts-file.net/ad_servers.txt", null, null },
                    { (short)46, null, "Sites engaged in malware distribution.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts EMD", null, null, (short)1, new DateTime(2019, 4, 12, 23, 58, 10, 0, DateTimeKind.Unspecified), "https://hosts-file.net/emd.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)65, null, "A list combining Malware Domain List, Peter Lowe's List, Spybot, and Spyware Blaster.", null, null, null, null, null, (short)12, "Jansal's Hosts", null, new DateTime(2010, 8, 18, 14, 3, 9, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 9, 22, 6, 5, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/lewisje/jansal/master/adblock/hosts", "https://gitcdn.xyz/repo/lewisje/jansal/master/adblock/hosts", "https://gitcdn.link/repo/lewisje/jansal/master/adblock/hosts" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)45, null, "Sites engaged in the housing, development or distribution of exploits, including but not limited to exploitation of browser, software (inclusive of website software such as CMS), operating system exploits aswell as those engaged in exploits via social engineering.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts EXP", null, null, (short)1, "https://hosts-file.net/exp.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)43, null, "Sites engaged in astroturfing (otherwise known as grass roots marketing) or spamming.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts GRM", null, null, (short)1, new DateTime(2018, 11, 18, 10, 43, 9, 0, DateTimeKind.Unspecified), "https://hosts-file.net/grm.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)42, null, "Special classification for persons caught spamming the hpHosts forums.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts HFS", null, null, (short)1, "https://hosts-file.net/hfs.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)41, null, "Sites engaged in browser hijacking or other forms of hijacking (OS services, bandwidth, DNS, etc.).", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts HJK", null, null, (short)1, new DateTime(2018, 11, 4, 5, 16, 9, 0, DateTimeKind.Unspecified), "https://hosts-file.net/hjk.txt", null, null },
                    { (short)40, null, "Sites engaged in the use of misleading marketing tactics.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts MMT", null, null, (short)1, new DateTime(2019, 1, 14, 13, 3, 12, 0, DateTimeKind.Unspecified), "https://hosts-file.net/mmt.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)17, null, "Block ads, banners, 3rd party Cookies, 3rd party page counters, web bugs, and even most hijackers and possibly unwanted programs.", "http://winhelp2002.mvps.org/hosts.htm", "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=UNHL2VY85PB8N", "winhelp2002@gmail.com", null, "http://winhelp2002.mvps.org/", null, (short)9, "MVPS HOSTS", null, null, (short)1, new DateTime(2019, 3, 18, 11, 51, 10, 0, DateTimeKind.Unspecified), "http://winhelp2002.mvps.org/hosts.txt", "https://raw.githubusercontent.com/StevenBlack/hosts/master/data/mvps.org/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/data/mvps.org/hosts" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)10, null, "A hosts list of domains serving malware", null, null, "https://www.malwaredomainlist.com/forums/", "https://www.malwaredomainlist.com/", null, (short)7, "Malware Domain List (Hosts)", null, "https://www.malwaredomainlist.com/contact.php", (short)1, new DateTime(2019, 3, 3, 9, 19, 9, 0, DateTimeKind.Unspecified), "https://www.malwaredomainlist.com/hostslist/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)4, null, "Hosts file blocking known malware, spyware, virus, and shock sites", "https://github.com/michaeltrimm/hosts-blocking", null, null, "https://github.com/michaeltrimm/hosts-blocking", "https://github.com/michaeltrimm/hosts-blocking/issues", (short)2, "Hosts Blocking", null, new DateTime(2016, 11, 19, 20, 26, 13, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2016, 12, 29, 17, 46, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/michaeltrimm/hosts-blocking/master/_hosts.txt", "https://gitcdn.xyz/repo/michaeltrimm/hosts-blocking/master/_hosts.txt", "https://rawcdn.githack.com/michaeltrimm/hosts-blocking/master/_hosts.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)3, null, "Hosts file to block advertisements and trackers designed for Android", null, null, "https://forum.xda-developers.com/showthread.php?t=1916098", "https://forum.xda-developers.com/showthread.php?t=1916098", null, (short)3, "MoaAB: Mother of All AD-BLOCKING", null, null, (short)1, "https://adblock.mahakala.is/", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1507, null, "Domain feed of known DGA domains from -2 to +3 days", null, "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=YMFSMT9MW2Y6Q", null, "https://osint.bambenekconsulting.com/feeds/", null, (short)21, "DGA domains", null, null, null, new DateTime(2019, 4, 21, 5, 16, 10, 0, DateTimeKind.Unspecified), "https://osint.bambenekconsulting.com/feeds/dga-feed.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1494, null, null, null, null, null, "https://www.carl.net", null, (short)11, "Carl's Spam List", null, null, null, "https://www.carl.net/spam/access.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1510, null, "List of black email addresses.", null, "http://www.joewein.de/sw/bl-text.htm#donate", null, "http://www.joewein.de/sw/bl-text.htm", null, (short)5, "JoeWein's Email sender blacklist", null, null, null, new DateTime(2019, 4, 21, 13, 58, 12, 0, DateTimeKind.Unspecified), "https://joewein.net/dl/bl/from-bl.txt", null, null },
                    { (short)44, null, "Sites engaged in the selling or distribution of bogus or fraudulent applications and/or provision of fraudulent services.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts FSA", null, null, (short)1, new DateTime(2019, 4, 8, 22, 37, 13, 0, DateTimeKind.Unspecified), "https://hosts-file.net/fsa.txt", null, null },
                    { (short)73, null, "Sites engaged in the selling, distribution or provision of warez (including but not limited to keygens, serials etc), where such provisions do not contain malware.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts WRZ", null, null, (short)1, new DateTime(2018, 12, 3, 5, 9, 11, 0, DateTimeKind.Unspecified), "https://hosts-file.net/wrz.txt", null, null },
                    { (short)74, null, "Sites engaged in Phishing.", "https://hosts-file.net/?s=classifications", null, "https://forum.hosts-file.net/", "https://hosts-file.net/", null, (short)5, "hpHosts PSH", null, null, (short)1, new DateTime(2019, 4, 13, 8, 10, 12, 0, DateTimeKind.Unspecified), "https://hosts-file.net/psh.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)78, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Gambling + Porn", null, new DateTime(2016, 3, 13, 6, 49, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling-porn/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/gambling-porn/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/gambling-porn/hosts" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)186, null, "A hosts list blocking malware sites.", null, "http://rlwpx.free.fr/WPFF/don.htm", "contact.wiki.airelle@spamgourmet.com", "http://rlwpx.free.fr/Webforum/", "http://rlwpx.free.fr/WPFF/hosts.htm", null, (short)31, "Airelle's Malware Hosts", null, null, (short)1, new DateTime(2018, 10, 11, 4, 12, 9, 0, DateTimeKind.Unspecified), "http://rlwpx.free.fr/WPFF/hrsk.7z", "https://v.firebog.net/hosts/Airelle-hrsk.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)185, null, "A hosts list blocking phishing sites. (Compressed, currently cannot be subscribed to/added.)", null, "http://rlwpx.free.fr/WPFF/don.htm", "contact.wiki.airelle@spamgourmet.com", "http://rlwpx.free.fr/Webforum/", "http://rlwpx.free.fr/WPFF/hosts.htm", null, (short)31, "Airelle's Phishing Hosts", null, null, (short)1, "http://rlwpx.free.fr/WPFF/hblc.7z", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)179, null, "A non-comprehensive malware hosts list meant to be used in conjunction with the King of the PAC file.", null, null, null, "https://www.hostsfile.org/hosts.html", null, (short)19, "BadHosts", null, null, (short)1, "https://www.hostsfile.org/Downloads/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)177, null, "BarbBlock is a content blocking list with standalone browser extensions for Chrome and Firefox. It blacklists sites which have used DMCA takedowns to force removal from other content blocking lists. Such takedowns are categorically invalid, but they can be effective at intimidating small open-source projects into compliance.", "https://github.com/paulgb/BarbBlock/blob/master/README.md", null, null, "https://ssl.bblck.me/", "https://github.com/paulgb/BarbBlock/issues", (short)2, "BarbBlock Hosts", null, null, (short)1, new DateTime(2018, 12, 16, 1, 31, 11, 0, DateTimeKind.Unspecified), "https://ssl.bblck.me/blacklists/hosts-file.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)176, null, "Adblock filters for both Adblock PLUS and uBlock. It also includes some anti-adblocking rules to make your adblocking extension undetectable. The author manually add the track block rules from https://better.fyi/trackers/ since those rules are only for an iOS app only.", null, null, null, "https://github.com/anarki999/Adblock-List-Archive", "https://github.com/anarki999/Adblock-List-Archive/issues", (short)5, "Better.fyi | Trackers (List)", null, new DateTime(2017, 6, 25, 6, 24, 35, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 3, 6, 16, 29, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anarki999/Adblock-List-Archive/master/Better.fyiTrackersBlocklist.txt", "https://gitcdn.xyz/repo/anarki999/Adblock-List-Archive/master/Better.fyiTrackersBlocklist.txt", "https://rawcdn.githack.com/anarki999/Adblock-List-Archive/master/Better.fyiTrackersBlocklist.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)173, null, "A hosts list blocking miscellaneous annoyances. (Compressed, currently cannot be subscribed to/added.)", null, "http://rlwpx.free.fr/WPFF/don.htm", "contact.wiki.airelle@spamgourmet.com", "http://rlwpx.free.fr/Webforum/", "http://rlwpx.free.fr/WPFF/hosts.htm", null, (short)31, "Airelle's Anti-Miscellaneous Hosts", null, null, (short)1, new DateTime(2018, 10, 19, 12, 51, 16, 0, DateTimeKind.Unspecified), "http://rlwpx.free.fr/WPFF/hmis.7z", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)138, null, "Streaming services ads sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/FadeMind/hosts.extras", "https://github.com/FadeMind/hosts.extras/issues", (short)2, "StreamingAds", null, new DateTime(2018, 3, 24, 16, 22, 11, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 1, 27, 9, 46, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/StreamingAds/hosts", "https://gitcdn.xyz/repo/FadeMind/hosts.extras/master/StreamingAds/hosts", "https://gitcdn.link/repo/FadeMind/hosts.extras/master/StreamingAds/hosts" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)137, null, "Hosts contributed by Steven Black.", "https://raw.githubusercontent.com/StevenBlack/hosts/master/data/StevenBlack/hosts", null, "steveb@stevenblack.com", null, "https://github.com/StevenBlack/hosts", "https://github.com/StevenBlack/hosts/issues", (short)2, "Steven Black's Hosts", null, new DateTime(2012, 4, 12, 22, 56, 41, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 30, 14, 15, 53, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/data/StevenBlack/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/data/StevenBlack/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/data/StevenBlack/hosts" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)115, null, "Web adverts can be simply blocked by using a specially formatted text file called a “Hosts” file which is a list myself and numerous others have painstakingly compiled to now over 60000 (verified) known banner advertising companies and providers along with hostile websites that have been discovered (popup providers, spyware, dialers ,scams etc). This file tells your computer to try to and access itself whenever a banner advert is requested from a server that is in its \"black\" list, but instead of contacting the advert server your computer tries to request itself, and as your machine doesn't contain any adverts (if you are not running a web server) nothing will be shown.", "https://hostsfile.mine.nu/", null, "wduk10@hotmail.com", null, "https://hostsfile.mine.nu/", null, (short)34, "The Hosts File Project Hosts", null, null, (short)1, "https://hostsfile.mine.nu/hosts0.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)112, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Porn", null, new DateTime(2016, 3, 13, 6, 49, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/porn/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/porn/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/porn/hosts" },
                    { (short)111, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Social", null, new DateTime(2016, 3, 13, 6, 49, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/social/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/social/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/social/hosts" },
                    { (short)110, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Fakenews", null, new DateTime(2016, 12, 17, 19, 28, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/fakenews/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/fakenews/hosts" },
                    { (short)109, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Fakenews + Gambling", null, new DateTime(2016, 12, 17, 19, 28, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/fakenews-gambling/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/fakenews-gambling/hosts" },
                    { (short)108, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Fakenews + Porn", null, new DateTime(2016, 12, 17, 19, 28, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-porn/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/fakenews-porn/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/fakenews-porn/hosts" },
                    { (short)107, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Fakenews + Social", null, new DateTime(2016, 12, 17, 19, 28, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-social/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/fakenews-social/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/fakenews-social/hosts" },
                    { (short)106, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Fakenews + Gambling + Porn", null, new DateTime(2016, 12, 17, 19, 28, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/fakenews-gambling-porn/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/fakenews-gambling-porn/hosts" },
                    { (short)105, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Fakenews + Gambling + Social", null, new DateTime(2016, 12, 17, 19, 28, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-social/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/fakenews-gambling-social/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/fakenews-gambling-social/hosts" },
                    { (short)104, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Fakenews + Porn + Social", null, new DateTime(2016, 12, 17, 19, 28, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-porn-social/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/fakenews-porn-social/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/fakenews-porn-social/hosts" },
                    { (short)103, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Fakenews + Gambling + Porn + Social", null, new DateTime(2016, 12, 17, 19, 28, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn-social/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/fakenews-gambling-porn-social/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/fakenews-gambling-porn-social/hosts" },
                    { (short)96, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Porn + Social", null, new DateTime(2016, 3, 13, 6, 49, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/porn-social/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/porn-social/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/porn-social/hosts" },
                    { (short)95, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Gambling + Social", null, new DateTime(2016, 3, 13, 6, 49, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling-social/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/gambling-social/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/gambling-social/hosts" },
                    { (short)93, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Gambling + Porn + Social", null, new DateTime(2016, 3, 13, 6, 49, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling-porn-social/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/gambling-porn-social/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/gambling-porn-social/hosts" },
                    { (short)81, null, "Windows installers ads sources sites based on Unchecky content.", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/FadeMind/hosts.extras", "https://github.com/FadeMind/hosts.extras/issues", (short)2, "UncheckyAds", null, new DateTime(2016, 9, 29, 13, 52, 34, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 7, 16, 9, 38, 39, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts", "https://raw.githubusercontent.com/StevenBlack/hosts/master/data/UncheckyAds/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/data/UncheckyAds/hosts" },
                    { (short)80, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts", null, new DateTime(2012, 4, 12, 22, 56, 41, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/hosts" },
                    { (short)79, null, "Extending and consolidating hosts files from a variety of sources", "https://github.com/StevenBlack/hosts", null, null, "https://github.com/StevenBlack/hosts", null, (short)2, "Unified Hosts + Gambling", null, new DateTime(2016, 3, 13, 6, 49, 47, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 11, 14, 36, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling/hosts", "https://gitcdn.xyz/repo/StevenBlack/hosts/master/alternates/gambling/hosts", "https://gitlab.com/StevenBlack/hosts/raw/master/alternates/gambling/hosts" },
                    { (short)492, null, null, null, null, null, "https://github.com/mhxion/pornaway", "https://github.com/mhxion/pornaway/issues", (short)2, "PornAway blacklist (sites)", null, new DateTime(2018, 6, 20, 10, 44, 10, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 9, 4, 1, 34, 15, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mhxion/pornaway/master/hosts/porn_sites.txt", null, null },
                    { (short)1043, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Romania", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Romania.txt", null, null },
                    { (short)493, null, null, null, null, null, "https://github.com/mhxion/pornaway", "https://github.com/mhxion/pornaway/issues", (short)2, "PornAway blacklist (ads)", null, new DateTime(2018, 6, 20, 10, 46, 1, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 7, 6, 20, 14, 37, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mhxion/pornaway/master/hosts/porn_ads.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)495, null, "Utility for detecting phishing domains targeting Ethereum users.", null, null, "hello@metamask.io", null, "https://github.com/MetaMask/eth-phishing-detect", "https://github.com/MetaMask/eth-phishing-detect/issues", (short)23, "ETH Phishing Detect", null, new DateTime(2018, 1, 30, 21, 56, 13, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 7, 20, 12, 48, 45, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/MetaMask/eth-phishing-detect/master/src/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1937, null, "Fake online shops and a lot of other things are collected here.", null, null, null, null, null, (short)5, "fakeinet.com Scam, Fakes and frauds of Internet URL list", null, null, (short)1, "https://pastebin.com/raw/UP3s7pEB", null, null },
                    { (short)1927, null, "My custom blocklists for pihole", null, null, null, "https://github.com/Th3M3/blocklists", "https://github.com/Th3M3/blocklists/issues", (short)5, "Th3M3 Blocklists - Malware", null, null, (short)1, "https://raw.githubusercontent.com/Th3M3/blocklists/master/malware.list", null, null },
                    { (short)1926, null, null, null, null, null, "https://github.com/jackrabbit335/UsefulLinuxShellScripts", "https://github.com/jackrabbit335/UsefulLinuxShellScripts/issues", (short)4, "Useful Linux Shell Scripts - Blacklist", null, null, (short)1, "https://raw.githubusercontent.com/jackrabbit335/UsefulLinuxShellScripts/master/Hosts%20%26%20sourcelist/blacklist.txt", null, null },
                    { (short)1922, null, "Because they don't deserve your traffic.", null, null, null, "https://github.com/infinitytec/blocklists", "https://github.com/infinitytec/blocklists/issues", (short)2, "Not Good Pi - Scams and Phishing", null, null, (short)1, "https://raw.githubusercontent.com/infinitytec/blocklists/master/scams-and-phishing.txt", null, null },
                    { (short)1921, null, "Ads and tracking hosts I have seen around the Internet. Some are rare. Some are popular.", null, null, null, "https://github.com/infinitytec/blocklists", "https://github.com/infinitytec/blocklists/issues", (short)2, "Not Good Pi - Ads and Trackers", null, null, (short)1, "https://raw.githubusercontent.com/infinitytec/blocklists/master/ads-and-trackers.txt", null, null },
                    { (short)1907, null, "BlackList of domains hosting advertisements & other nasty purposes.", null, null, null, "https://github.com/smed79/blacklist", "https://github.com/smed79/blacklist/issues", (short)6, "smed79 BlackList", null, null, (short)1, "https://raw.githubusercontent.com/smed79/blacklist/master/hosts.txt", null, null },
                    { (short)1906, null, "A public hosts file for blocking known ads, trackers, and malware domains across the internet.", null, null, null, "https://github.com/Rhys-H/hosts-list", "https://github.com/Rhys-H/hosts-list/issues", (short)5, "Rhys-H Hosts-List", null, null, (short)1, "https://raw.githubusercontent.com/Rhys-H/hosts-list/master/HostsList.txt", null, null },
                    { (short)1902, null, "These are my own additional annoying domains. For use with StevenBlack, may break randomly.", null, null, null, "https://github.com/meinhimmel/hosts", "https://github.com/meinhimmel/hosts/issues", (short)2, "meinhimmel Hosts", null, null, (short)1, "https://raw.githubusercontent.com/meinhimmel/hosts/master/hosts", null, null },
                    { (short)1887, null, "This is a list of hosts I have found to be used for ads, malware, etc.", null, null, null, "https://github.com/chrisjudk/hosts", "https://github.com/chrisjudk/hosts/issues", (short)2, "chrisjudk Hosts", null, null, (short)1, "https://raw.githubusercontent.com/chrisjudk/hosts/master/hosts", null, null },
                    { (short)1869, null, "Malware, advert and tracking blacklist", null, null, null, "https://github.com/mkb2091/blockconvert", null, (short)4, "BlockConvert (Hosts)", null, null, (short)1, "https://raw.githubusercontent.com/mkb2091/blockconvert/master/output/hosts.txt", null, null },
                    { (short)1844, null, "A simple program made for blocking ads that appear in the MoTD of any Source game (or any other game that also has Pinion, MOTDgd, Unikrn and VPPGamingNetwork appear elsewhere).", null, null, null, "https://github.com/some-username-here1/motd-adblock/", null, (short)4, "motd-adblock", null, null, (short)1, "https://raw.githubusercontent.com/some-username-here1/motd-adblock/master/motd-adblock", null, null },
                    { (short)1939, null, null, null, null, null, null, null, (short)14, "Anti-PopAds (Hosts)", null, null, (short)1, "https://raw.githubusercontent.com/yhonay/antipopads/master/hosts", null, null },
                    { (short)1839, null, "A blocklist of ads, trackers, malware, and IP grabbers", "https://github.com/Cybo1927/Hosts", null, null, "https://github.com/Cybo1927/Hosts", "https://github.com/Cybo1927/Hosts/issues", (short)11, "Cybo's Anti Verizon", null, null, (short)1, "https://raw.githubusercontent.com/Cybo1927/Hosts/master/Anti/Anti%20Verizon", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1742, "https://t.me/EnergizedProtection", "Regional annoyance blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Regional Extension", null, new DateTime(2018, 10, 8, 6, 24, 46, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/regional/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/regional/formats/hosts.txt", null },
                    { (short)1741, "https://t.me/EnergizedProtection", "Lite pornware blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Lite Extension", null, new DateTime(2018, 10, 8, 6, 24, 46, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/porn-lite/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/porn-lite/formats/hosts.txt", null },
                    { (short)1740, "https://t.me/EnergizedProtection", "Block social apps and sites", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Social Extension", null, new DateTime(2018, 10, 8, 6, 24, 46, 0, DateTimeKind.Unspecified), "https://app.energized.pro", (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/social/formats/hosts", "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/social/formats/hosts.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1713, null, null, null, null, null, "https://github.com/jdlingyu/ad-wars/", "https://github.com/jdlingyu/ad-wars//issues", (short)5, "Ad Wars Hosts", null, null, (short)1, "https://raw.githubusercontent.com/jdlingyu/ad-wars/master/hosts", null, null },
                    { (short)1709, null, "Categorized hosts files for DNS based content blocking. This is meant to be used as a regional component of a more comprehensive hosts list, such as Steven Black's hosts.", null, null, null, "https://github.com/tiuxo/hosts/", "https://github.com/tiuxo/hosts//issues", (short)24, "hosts-jp Social", null, null, (short)1, "https://raw.githubusercontent.com/tiuxo/hosts/master/social", null, null },
                    { (short)1708, null, "Categorized hosts files for DNS based content blocking. This is meant to be used as a regional component of a more comprehensive hosts list, such as Steven Black's hosts.", null, null, null, "https://github.com/tiuxo/hosts/", "https://github.com/tiuxo/hosts//issues", (short)24, "hosts-jp Porn", null, null, (short)1, "https://raw.githubusercontent.com/tiuxo/hosts/master/porn", null, null },
                    { (short)1707, null, "Categorized hosts files for DNS based content blocking. This is meant to be used as a regional component of a more comprehensive hosts list, such as Steven Black's hosts.", null, null, null, "https://github.com/tiuxo/hosts/", "https://github.com/tiuxo/hosts//issues", (short)24, "hosts-jp Ads", null, null, (short)1, "https://raw.githubusercontent.com/tiuxo/hosts/master/ads", null, null },
                    { (short)1706, null, "Hosts file for blocking spyware, ads, analytics and tracking on German websites and domains.", null, null, null, "https://gameindustry.de/", null, (short)9, "GameIndustryDE Hosts", null, null, (short)1, "https://www.gameindustry.eu/files/hosts.txt", null, null },
                    { (short)1702, null, null, null, null, null, "https://npc.0am.jp/", null, (short)7, "NPC 0AM Hosts", null, null, (short)1, "https://npc.0am.jp/hosts.php?dl=1", null, null },
                    { (short)1701, null, null, null, null, null, "https://asc.hk/", null, (short)5, "ASC DeiG", null, null, (short)1, "https://asc.hk/adplus.txt", null, null },
                    { (short)1670, null, "Blocks Korean regional advertisements and trackers.", null, null, null, "https://github.com/yous/YousList", "https://github.com/yous/YousList/issues", (short)24, "YousList Hosts", null, null, (short)1, "https://raw.githubusercontent.com/yous/YousList/master/hosts.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1819, null, "A programmatically expanded block list for Facebook, Messenger, Instagram, and WhatsApp", "https://www.github.developerdan.com/hosts/lists/facebook-extended.txt", null, null, "https://www.github.developerdan.com/hosts/", "https://github.com/lightswitch05/hosts/issues", (short)18, "Facebook Hosts", null, new DateTime(2019, 8, 26, 19, 49, 0, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 8, 26, 19, 49, 0, 0, DateTimeKind.Unspecified), "https://www.github.developerdan.com/hosts/lists/facebook-extended.txt", null, null },
                    { (short)1639, null, "Google AMP (Accelerated Mobile Pages) block list.", "https://www.github.developerdan.com/hosts/lists/amp-hosts-extended.txt", null, null, "https://www.github.developerdan.com/hosts/", "https://github.com/lightswitch05/hosts/issues", (short)18, "AMP Hosts", null, new DateTime(2018, 7, 19, 11, 3, 56, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 13, 15, 29, 12, 0, DateTimeKind.Unspecified), "https://www.github.developerdan.com/hosts/lists/amp-hosts-extended.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1940, null, null, null, null, null, "https://andnixsh.com/", null, (short)5, "Andnixsh's Hosts", null, null, (short)1, "https://repo.andnixsh.com/adblocker/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1974, null, "As someone who lives in Norway, which is not an Amazon core country, I became increasingly annoyed at how they hid away shipping fees from me, and even more annoyed when they barred third-party sellers from shipping abroad. Thus I deleted my Amazon account in protest, and to this day I refuse to make a new one.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-Amazon List for Twitch («Hosts» version)", null, null, (short)1, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/AntiAmazonListForTwitchHosts.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/AntiAmazonListForTwitchHosts.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/AntiAmazonListForTwitchHosts.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)363, null, "A additional list for administrators to prevent mining in networks", "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://www.amazon.de/hz/wishlist/ls/2DDEDPJU2996I?filter=unpurchased&language=en_GB&sort=priority&type=wishlist", "zerodot1@bk.ru", null, "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://gitlab.com/ZeroDot1/CoinBlockerLists/issues", (short)4, "CoinBlocker uBO List", null, new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 14, 17, 1, 12, 0, DateTimeKind.Unspecified), "https://gitlab.com/ZeroDot1/CoinBlockerLists/raw/master/list_browser_UBO.txt", null, null },
                    { (short)359, null, "A list to prevent browser mining only", "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://www.amazon.de/hz/wishlist/ls/2DDEDPJU2996I?filter=unpurchased&language=en_GB&sort=priority&type=wishlist", "zerodot1@bk.ru", null, "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://gitlab.com/ZeroDot1/CoinBlockerLists/issues", (short)4, "CoinBlocker Domains List Browser", null, new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 14, 15, 47, 11, 0, DateTimeKind.Unspecified), "https://gitlab.com/ZeroDot1/CoinBlockerLists/raw/master/list_browser.txt", null, null },
                    { (short)358, null, "An additional list for administrators", "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://www.amazon.de/hz/wishlist/ls/2DDEDPJU2996I?filter=unpurchased&language=en_GB&sort=priority&type=wishlist", "zerodot1@bk.ru", null, "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://gitlab.com/ZeroDot1/CoinBlockerLists/issues", (short)4, "CoinBlocker Domains List Optional", null, new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 14, 15, 26, 10, 0, DateTimeKind.Unspecified), "https://gitlab.com/ZeroDot1/CoinBlockerLists/raw/master/list_optional.txt", null, null },
                    { (short)357, null, "A list for administrators to prevent mining in networks", "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://www.amazon.de/hz/wishlist/ls/2DDEDPJU2996I?filter=unpurchased&language=en_GB&sort=priority&type=wishlist", "zerodot1@bk.ru", null, "https://gitlab.com/ZeroDot1/CoinBlockerLists", "https://gitlab.com/ZeroDot1/CoinBlockerLists/issues", (short)4, "CoinBlocker Domains List", null, new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 14, 15, 15, 10, 0, DateTimeKind.Unspecified), "https://gitlab.com/ZeroDot1/CoinBlockerLists/raw/master/list.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)352, null, "A bad hosts blocking list", null, "https://www.paypal.me/e1adkarak0", null, "https://github.com/eladkarako/hosts", null, (short)11, "HOSTS AdBlock", null, new DateTime(2018, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 4, 18, 7, 25, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/eladkarako/hosts/master/build/hosts_adblock.txt", null, null },
                    { (short)333, null, "LeeCh's web list for filtering out search results for certain anime sites.", "https://github.com/pureexe/LeeCh-List/blob/master/README.md", null, null, "https://github.com/pureexe/LeeCh-List", "https://github.com/pureexe/LeeCh-List/issues", (short)2, "LeeCh List", null, new DateTime(2017, 3, 7, 14, 58, 24, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2017, 11, 18, 8, 0, 28, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/pureexe/LeeCh-List/master/anime.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)323, null, "This file contain domains that are needed to be whitelisted depending on the service you use. (It may include analytics sites!)", "https://github.com/anudeepND/whitelist/blob/master/README.md", null, "anudeep@protonmail.com", null, "https://github.com/anudeepND/whitelist", "https://github.com/anudeepND/whitelist/issues", (short)2, "Commonly Whitelisted Domains (Optional)", null, new DateTime(2018, 2, 22, 18, 10, 9, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 29, 15, 28, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/optional-list.txt", null, null },
                    { (short)322, null, "Some deals sites like Slickdeals and Fatwallet needs a few sites (most of them are ads) to be whitelisted to work properly.", "https://github.com/anudeepND/whitelist/blob/master/README.md", null, "anudeep@protonmail.com", null, "https://github.com/anudeepND/whitelist", "https://github.com/anudeepND/whitelist/issues", (short)2, "Commonly Whitelisted Domains (Referral Sites)", null, new DateTime(2018, 2, 22, 18, 9, 38, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 29, 15, 36, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/referral-sites.txt", null, null },
                    { (short)321, null, "Commonly whitelisted domains for Pi-Hole.", "https://github.com/anudeepND/whitelist/blob/master/README.md", null, "anudeep@protonmail.com", null, "https://github.com/anudeepND/whitelist", "https://github.com/anudeepND/whitelist/issues", (short)2, "Commonly Whitelisted Domains", null, new DateTime(2018, 2, 22, 18, 9, 3, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 16, 8, 28, 38, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt", null, null },
                    { (short)319, null, "An expiremental list of domains for blocking YouTube video ads.", null, null, "anudeep@protonmail.com", null, "https://github.com/anudeepND/youtubeadsblacklist", "https://github.com/anudeepND/youtubeadsblacklist/issues", (short)14, "YouTube Video Ads Blocklist Domains", null, new DateTime(2017, 6, 30, 19, 28, 45, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2017, 10, 22, 4, 42, 47, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anudeepND/youtubeadsblacklist/master/domainlist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)304, null, "A list of Skype resolvers.", null, "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Skype Resolvers", null, null, (short)2, "https://mirror1.malwaredomains.com/files/Skype-resolvers.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1956, null, "A blocklist to protect users against untrustworthy retail sites.", "https://github.com/durablenapkin/scamblocklist", null, null, "https://github.com/durablenapkin/scamblocklist", "https://github.com/durablenapkin/scamblocklist/issues", (short)2, "Scam Blocklist", null, new DateTime(2019, 10, 30, 17, 27, 37, 0, DateTimeKind.Unspecified), "https://github.com/durablenapkin/scamblocklist/issues/new/choose", (short)1, new DateTime(2019, 11, 1, 5, 32, 39, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/durablenapkin/scamblocklist/master/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)303, null, "This is a list of URL shorteners.", "https://mirror1.malwaredomains.com/files/url_shorteners.txt", "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH URL Shorteners", null, null, (short)2, "https://mirror1.malwaredomains.com/files/url_shorteners.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)287, null, "This is a list of malware domains.", null, "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Malware Domains", null, null, (short)2, new DateTime(2019, 4, 8, 19, 35, 13, 0, DateTimeKind.Unspecified), "https://mirror1.malwaredomains.com/files/justdomains", "https://mirror.cedia.org.ec/malwaredomains/justdomains", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)286, null, "This is a list of free web hosting services.", "https://mirror1.malwaredomains.com/files/freewebhosts.txt", "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Free Web Hosts", null, null, (short)2, "https://mirror1.malwaredomains.com/files/freewebhosts.txt", null, null },
                    { (short)285, null, "This is a list of dynamic DNS providers.", "https://mirror1.malwaredomains.com/files/dynamic_dns.txt", "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Dynamic DNS", null, null, (short)2, "https://mirror1.malwaredomains.com/files/dynamic_dns.txt", "https://mirror.cedia.org.ec/malwaredomains/dynamic_dns.txt", null },
                    { (short)275, null, "Blocks advertisements.", null, null, "support@disconnect.me", null, "https://disconnect.me/trackerprotection", null, (short)4, "Disconnect Advertising Filter List", null, null, (short)2, "https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)274, null, "Blocks malvertising.", null, null, "support@disconnect.me", null, "https://disconnect.me/trackerprotection", null, (short)4, "Disconnect Malvertising Filter List", null, null, (short)2, new DateTime(2019, 4, 8, 18, 2, 10, 0, DateTimeKind.Unspecified), "https://s3.amazonaws.com/lists.disconnect.me/simple_malvertising.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)272, null, "Blocks trackers.", null, null, "support@disconnect.me", null, "https://disconnect.me/trackerprotection", null, (short)4, "Disconnect Tracking Filter List", null, null, (short)2, "https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)139, null, "The Spam404 domain blacklist is a regularly updated list of abusive domain names.", "https://www.spam404.com/domain-blacklist.html", null, "admin@spam404.com", null, "https://www.spam404.com/domain-blacklist.html", "https://github.com/Spam404/lists/issues", (short)8, "Spam404 Domain Blacklist", null, new DateTime(2016, 2, 15, 21, 4, 57, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 15, 15, 13, 33, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt", "https://gitcdn.xyz/repo/Spam404/lists/master/main-blacklist.txt", "https://rawcdn.githack.com/Spam404/lists/master/main-blacklist.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)36, null, "A personal filter list. Each host is either an ad, phishing, malicious, analytics, or clickbait.", "https://github.com/genediazjr/nopelist", null, null, "https://github.com/genediazjr/nopelist", "https://github.com/genediazjr/nopelist/issues", (short)2, "Nopelist", null, new DateTime(2016, 9, 30, 11, 48, 44, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2017, 2, 20, 10, 20, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/genediazjr/nopelist/master/nopelist.txt", "https://gitcdn.xyz/repo/genediazjr/nopelist/master/nopelist.txt", "https://rawcdn.githack.com/genediazjr/nopelist/master/nopelist.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)2033, null, null, null, null, null, null, null, (short)5, "Blockzilla (Hosts)", null, null, (short)1, "https://block.energized.pro/assets/sources/filter/blockzilla.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)2004, null, "This is believed to be the world's oldest adblock list to still be hosted at its original domain, having last been updated in August 2003 and has rejected submissions ever since.", null, null, null, "http://www.accs-net.com/hosts/get_hosts.html", null, (short)35, "Gorilla Studio Hosts Project", null, null, (short)1, new DateTime(2003, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), "http://www.accs-net.com/hosts/Downloads/hosts127001.zip", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1998, null, "Block maps, location analytics, and GPS services", null, null, null, "https://github.com/Cybo1927/Hosts", "https://github.com/Cybo1927/Hosts/issues", (short)11, "Cybo's Anti Location Tracking", null, null, (short)1, "https://raw.githubusercontent.com/Cybo1927/Hosts/master/Anti/Anti%20Location%20Tracking", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)288, null, "This is a list of long-lived, \"immortal,\" malware domains.", "https://mirror1.malwaredomains.com/files/immortal_domains.txt", "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Malware Domains Immortal", null, null, (short)2, new DateTime(2018, 12, 10, 6, 7, 14, 0, DateTimeKind.Unspecified), "https://mirror1.malwaredomains.com/files/immortal_domains.txt", "http://mirror2.malwaredomains.com/files/immortal_domains.txt", "https://mirror.cedia.org.ec/malwaredomains/immortal_domains.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1601, null, "Currently blocking ad serving and malware domains.", null, "https://www.paypal.me/sjhgvr", null, "https://github.com/joeylane/hosts", "https://github.com/joeylane/hosts/issues", (short)5, "Joey Lane's Hosts", null, null, (short)1, "https://raw.githubusercontent.com/joeylane/hosts/master/hosts", null, null },
                    { (short)1600, null, "Introducing the Amazing/Sensational/Remarkable/Revolutionary; #1 Blocklist :)", null, "https://www.paypal.me/sjhgvr", null, "https://www.reddit.com/r/pihole/comments/bppug1/introducing_the/", null, (short)5, "OISD Mobile (Hosts)", null, null, (short)1, "https://hostsmobile.oisd.nl/", "https://raw.githubusercontent.com/ookangzheng/dbl-oisd-nl/master/hostsmobile.txt", "https://gitlab.com/ookangzheng/dbl-oisd-nl/raw/master/hostsmobile.txt" },
                    { (short)1598, null, "Introducing the Amazing/Sensational/Remarkable/Revolutionary; #1 Blocklist :)", null, "https://www.paypal.me/sjhgvr", null, "https://www.reddit.com/r/pihole/comments/bppug1/introducing_the/", null, (short)5, "OISD (Hosts)", null, null, (short)1, "https://hosts.oisd.nl/", "https://raw.githubusercontent.com/ookangzheng/dbl-oisd-nl/master/dblzero.txt", "https://gitlab.com/ookangzheng/dbl-oisd-nl/raw/master/dblzero.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)685, null, "This is a list of malware domains.", null, "https://www.malwaredomains.com/?page_id=675", "malwaredomains@gmail.com", null, "https://www.malwaredomains.com/", null, (short)5, "DNS-BH Malware Domains (Hosts)", null, null, (short)1, new DateTime(2019, 4, 15, 5, 48, 11, 0, DateTimeKind.Unspecified), "https://mirror1.malwaredomains.com/files/domains.hosts", "https://mirror.cedia.org.ec/malwaredomains/domains.hosts", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)669, null, null, null, null, null, "https://github.com/10ZiN/10ZiN.github.io", null, (short)5, "10ZiN Host Database (Full)", null, null, (short)1, new DateTime(2019, 4, 8, 3, 41, 14, 0, DateTimeKind.Unspecified), "https://tgc.cloud/downloads/hosts.txt", null, null },
                    { (short)668, null, null, null, null, null, "https://github.com/10ZiN/10ZiN.github.io", null, (short)5, "iOS/Mobile Host Database", null, null, (short)1, new DateTime(2019, 4, 8, 3, 20, 14, 0, DateTimeKind.Unspecified), "https://tgc.cloud/downloads/iOSAds.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)667, null, null, null, null, null, "https://github.com/r-a-y/mobile-hosts", "https://github.com/r-a-y/mobile-hosts/issues", (short)4, "Adguard DNS (hosts)", null, new DateTime(2017, 11, 21, 23, 40, 34, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 7, 0, 37, 44, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardDNS.txt", null, null },
                    { (short)666, null, null, null, null, null, "https://github.com/r-a-y/mobile-hosts", "https://github.com/r-a-y/mobile-hosts/issues", (short)4, "Adguard Specific Apps (hosts)", null, new DateTime(2017, 9, 13, 22, 7, 5, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 1, 26, 23, 5, 48, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardApps.txt", null, null },
                    { (short)665, null, null, null, null, null, "https://github.com/r-a-y/mobile-hosts", "https://github.com/r-a-y/mobile-hosts/issues", (short)4, "Adguard Mobile Tracking and Spyware (hosts)", null, new DateTime(2017, 7, 10, 0, 35, 15, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 4, 3, 23, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardMobileSpyware.txt", null, null },
                    { (short)664, null, null, null, null, null, "https://github.com/r-a-y/mobile-hosts", "https://github.com/r-a-y/mobile-hosts/issues", (short)4, "Adguard Mobile Ads (hosts)", null, new DateTime(2017, 7, 10, 0, 35, 15, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 7, 0, 35, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardMobileAds.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)629, null, null, null, null, null, "https://github.com/TakoYachty/Gift-Card-Killer", "https://github.com/TakoYachty/Gift-Card-Killer/issues", (short)5, "Thieus Hosts Spotify", null, null, (short)1, "https://raw.githubusercontent.com/TakoYachty/Gift-Card-Killer/master/Thieus%20Hosts%20Spotify.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)627, null, "This is a list to prevent those fake survey gift card / fradulent websites that seem to replicate itself. Hopefully, this prevents a majority of them.", "https://raw.githubusercontent.com/TakoYachty/Gift-Card-Killer/master/giftcardkiller.txt", null, null, "https://github.com/TakoYachty/Gift-Card-Killer", "https://github.com/TakoYachty/Gift-Card-Killer/issues", (short)5, "Gift Card Killer", null, new DateTime(2017, 5, 26, 5, 28, 16, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2017, 7, 9, 18, 21, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/TakoYachty/Gift-Card-Killer/master/giftcardkiller.txt", null, null },
                    { (short)626, null, null, null, null, null, null, null, (short)2, "Tyzbit Hosts", null, new DateTime(2016, 3, 9, 23, 42, 48, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2016, 3, 9, 23, 42, 48, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/tyzbit/hosts/master/data/tyzbit/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)625, null, "A lightweight and constantly updated host blocker available for free on GitHub.", "https://raw.githubusercontent.com/nathanaccidentally/SystemHostsBlocker/master/hosts", "https://github.com/nathanaccidentally/SystemHostsBlocker#systemhostblocker", "nathanaccidentally@gmail.com", null, "https://github.com/nathanaccidentally/SystemHostsBlocker", "https://github.com/nathanaccidentally/SystemHostsBlocker/issues", (short)2, "System Hosts Blocker", null, new DateTime(2016, 11, 3, 14, 7, 41, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2017, 3, 2, 14, 20, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/nathanaccidentally/SystemHostsBlocker/master/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)687, null, "Hosts file based ad blocker for Microsoft Edge and all other browsers. Does not require any add-ons, since this method is based on the hosts DNS resolver text file.", "http://www.quero.at/adblock-hosts-edge.php", "http://www.quero.at/donate.php", "support@quero.at", null, "http://www.quero.at/adblock-hosts-edge.php", null, (short)4, "Quero AdBlock Hosts", null, null, (short)1, "http://www.quero.at/download/adblock-hosts.zip", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)619, null, "YouTube Ad-Block-List for PiHole by HenningVanRäumle", "https://raw.githubusercontent.com/HenningVanRaumle/pihole-ytadblock/master/ytadblock.txt", null, null, null, null, (short)5, "pihole-ytadblock", null, new DateTime(2017, 2, 25, 1, 25, 9, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2017, 4, 27, 18, 28, 53, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/HenningVanRaumle/pihole-ytadblock/master/ytadblock.txt", null, null },
                    { (short)606, null, "Goodbye Ads is designed for Unix-like systems (such as Android), gets a list of domains that serve ads, tracking scripts and malware from multiple reputable sources and creates a hosts file that prevents your system from connecting to them.", null, null, "https://forum.xda-developers.com/android/software-hacking/goodbye-ads-advanced-protection-ads-ad-t3827269", "https://github.com/jerryn70/GoodbyeAds", "https://github.com/jerryn70/GoodbyeAds/issues", (short)2, "Goodbye Ads", null, new DateTime(2018, 8, 11, 6, 43, 58, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 1, 6, 24, 52, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jerryn70/GoodbyeAds/master/Hosts/GoodbyeAds.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)602, null, "A hosts file to prevent sites that know to trick and gain 'Facebook access token' from you that their site offer to boost likes, followers, comments, post shares, etc. while gain access your account to do the same for others.", null, null, null, "https://github.com/kowith337/ThaiAntiTokenSites", "https://github.com/kowith337/ThaiAntiTokenSites/issues", (short)13, "ThaiAntiTokenSites Hosts", null, new DateTime(2016, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 1, 28, 14, 49, 57, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/ThaiAntiTokenSites/master/AntiPumpSites_hosts.txt", "https://gitlab.com/kowith337/ThaiAntiTokenSites/raw/master/AntiPumpSites_hosts.txt", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)599, null, "Android host file - Adaway", "https://abpvn.com/android/abpvn.txt", null, "support@abpvn.com", "http://www.vn-zoom.com/f77/abp-bo-loc-quang-cao-cho-nguoi-viet-2856275.html", "https://abpvn.com/", null, (short)5, "ABPVN Hosts", null, null, (short)1, new DateTime(2019, 4, 13, 12, 25, 12, 0, DateTimeKind.Unspecified), "https://abpvn.com/android/abpvn.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)598, null, "Hosts block ads of Vietnamese", "https://github.com/bigdargon/hostsVN#hostsvn", null, null, "https://github.com/bigdargon/hostsVN", "https://github.com/bigdargon/hostsVN/issues", (short)2, "hostsVN", null, new DateTime(2018, 7, 2, 2, 47, 3, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 10, 8, 5, 45, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts", null, null },
                    { (short)596, null, "A very aggressive block list for tracking, geo-targeting, & ads. This list is only recommended for advanced users who do not mind occasional whitelisting.", "https://www.github.developerdan.com/hosts/lists/tracking-aggressive-extended.txt", null, null, "https://www.github.developerdan.com/hosts/", "https://github.com/lightswitch05/hosts/issues", (short)18, "Tracking Aggressive", null, new DateTime(2018, 7, 19, 11, 3, 56, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 13, 15, 29, 12, 0, DateTimeKind.Unspecified), "https://www.github.developerdan.com/hosts/lists/tracking-aggressive-extended.txt", null, null },
                    { (short)595, null, "Collection of Analytics, Ads, and tracking hosts to block.", "https://www.github.developerdan.com/hosts/lists/ads-and-tracking-extended.txt", null, null, "https://www.github.developerdan.com/hosts/", "https://github.com/lightswitch05/hosts/issues", (short)18, "Ads & Tracking", null, new DateTime(2018, 5, 24, 14, 40, 19, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 4, 13, 12, 12, 0, DateTimeKind.Unspecified), "https://www.github.developerdan.com/hosts/lists/ads-and-tracking-extended.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)593, null, "This is a small attempt to limit my exposure to sites that fall under the umbrella of “fake news.” It blocks sites that willfully and regularly spread clickbait, hoaxes, propaganda and disinformation.", "https://github.com/marktron/fakenews#purpose", null, "moustache@gmail.com", null, "https://github.com/marktron/fakenews", "https://github.com/marktron/fakenews/issues", (short)2, "fakenews", null, new DateTime(2016, 12, 17, 6, 15, 59, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 3, 29, 16, 41, 1, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/marktron/fakenews/master/fakenews", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)592, null, "A occasionally updated collection of social media domains in hosts file format.", "https://github.com/Sinfonietta/hostfiles", null, null, "https://github.com/Sinfonietta/hostfiles", "https://github.com/Sinfonietta/hostfiles/issues", (short)2, "Social Hosts", null, new DateTime(2016, 3, 6, 16, 55, 18, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 2, 7, 5, 47, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Sinfonietta/hostfiles/master/social-hosts", null, null },
                    { (short)591, null, "A occasionally updated collection of snuff domains in hosts file format.", null, null, null, "https://github.com/Sinfonietta/hostfiles", "https://github.com/Sinfonietta/hostfiles/issues", (short)2, "Snuff Hosts", null, new DateTime(2017, 9, 15, 16, 20, 51, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 6, 6, 5, 25, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Sinfonietta/hostfiles/master/snuff-hosts", null, null },
                    { (short)590, null, "A occasionally updated collection of porn domains in hosts file format.", "https://github.com/Sinfonietta/hostfiles", null, null, "https://github.com/Sinfonietta/hostfiles", "https://github.com/Sinfonietta/hostfiles/issues", (short)2, "Pornography Hosts", null, new DateTime(2016, 2, 22, 17, 16, 24, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 21, 20, 18, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Sinfonietta/hostfiles/master/pornography-hosts", null, null },
                    { (short)589, null, "A occasionally updated collection gambling domains in hosts file format.", "https://github.com/Sinfonietta/hostfiles", null, null, "https://github.com/Sinfonietta/hostfiles", "https://github.com/Sinfonietta/hostfiles/issues", (short)2, "Gambling Hosts", null, new DateTime(2016, 3, 8, 22, 13, 19, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 21, 20, 20, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Sinfonietta/hostfiles/master/gambling-hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)617, null, "Ad server list for use with hosts files to block ads", "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=1&mimetype=plaintext", "https://www.patreon.com/blocklist", null, " https://pgl.yoyo.org/adservers/", null, (short)40, "Peter Lowe's List (Hosts)", "https://pgl.yoyo.org/as/policy.php", null, (short)1, new DateTime(2019, 4, 14, 13, 26, 12, 0, DateTimeKind.Unspecified), "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=1&mimetype=plaintext", "https://raw.githubusercontent.com/StevenBlack/hosts/master/data/yoyo.org/hosts", null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)689, null, null, null, null, null, "https://github.com/xxcriticxx/.pl-host-file", "https://github.com/xxcriticxx/.pl-host-file/issues", (short)11, ".pl-host-file", null, new DateTime(2016, 10, 21, 1, 43, 26, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 7, 2, 20, 16, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/xxcriticxx/.pl-host-file/master/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)693, null, null, null, "https://www.paypal.me/mitchellkrog/", "mitchellkrog@gmail.com", null, "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist", "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist/issues", (short)2, "Ultimate Hosts Blacklist - Hosts", null, null, (short)1, new DateTime(2019, 4, 18, 6, 14, 24, 0, DateTimeKind.Unspecified), "https://hosts.ubuntu101.co.za/hosts", null, null },
                    { (short)811, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Mini", null, null, (short)1, new DateTime(2019, 4, 16, 2, 41, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/badmojr/1Hosts/master/mini/hosts.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1590, null, "There's categories that cover unusual malware and phishing domains that very few other lists seem to cover.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Dandelion Sprout's Anti-Malware List (Hosts)", null, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1574, null, "Constantly updated hosts file. Good addition for uBlock Origin filters in a browser", "https://github.com/mtxadmin/ublock/issues", null, null, "https://github.com/mtxadmin/ublock/blob/master/docs/hosts_file_en.md", "https://github.com/mtxadmin/ublock/issues", (short)5, "Yet another small hosts file", null, null, (short)1, "https://raw.githubusercontent.com/mtxadmin/ublock/master/hosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1566, null, "This ad blocker list aims to block mobile ads which includes in-app ads.", "https://github.com/biroloter/Mobile-Ad-Hosts#mobile-ad-hosts", null, null, "https://github.com/biroloter/Mobile-Ad-Hosts", "https://github.com/biroloter/Mobile-Ad-Hosts/issues", (short)19, "Mobile-Ad-Hosts", null, null, (short)1, new DateTime(2018, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/biroloter/Mobile-Ad-Hosts/master/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1563, null, "Hosts file for annoying ads", "https://github.com/xorcan/hosts", null, null, "https://github.com/xorcan/hosts", "https://github.com/xorcan/hosts/issues", (short)4, "xorcan Türk ad-list (Turkish)", null, null, (short)1, "https://raw.githubusercontent.com/xorcan/hosts/master/xhosts.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1559, null, "This hosts file blocks the BBC News website Breaking News banner", "https://raw.githubusercontent.com/BreakingTheNews/BreakingTheNews.github.io/master/hosts", null, null, "https://github.com/BreakingTheNews/BreakingTheNews.github.io", "https://github.com/BreakingTheNews/BreakingTheNews.github.io/issues", (short)5, "Breaking the News", null, new DateTime(2016, 3, 6, 13, 36, 59, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2016, 3, 6, 13, 36, 59, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/BreakingTheNews/BreakingTheNews.github.io/master/hosts", null, null },
                    { (short)1523, null, "Is a comprehensive hosts file which blocks known ad, exploit, and tracking servers, taken from MVPS, PGL Yoyo, Malware Domain List, hpHosts and AdAway, along with some supplementary entries for increased protection, then merged, sorted and deduped. This list is compatible with all operating systems that make use of a hosts file (obviously this includes Windows, OS X, LiGnux and more). It works great with mobile VPN ad-blocking solutions too. Notably enhanced privacy and security awaits you. This file will be updated once a week, along with an IPv6 version, and an experimental version for both IPv4 and IPv6.", null, null, null, "https://github.com/bongochong/CombinedPrivacyBlockLists", null, (short)9, "Combined Privacy Block Lists HOSTS", null, new DateTime(2019, 3, 11, 22, 39, 55, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 15, 8, 52, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/bongochong/CombinedPrivacyBlockLists/master/newhosts-final.hosts", null, null },
                    { (short)1518, null, null, null, null, null, "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist", "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist/issues", (short)2, "Ultimate Hosts Blacklist", null, new DateTime(2019, 3, 6, 20, 4, 34, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 21, 16, 4, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Ultimate.Hosts.Blacklist/master/hosts/hosts0", null, null },
                    { (short)1495, null, "Unified hosts combined from wally3k pihole lists and possibly without false positives", null, null, null, "https://github.com/tankmohit/UnifiedHosts", null, (short)5, "tankmohit's AllUnifiedHosts", null, new DateTime(2017, 9, 21, 8, 36, 49, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2017, 11, 5, 17, 51, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/tankmohit/UnifiedHosts/master/hosts.all", null, null },
                    { (short)1481, null, null, null, null, null, "https://github.com/jawz101/MobileAdTrackers", "https://github.com/jawz101/MobileAdTrackers/issues", (short)5, "jawz101 MobileAdTrackers", null, new DateTime(2018, 1, 2, 5, 46, 5, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 19, 13, 49, 25, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jawz101/MobileAdTrackers/master/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1476, null, null, null, null, null, "https://hblock.molinero.dev/", null, (short)2, "hBlock Hosts for Android", null, null, (short)1, new DateTime(2019, 4, 20, 3, 1, 12, 0, DateTimeKind.Unspecified), "https://hblock.molinero.dev/hosts_android.zip", null, null },
                    { (short)1475, null, null, null, null, null, "https://hblock.molinero.dev/", null, (short)2, "hBlock Hosts", null, null, (short)1, new DateTime(2019, 4, 20, 2, 21, 12, 0, DateTimeKind.Unspecified), "https://hblock.molinero.dev/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1471, null, null, null, null, null, "https://getadhell.com", null, (short)5, "AdHell Standard", null, null, (short)1, "https://getadhell.com/standard-package.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1470, null, "Privacy protection at its best.", null, null, null, "https://github.com/EnergizedProtection/block", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Xtreme Extension", null, new DateTime(2019, 3, 1, 15, 10, 25, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 1, 18, 12, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/xtreme/formats/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1458, null, "Host file to block ads, tracking and more!", null, null, "anudeep@protonmail.com", null, "https://github.com/anudeepND/blacklist", "https://github.com/anudeepND/blacklist/issues", (short)2, "anudeepND facebook", null, new DateTime(2017, 11, 25, 9, 12, 55, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 2, 9, 8, 2, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/anudeepND/blacklist/master/facebook.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1302, null, "A custom hosts list that aim to re-block whitelisted domains but seems not trusted by self opinion, this not recommend for general use and company setup.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/hosts/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=label%3A%22Hosts+File%22", (short)13, "kowith337's Custom leftover hosts", null, new DateTime(2018, 2, 12, 6, 10, 24, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 3, 12, 28, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/hosts/hosts_leftover.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/hosts/hosts_leftover.txt", null },
                    { (short)1301, null, "This aim to block non-formal hosts that serve all Facebook contents and resources from alternative \"Free Basics\" servers that it happen when you're using on mobile data over the carrier that collaborate with Facebook to have THAT service! Note this is an old version that seems to have a lots of offline domains but keep it for check with dead-hosts, or if you're not sure because most subdomains and CDNs of \"Facebook Zero\" seems to be accessed when you're using mobile data only.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/hosts/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=label%3A%22Hosts+File%22", (short)13, "Facebook Zero Hosts Block (Test List)", null, new DateTime(2018, 12, 25, 8, 55, 57, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 13, 13, 32, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/hosts/test/hosts_facebook0.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/hosts/test/hosts_facebook0.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1299, null, "Contains all data and is only recommended for obsessive cleaning. Compared to Basic Hosts, Full Hosts additionally blocks the following: JS Miner mining, Baidu group statistics all-weather positioning record, various statistical services (only JS, no shielded console), common download hijacking, 360 and Baidu portions of software downloada, CNNIC root certificate hijacking, and religious content sites such as Falun Gong that may cause discomfort", "https://hosts.nfz.moe/", null, "neofelhz+github@gmail.com", null, "https://github.com/neofelhz/neoHosts", "https://github.com/neofelhz/neoHosts/issues", (short)2, "NeoHosts Basic", null, null, (short)1, new DateTime(2019, 3, 21, 2, 50, 10, 0, DateTimeKind.Unspecified), "https://hosts.nfz.moe/basic/hosts", null, null },
                    { (short)1298, null, "Contains all data and is only recommended for obsessive cleaning. Compared to Basic Hosts, Full Hosts additionally blocks the following: JS Miner mining, Baidu group statistics all-weather positioning record, various statistical services (only JS, no shielded console), common download hijacking, 360 and Baidu portions of software downloada, CNNIC root certificate hijacking, and religious content sites such as Falun Gong that may cause discomfort", "https://hosts.nfz.moe/", null, "neofelhz+github@gmail.com", null, "https://github.com/neofelhz/neoHosts", "https://github.com/neofelhz/neoHosts/issues", (short)2, "NeoHosts Full", null, null, (short)1, new DateTime(2019, 3, 21, 2, 46, 10, 0, DateTimeKind.Unspecified), "https://hosts.nfz.moe/full/hosts", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1295, null, "iVOID.hosts is dedicated to providing AdGuard Pro for iOS users with custom built, privacy & security focused hosts files. Also for use with Linux workstations & uBlock Origin for Firefox.", null, null, "intr0@intr0.com", null, "https://intr0.com/", "https://gitlab.com/intr0/iVOID.GitLab.io/issues", (short)9, "iVOID.hosts", null, new DateTime(2018, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 10, 23, 39, 25, 0, DateTimeKind.Unspecified), "https://gitlab.com/intr0/iVOID.GitLab.io/raw/master/iVOID.hosts", "https://notabug.org/-intr0/iVOID/raw/master/iVOID.hosts", "http://w2caclgy62idhzyut23ucimqw5tsmfbl4b2iyjzpvngatast2fiqxbyd.onion/ivoid/iVOID.hosts" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1293, null, "This serves as a template and guidance for people who want to learn how to make their own «hosts» files, or how to make them optimalised for uBlock Origin. This template contains all conventionally used tags, with added notes on how they differ from the tags that are used in adblock lists.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Adblock List Template (Combined hosts and uBlock Origin)", null, new DateTime(2018, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)1, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Adblock%20list%20templates/Adblock%20list%20template%20-Hosts%20and%20uBlock%20Origin-.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Adblock%20list%20templates/Adblock%20list%20template%20-Hosts%20and%20uBlock%20Origin-.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Adblock%20list%20templates/Adblock%20list%20template%20-Hosts%20and%20uBlock%20Origin-.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)867, null, "This aim to block non-formal hosts that serve all Facebook contents and resources from alternative \"Free Basics\" servers that it happen when you're using on mobile data over the carrier that collaborate with Facebook to have THAT service! The static version will list related sites of Facebook under Free Baiscs (include internet.org) and regional CDN that begin with z-m- (scontent, static, video).", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/hosts/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=label%3A%22Hosts+File%22", (short)13, "Facebook Zero Hosts Block (Static)", null, new DateTime(2018, 11, 13, 14, 7, 15, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 13, 13, 32, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/hosts/static/hosts_facebook0_noregionsv.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/hosts/static/hosts_facebook0_noregionsv.txt", null },
                    { (short)866, null, "This aim to block non-formal hosts that serve all Facebook contents and resources from alternative \"Free Basics\" servers that it happen when you're using on mobile data over the carrier that collaborate with Facebook to have THAT service! This list will follow the update after routine check results of dead-hosts.", "https://github.com/kowith337/PersonalFilterListCollection/blob/master/hosts/readme.md", null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=label%3A%22Hosts+File%22", (short)13, "Facebook Zero Hosts Block", null, new DateTime(2018, 11, 4, 12, 51, 35, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 13, 13, 32, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/hosts/hosts_facebook0.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/hosts/hosts_facebook0.txt", null },
                    { (short)845, null, "List of all regional subdomains of 'adservice.google.com' and 'id.google.com'", null, null, null, "https://github.com/kowith337/PersonalFilterListCollection", "https://github.com/kowith337/PersonalFilterListCollection/issues?q=is%3Aissue+label%3A%22Hosts+File%22", (short)13, "All of adservice.google.com and id.google.com regional hosts", null, new DateTime(2018, 7, 13, 11, 10, 35, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 3, 13, 13, 32, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/kowith337/PersonalFilterListCollection/master/hosts/hosts_google_adservice_id.txt", "https://gitlab.com/kowith337/PersonalFilterListCollection/raw/master/hosts/hosts_google_adservice_id.txt", null },
                    { (short)827, null, null, null, null, null, "https://github.com/w13d/adblockListABP-PiHole", "https://github.com/w13d/adblockListABP-PiHole/issues", (short)5, "List adblock Indonesia", null, new DateTime(2017, 10, 30, 6, 37, 5, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2018, 11, 8, 4, 53, 6, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/w13d/adblockListABP-PiHole/master/list.txt", null, null },
                    { (short)817, null, "This file is in hosts file format and works best when used in for example pi-hole, routers, etc. It aims to reduce your exposure to ads, tracking, scams & badware, and occasionally some annoyances on (mostly) Swedish websites. As always with hosts file, use at your own risk and make sure that you know what you're doing. This is not as powerful as the filter list for uBO.", "https://github.com/lassekongo83/Frellwits-filter-lists#available-lists", null, null, "https://github.com/lassekongo83/Frellwits-filter-lists", "https://github.com/lassekongo83/Frellwits-filter-lists/issues", (short)4, "Frellwit's Swedish Hosts File", null, new DateTime(2018, 9, 23, 17, 51, 40, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 14, 16, 5, 41, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/lassekongo83/Frellwits-filter-lists/master/Frellwits-Swedish-Hosts-File.txt", "https://repo.or.cz/Adblock-list-backups-Frellwits-filter-lists.git/blob_plain/refs/heads/master:/Frellwits-Swedish-Hosts-File.txt", null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)494, null, "This list of hosts is compiled from server logs on my own servers and forms the basis of the bad referrers domain lists for The Nginx Ultimate Bad Bot Blocker at https://github.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker and the Apache Ultimate Bad Bot Blocker at https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker", null, "https://www.paypal.me/mitchellkrog/", "mitchellkrog@gmail.com", null, "https://github.com/mitchellkrogza/Badd-Boyz-Hosts", "https://github.com/mitchellkrogza/Badd-Boyz-Hosts/issues", (short)2, "Badd Boyz Hosts", null, new DateTime(2017, 2, 22, 8, 37, 26, 0, DateTimeKind.Unspecified), null, (short)1, new DateTime(2019, 4, 8, 8, 2, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Badd-Boyz-Hosts/master/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1044, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Russia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 2, 0, 38, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Russia.txt", null, null },
                    { (short)976, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - India", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/India.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)2006, null, null, null, null, null, null, null, (short)2, "Prigent Adult", null, null, (short)2, "https://block.energized.pro/assets/mirror/ut1-adult.txt", null, null },
                    { (short)1885, null, "Phishing filter list by Broer ICT", null, null, null, "https://github.com/broerict/blacklists", "https://github.com/broerict/blacklists/issues", (short)4, "Broer ICT Blacklist Phishing", null, null, (short)2, "https://raw.githubusercontent.com/broerict/blacklists/master/phishing", null, null },
                    { (short)1886, null, "This is a Pi-hole list to block unwanted domains that serve ads on Macedonian websites.", null, null, null, "https://github.com/cchevy/macedonian-pi-hole-blocklist", "https://github.com/cchevy/macedonian-pi-hole-blocklist/issues", (short)5, "Macedonian Pi-hole Blocklist", null, null, (short)2, "https://raw.githubusercontent.com/cchevy/macedonian-pi-hole-blocklist/master/hosts.txt", null, null },
                    { (short)1894, null, "This is the \"SAFE LIST\" tested to not break legitimate functionality for commonly used software", null, null, null, "https://github.com/dex4k/dex4kblocklist", "https://github.com/dex4k/dex4kblocklist/issues", (short)5, "dex4k Blocklist", null, null, (short)2, "https://raw.githubusercontent.com/dex4k/dex4kblocklist/master/dex4kblocklist.txt", null, null },
                    { (short)1895, null, "This is a secondary blocklist created as, although I believe the blocking to be legitimate, blocking these domains can break popular apps", null, null, null, "https://github.com/dex4k/dex4kblocklist", "https://github.com/dex4k/dex4kblocklist/issues", (short)5, "dex4k Blocklist Extras", null, null, (short)2, "https://raw.githubusercontent.com/dex4k/dex4kblocklist/master/dex4kblocklistextras.txt", null, null },
                    { (short)1896, null, "Blocks ads and trackers, and anything inbetween.", null, null, null, "https://github.com/DRSDavidSoft/additional-hosts", "https://github.com/DRSDavidSoft/additional-hosts/issues", (short)2, "Additional Hosts - Adservers and Trackers", null, null, (short)2, "https://raw.githubusercontent.com/DRSDavidSoft/additional-hosts/master/domains/blacklist/adservers-and-trackers.txt", null, null },
                    { (short)2026, null, null, null, null, null, "https://hblock.molinero.dev/", null, (short)2, "hBlock Hosts Domains", null, null, (short)2, "https://hblock.molinero.dev/hosts_domains.txt", null, null },
                    { (short)2028, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Malware", null, null, (short)2, "https://blocklist.site/app/dl/malware", null, null },
                    { (short)1897, null, "Blocks various scams and popups when visiting Iranian websites. E.g. fake Download buttons, Pop-unders, etc", null, null, null, "https://github.com/DRSDavidSoft/additional-hosts", "https://github.com/DRSDavidSoft/additional-hosts/issues", (short)2, "Additional Hosts - Unwanted Iranian", null, null, (short)2, "https://raw.githubusercontent.com/DRSDavidSoft/additional-hosts/master/domains/blacklist/unwanted-iranian.txt", null, null },
                    { (short)1898, null, "For use in a tool like Pi-hole. Covers manually spotted trackers, marketing bullshit and other nuisances. May be considered a bit aggressive — but not too much. Shouldn't break any sites.", null, null, null, "https://github.com/herrbischoff/trackers", "https://github.com/herrbischoff/trackers/issues", (short)11, "Manually Spotted Trackers and Other Nuisances", null, null, (short)2, "https://raw.githubusercontent.com/herrbischoff/trackers/master/trackers.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1411, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Religion Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/religion", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/religion/domains", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1884, null, "Malware filter list by Broer ICT", null, null, null, "https://github.com/broerict/blacklists", "https://github.com/broerict/blacklists/issues", (short)4, "Broer ICT Blacklist Malware", null, null, (short)2, "https://raw.githubusercontent.com/broerict/blacklists/master/malware", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1409, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Redirector Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/redirector", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/redirector/domains", null, null },
                    { (short)1405, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Travel Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/travel", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/travel/domains", null, null },
                    { (short)1403, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Sports Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/sports", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/sports/domains", null, null },
                    { (short)1401, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Restaurants Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/restaurants", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/restaurants/domains", null, null },
                    { (short)1399, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Martialarts Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/martialarts", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/martialarts/domains", null, null },
                    { (short)1397, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Humor Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/humor", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/humor/domains", null, null },
                    { (short)1395, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Radiotv Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/radiotv", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/radiotv/domains", null, null },
                    { (short)1393, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Porn Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/porn", (short)2, new DateTime(2019, 4, 8, 2, 0, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/porn/domains", null, null },
                    { (short)1391, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Politics Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/politics", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/politics/domains", null, null },
                    { (short)1389, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Podcasts Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/podcasts", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/podcasts/domains", null, null },
                    { (short)1387, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List News Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/news", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/news/domains", null, null },
                    { (short)1407, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Recreation Wellness Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/recreation/wellness", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/recreation/wellness/domains", null, null },
                    { (short)1385, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Music Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/music", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/music/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1883, null, "Ad filter list by Broer ICT", null, null, null, "https://github.com/broerict/blacklists", "https://github.com/broerict/blacklists/issues", (short)4, "Broer ICT Blacklist Ads", null, null, (short)2, "https://raw.githubusercontent.com/broerict/blacklists/master/ads", null, null },
                    { (short)1881, null, null, null, null, null, "https://github.com/angelics/pfbng", "https://github.com/angelics/pfbng/issues", (short)5, "pfbng Ads", null, null, (short)2, "https://raw.githubusercontent.com/angelics/pfbng/master/ads/ads-domain-list.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1449, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Webradio Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/webradio", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/webradio/domains", null, null },
                    { (short)1447, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Webphone Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/webphone", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/webphone/domains", null, null },
                    { (short)1445, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Webmail Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/webmail", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/webmail/domains", null, null },
                    { (short)1443, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Weapons Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/weapons", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/weapons/domains", null, null },
                    { (short)1441, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Warez Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/warez", (short)2, new DateTime(2019, 4, 8, 2, 0, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/warez/domains", null, null },
                    { (short)1439, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Violence Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/violence", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/violence/domains", null, null },
                    { (short)1437, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Urlshortener Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/urlshortener", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/urlshortener/domains", null, null },
                    { (short)1435, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Program Updates Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/updatesites", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/updatesites/domains", null, null },
                    { (short)1433, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Tracker Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/tracker", (short)2, new DateTime(2019, 4, 3, 2, 0, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/tracker/domains", null, null },
                    { (short)1431, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Spyware Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/spyware", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/spyware/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1882, null, null, null, null, null, "https://github.com/blocktastic/pihole", "https://github.com/blocktastic/pihole/issues", (short)5, "Blocktastic Pi-Hole Blocklist", null, null, (short)2, "https://raw.githubusercontent.com/blocktastic/pihole/master/blocktastic.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1429, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Socialnet Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/socialnet", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/socialnet/domains", null, null },
                    { (short)1425, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Sex Lingerie Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/sex/lingerie", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/sex/lingerie/domains", null, null },
                    { (short)1423, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Sex Education Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/sex/education", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/sex/education/domains", null, null },
                    { (short)1421, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Searchengines Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/searchengines", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/searchengines/domains", null, null },
                    { (short)1419, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Science Chemistry Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/science/chemistry", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/science/chemistry/domains", null, null },
                    { (short)1417, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Science Astronomy Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/science/astronomy", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/science/astronomy/domains", null, null },
                    { (short)1415, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Ringtones Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/ringtones", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/ringtones/domains", null, null },
                    { (short)1413, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Remotecontrol Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/remotecontrol", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/remotecontrol/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1873, null, "Malware, advert and tracking blacklist", null, null, null, "https://github.com/mkb2091/blockconvert", null, (short)4, "BlockConvert (Whitelist domains)", null, null, (short)2, "https://raw.githubusercontent.com/mkb2091/blockconvert/master/output/whitelist_domains.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1879, null, "A block list of malicious hosts that are being used for malware distribution. Smaller than the official version with de-duplicated malware domains", "https://gitlab.com/curben/urlhaus-filter/blob/master/README.md", null, null, "https://gitlab.com/curben/urlhaus-filter", "https://gitlab.com/curben/urlhaus-filter/issues", (short)28, "urlhaus-filter-hosts", null, null, (short)2, new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://gitlab.com/curben/urlhaus-filter/raw/master/urlhaus-filter-hosts.txt", "https://cdn.statically.io/gl/curben/urlhaus-filter/raw/master/urlhaus-filter-hosts.txt", "https://glcdn.githack.com/curben/urlhaus-filter/raw/master/urlhaus-filter-hosts.txt" },
                    { (short)1880, null, "A block list of malicious hosts that are being used for malware distribution. This is a lite version by including online hosts only.", "https://gitlab.com/curben/urlhaus-filter/blob/master/README.md", null, null, "https://gitlab.com/curben/urlhaus-filter", "https://gitlab.com/curben/urlhaus-filter/issues", (short)28, "urlhaus-filter-hosts-online", null, null, (short)2, new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "https://gitlab.com/curben/urlhaus-filter/raw/master/urlhaus-filter-hosts-online.txt", "https://cdn.statically.io/gl/curben/urlhaus-filter/raw/master/urlhaus-filter-online.txt", "https://glcdn.githack.com/curben/urlhaus-filter/raw/master/urlhaus-filter-online.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1427, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Shopping Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/shopping", (short)2, new DateTime(2019, 3, 26, 3, 0, 3, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/shopping/domains", null, null },
                    { (short)1451, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Webtv Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/webtv", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/webtv/domains", null, null },
                    { (short)1383, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Movies Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/movies", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/movies/domains", null, null },
                    { (short)1379, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Military Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/military", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/military/domains", null, null },
                    { (short)1345, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Trading Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/trading", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/trading/domains", null, null },
                    { (short)1343, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Realestate Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/realestate", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/realestate/domains", null, null },
                    { (short)1341, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Other Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/other", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/other/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1923, null, null, null, null, null, "https://github.com/chimbori/lite-apps", "https://github.com/chimbori/lite-apps/issues", (short)5, "Lite App Manifests - Coin Miners", null, null, (short)2, "https://raw.githubusercontent.com/chimbori/lite-apps/master/blocklists/src/Coin%20Miners/UserSuggested.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1339, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Moneylending Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/moneylending", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/moneylending/domains", null, null },
                    { (short)1337, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Insurance Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/insurance", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/insurance/domains", null, null },
                    { (short)1335, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Finance Banking Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/finance/banking", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/finance/banking/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1924, null, null, null, null, null, "https://github.com/chimbori/lite-apps", "https://github.com/chimbori/lite-apps/issues", (short)5, "Lite App Manifests - Paid Content Links", null, null, (short)2, "https://raw.githubusercontent.com/chimbori/lite-apps/master/blocklists/src/Adware%20and%20Malware/PaidContentLinks.txt", null, null },
                    { (short)1925, null, null, null, null, null, "https://github.com/chimbori/lite-apps", "https://github.com/chimbori/lite-apps/issues", (short)5, "Lite App Manifests - User Suggested Adware and Malware", null, null, (short)2, "https://raw.githubusercontent.com/chimbori/lite-apps/master/blocklists/src/Adware%20and%20Malware/UserSuggested.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1333, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Education Schools Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/education/schools", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/education/schools/domains", null, null },
                    { (short)1347, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Fortunetelling Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/fortunetelling", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/fortunetelling/domains", null, null },
                    { (short)1331, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Dynamic Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/dynamic", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/dynamic/domains", null, null },
                    { (short)1327, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Downloads Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/downloads", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/downloads/domains", null, null },
                    { (short)1325, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Dating Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/dating", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/dating/domains", null, null },
                    { (short)1323, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Costtraps Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/costtraps", (short)2, new DateTime(2019, 4, 8, 2, 0, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/costtraps/domains", null, null },
                    { (short)1321, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Chat Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/chat", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/chat/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)2012, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Tracking", null, null, (short)2, "https://blocklist.site/app/dl/tracking", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1319, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Automobile Planes Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/automobile/planes", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/automobile/planes/domains", null, null },
                    { (short)1317, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Automobile Cars Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/automobile/cars", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/automobile/cars/domains", null, null },
                    { (short)1315, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Automobile Boats Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/automobile/boats", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/automobile/boats/domains", null, null },
                    { (short)1313, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Automobile Bikes Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/automobile/bikes", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/automobile/bikes/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1750, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Xtreme Extension (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/xtreme/formats/domains.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1329, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Drugs Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/drugs", (short)2, new DateTime(2019, 4, 8, 2, 0, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/drugs/domains", null, null },
                    { (short)1381, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Models Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/models", (short)2, new DateTime(2019, 4, 4, 2, 0, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/models/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1349, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Forum Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/forum", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/forum/domains", null, null },
                    { (short)1353, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Government Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/government", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/government/domains", null, null },
                    { (short)1377, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Library Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/library", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/library/domains", null, null },
                    { (short)1375, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Jobsearch Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/jobsearch", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/jobsearch/domains", null, null },
                    { (short)1373, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Isp Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/isp", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/isp/domains", null, null },
                    { (short)1371, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Imagehosting Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/imagehosting", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/imagehosting/domains", null, null },
                    { (short)1369, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hospitals Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hospitals", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hospitals/domains", null, null },
                    { (short)1367, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Homestyle Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/homestyle", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/homestyle/domains", null, null },
                    { (short)1365, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Pets Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/pets", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/pets/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1903, null, "Custom blocklist to include in the main list.", null, null, null, "https://github.com/mhhakim/pihole-blocklist", "https://github.com/mhhakim/pihole-blocklist/issues", (short)5, "mhhakim Pihole Blocklist", null, null, (short)2, "https://raw.githubusercontent.com/mhhakim/pihole-blocklist/master/custom-blocklist.txt", null, null },
                    { (short)1904, null, null, null, null, null, "https://github.com/Phentora/AdguardPersonalList", "https://github.com/Phentora/AdguardPersonalList/issues", (short)5, "Adguard Personal List", null, null, (short)2, "https://raw.githubusercontent.com/Phentora/AdguardPersonalList/master/blocklist.txt", null, null },
                    { (short)1905, null, "Hi, this is a list of ad, tracking and other shit sources on the Internet. The original intention was to use this list with Pi-hole in LXC container on the Turris Omnia router for Czech users.", null, null, null, "https://github.com/qxstyles/turris-hole-czech-block-list", "https://github.com/qxstyles/turris-hole-czech-block-list/issues", (short)5, "Turris Hole Block List", null, null, (short)2, "https://raw.githubusercontent.com/qxstyles/turris-hole-czech-block-list/master/turris-hole-czech-block-list", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1351, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Gamble Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/gamble", (short)2, new DateTime(2019, 4, 1, 2, 0, 3, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/gamble/domains", null, null },
                    { (short)1363, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Gardening Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/gardening", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/gardening/domains", null, null },
                    { (short)1359, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Games-misc Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/games-misc", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/games-misc/domains", null, null },
                    { (short)1357, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Cooking Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/cooking", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/cooking/domains", null, null },
                    { (short)1355, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hacking Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hacking", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hacking/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1908, null, "Maltrail is a malicious traffic detection system, utilizing publicly available (black)lists containing malicious and/or generally suspicious trails, along with static trails compiled from various AV reports and custom user defined lists.", null, null, null, "https://github.com/stamparm/maltrail", "https://github.com/stamparm/maltrail/issues", (short)2, "Maltrail - Potentially Unwanted Applications", null, null, (short)2, "https://raw.githubusercontent.com/stamparm/maltrail/master/trails/static/suspicious/pua.txt", null, null },
                    { (short)1909, null, null, null, null, null, "https://github.com/svetlyobg/svet-custom-domains", "https://github.com/svetlyobg/svet-custom-domains/issues", (short)5, "Svet Custom Domains", null, null, (short)2, "https://raw.githubusercontent.com/svetlyobg/svet-custom-domains/master/ads-domains", null, null },
                    { (short)1914, null, "List below is all domains I've captured that Samsung Smart TVs use to do anything other than watch YouTtube, Netflix, and Google Play. Block all of them for total privacy and no ads. Note the comments.", null, null, null, "https://github.com/UnbendableStraw/samsungnosnooping", "https://github.com/UnbendableStraw/samsungnosnooping/issues", (short)5, "Samsung No Snooping", null, null, (short)2, "https://raw.githubusercontent.com/UnbendableStraw/samsungnosnooping/master/README.md", null, null },
                    { (short)1916, null, "Custom block list annoying ads, trackers, scam sites etc. for Pi-hole (DNS Blocking)", null, null, null, "https://github.com/xlimit91/xlimit91-block-list", "https://github.com/xlimit91/xlimit91-block-list/issues", (short)5, "xlimit91 Block List for Pi-Hole", null, null, (short)2, "https://raw.githubusercontent.com/xlimit91/xlimit91-block-list/master/blacklist.txt", null, null },
                    { (short)2005, null, null, null, null, null, null, null, (short)2, "Prigent Cryptojacking", null, null, (short)2, "https://block.energized.pro/assets/mirror/ut1-cryptojacking.txt", null, null },
                    { (short)1918, null, null, null, null, null, "https://github.com/ZYX2019/host-block-list", "https://github.com/ZYX2019/host-block-list/issues", (short)5, "ZYX2019 Host Block List", null, null, (short)2, "https://raw.githubusercontent.com/ZYX2019/host-block-list/master/Custom.txt", null, null },
                    { (short)1919, null, "Blocklist for Ad Redirects", null, null, null, "https://github.com/zznidar/BAR", "https://github.com/zznidar/BAR/issues", (short)4, "BAR-List (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/zznidar/BAR/master/BAR-list", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1361, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Hobby Games-online Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/hobby/games-online", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/hobby/games-online/domains", null, null },
                    { (short)1309, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Alcohol Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/alcohol", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/alcohol/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1457, null, "The SteamScamSites domains list, but without comments or dead/down domains ! A lighter version, called the Ashes version.", "https://github.com/PoorPocketsMcNewHold/steamscamsites/blob/master/README.md", null, "poorpocketsmcnewhold@pm.me", null, "https://poorpocketsmcnewhold.github.io/SteamScamSites/", "https://github.com/PoorPocketsMcNewHold/steamscamsites/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)14, "SteamScamSites Ashes version", null, new DateTime(2019, 2, 9, 12, 56, 49, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 23, 12, 41, 44, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PoorPocketsMcNewHold/SteamScamSites/master/steamscamsitesashes", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1465, null, "Experimental list to attempt to block YouTube video ads.", null, null, null, "https://github.com/CitizenXVIL/Hosts", "https://github.com/CitizenXVIL/Hosts/issues", (short)5, "CitizenXVIL YouTube Hosts", null, null, (short)2, "https://raw.githubusercontent.com/CitizenXVIL/Hosts/master/Youtube%20hosts.txt", null, null },
                    { (short)1714, null, null, null, null, null, "https://github.com/XionKzn/PiHole-Lists/", "https://github.com/XionKzn/PiHole-Lists//issues", (short)5, "PiHole Lists - Quad9", null, null, (short)2, "https://raw.githubusercontent.com/XionKzn/PiHole-Lists/master/Quad9.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1752, "https://t.me/EnergizedProtection", "Lite pornware blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Lite Extension (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/porn-lite/formats/domains.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1711, null, null, null, null, null, "https://zonefiles.io/", null, (short)5, "Zonefiles Compromised Domains Live", null, null, (short)2, "https://zonefiles.io/f/compromised/domains/live/", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1753, "https://t.me/EnergizedProtection", "Regional annoyance blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Regional Extension (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/regional/formats/domains.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1710, null, null, null, null, null, "https://www.botvrij.eu/", null, (short)5, "Botvrij IOC List", null, null, (short)2, "https://www.botvrij.eu/data/ioclist.hostname.raw", null, null },
                    { (short)1704, null, "Domain name hosts for Pi-hole.", null, null, null, "https://in0de.synology.me", null, (short)5, "Synology's own", null, null, (short)2, "https://in0de.synology.me/own.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1700, null, "Completely block Youtube.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Youtube (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/youtube.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/youtube.txt" },
                    { (short)1699, null, "Completely block Youtube.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Youtube (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/youtubeparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/youtubeparsed" },
                    { (short)1698, null, "Completely block Google shorteners.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google shorteners (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/shortlinks.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/shortlinks.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)2013, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Scams", null, null, (short)2, "https://blocklist.site/app/dl/scam", null, null },
                    { (short)1715, null, null, null, null, null, "https://github.com/XionKzn/PiHole-Lists/", "https://github.com/XionKzn/PiHole-Lists//issues", (short)5, "PiHole Lists - Yahoo Ad Servers", null, null, (short)2, "https://raw.githubusercontent.com/XionKzn/PiHole-Lists/master/Yahoo_Ad_Servers.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1697, null, "Completely block Google shorteners.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google shorteners (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/shortlinksparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/shortlinksparsed" },
                    { (short)1695, null, "Completely block Google proxies.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google proxies (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/proxiessparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/proxiesparsed" },
                    { (short)1694, null, "Completely block Google products.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google products (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/products.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/products.txt" },
                    { (short)1693, null, "Completely block Google products.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google products (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/productsparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/productsparsed" },
                    { (short)1692, null, "Completely block Gmail services.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Gmail (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/mail.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/mail.txt" },
                    { (short)1691, null, "Completely block Gmail services.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Gmail (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/mailparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/mailparsed" },
                    { (short)1690, null, "Completely block general Google domains.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | General Google domains (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/general.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/general.txt" },
                    { (short)1689, null, "Completely block general Google domains.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | General Google domains (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/generalparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/generalparsed" },
                    { (short)1688, null, "Completely block Firebase services.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google fonts (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/fonts.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/fonts.txt" },
                    { (short)1687, null, "Completely block Google fonts services.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google fonts (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/fontsparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/fontsparsed" },
                    { (short)1686, null, "Completely block Firebase services.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Firebase (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/firebase.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/firebase.txt" },
                    { (short)1696, null, "Completely block Google products.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google proxies (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/proxies.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/proxies.txt" },
                    { (short)1685, null, "Completely block Firebase services.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Firebase (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/firebaseparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/firebaseparsed" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1716, null, null, null, null, null, "https://github.com/XionKzn/PiHole-Lists/", "https://github.com/XionKzn/PiHole-Lists//issues", (short)5, "PiHole Lists - Spyware", null, null, (short)2, "https://raw.githubusercontent.com/XionKzn/PiHole-Lists/master/PiHole_HOSTS_Spyware.txt", null, null },
                    { (short)1718, null, null, null, null, null, "https://github.com/XionKzn/PiHole-Lists/", "https://github.com/XionKzn/PiHole-Lists//issues", (short)5, "PiHole Lists - Blocklist", null, null, (short)2, "https://raw.githubusercontent.com/XionKzn/PiHole-Lists/master/Blocklist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1749, "https://t.me/EnergizedProtection", "Energized Adware, Malware & Pornware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Unified Protection (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/unified/formats/domains.txt", null, null },
                    { (short)1748, "https://t.me/EnergizedProtection", "Energized Adware & Malware Blocking. Flagship Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Ultimate Protection (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/ultimate/formats/domains.txt", null, null },
                    { (short)1747, "https://t.me/EnergizedProtection", "Energized Pornware Blocking.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Porn Protection (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/porn/formats/domains.txt", null, null },
                    { (short)1746, "https://t.me/EnergizedProtection", "Energized Basic Protection. Basic Protection to keep you safe in a balanced way!", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Basic Protection (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/basic/formats/domains.txt", null, null },
                    { (short)1745, "https://t.me/EnergizedProtection", "Energized Liteweight Protection. Best for Android/iOS Users.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Protection (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/blu/formats/domains.txt", null, null },
                    { (short)1744, "https://t.me/EnergizedProtection", "Energized Blu Go. Another Lite Pack from Energized.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Blu Go Protection (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/bluGo/formats/domains.txt", null, null },
                    { (short)1743, "https://t.me/EnergizedProtection", "True Lite Hosts from Energized. Only 1MB in Size.", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Spark Protection (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/spark/formats/domains.txt", null, null },
                    { (short)1735, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Pro (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/badmojr/1Hosts/master/Pro/domains.txt", null, null },
                    { (short)1734, null, "A merged hosts file from a variety of other lists.", null, null, "badmojr@gmail.com", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", "https://forum.xda-developers.com/android/general/badmojr-one-host-file-to-block-t3713360", null, (short)35, "1Hosts Pro", null, null, (short)2, "https://raw.githubusercontent.com/badmojr/1Hosts/master/Pro/hosts.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1733, null, "This repository contains lists of domains that very likely serve ads, analytics scripts, tracking pixels, widgets (webpage plugins), content enrichment (begging for mail subscription, sharing abilities), and represent affiliate or fake webpages. Usually lists get at least a monthly update.", null, null, null, "https://github.com/soteria-nou/domain-list", "https://github.com/soteria-nou/domain-list/issues", (short)32, "Soteria nou's domain list - Widgets", null, null, (short)2, "https://raw.githubusercontent.com/soteria-nou/domain-list/master/widgets.txt", null, null },
                    { (short)1717, null, null, null, null, null, "https://github.com/XionKzn/PiHole-Lists/", "https://github.com/XionKzn/PiHole-Lists//issues", (short)5, "PiHole Lists - Cerber Ransomware", null, null, (short)2, "https://raw.githubusercontent.com/XionKzn/PiHole-Lists/master/Cerber_Ransomware.txt", null, null },
                    { (short)1732, null, "This repository contains lists of domains that very likely serve ads, analytics scripts, tracking pixels, widgets (webpage plugins), content enrichment (begging for mail subscription, sharing abilities), and represent affiliate or fake webpages. Usually lists get at least a monthly update.", null, null, null, "https://github.com/soteria-nou/domain-list", "https://github.com/soteria-nou/domain-list/issues", (short)32, "Soteria nou's domain list - Fake sites", null, null, (short)2, "https://raw.githubusercontent.com/soteria-nou/domain-list/master/fake.txt", null, null },
                    { (short)1730, null, "This repository contains lists of domains that very likely serve ads, analytics scripts, tracking pixels, widgets (webpage plugins), content enrichment (begging for mail subscription, sharing abilities), and represent affiliate or fake webpages. Usually lists get at least a monthly update.", null, null, null, "https://github.com/soteria-nou/domain-list", "https://github.com/soteria-nou/domain-list/issues", (short)32, "Soteria nou's domain list - Analytics", null, null, (short)2, "https://raw.githubusercontent.com/soteria-nou/domain-list/master/analytics.txt", null, null },
                    { (short)1729, null, "This repository contains lists of domains that very likely serve ads, analytics scripts, tracking pixels, widgets (webpage plugins), content enrichment (begging for mail subscription, sharing abilities), and represent affiliate or fake webpages. Usually lists get at least a monthly update.", null, null, null, "https://github.com/soteria-nou/domain-list", "https://github.com/soteria-nou/domain-list/issues", (short)32, "Soteria nou's domain list - Affiliates", null, null, (short)2, "https://raw.githubusercontent.com/soteria-nou/domain-list/master/affiliate.txt", null, null },
                    { (short)1728, null, "This repository contains lists of domains that very likely serve ads, analytics scripts, tracking pixels, widgets (webpage plugins), content enrichment (begging for mail subscription, sharing abilities), and represent affiliate or fake webpages. Usually lists get at least a monthly update.", null, null, null, "https://github.com/soteria-nou/domain-list", "https://github.com/soteria-nou/domain-list/issues", (short)32, "Soteria nou's domain list - Ads", null, null, (short)2, "https://raw.githubusercontent.com/soteria-nou/domain-list/master/ads.txt", null, null },
                    { (short)1727, null, "Burner domains are short-lived domains, registered by criminals (under a phony name). Don't put legitimate domains here, even if they contain malware.", null, null, null, "https://github.com/gwillem/magento-malware-scanner/", "https://github.com/gwillem/magento-malware-scanner//issues", (short)4, "Magento Malware Skanner - Burner Domains", null, null, (short)2, "https://raw.githubusercontent.com/gwillem/magento-malware-scanner/master/rules/burner-domains.txt", null, null },
                    { (short)1725, null, "The following servers have been identified as part of various state-sponsored malware campaigns.", null, null, null, "https://github.com/parseword/nolovia/", "https://github.com/parseword/nolovia//issues", (short)5, "Nolovia state-sponsored malware blacklist file", null, null, (short)2, "https://raw.githubusercontent.com/parseword/nolovia/master/skel/hosts-government-malware.txt", null, null },
                    { (short)1724, null, null, null, null, null, "https://github.com/parseword/nolovia/", "https://github.com/parseword/nolovia//issues", (short)5, "Nolovia Supplemental Bad Host Index blacklist file", null, null, (short)2, "https://raw.githubusercontent.com/parseword/nolovia/master/skel/hosts-nolovia.txt", null, null },
                    { (short)1723, null, "Ads and Tracker which other lists may not found", null, null, null, "https://github.com/pirat28/IHateTracker/", "https://github.com/pirat28/IHateTracker//issues", (short)2, "I Hate Tracker", null, null, (short)2, "https://raw.githubusercontent.com/pirat28/IHateTracker/master/iHateTracker.txt", null, null },
                    { (short)1722, null, "Evil domains for our Collective Hosts File Project that are not present in any other lists.", null, null, null, "https://github.com/hell-sh/Evil-Domains", "https://github.com/hell-sh/Evil-Domains/issues", (short)11, "Evil Domains", null, null, (short)2, "https://raw.githubusercontent.com/hell-sh/Evil-Domains/master/evil-domains.txt", null, null },
                    { (short)1721, null, "My personal blocklist of iOS tracking, telemetry, and advertising domains.", null, null, null, "https://github.com/jakejarvis/ios-trackers/", "https://github.com/jakejarvis/ios-trackers//issues", (short)2, "iOS Tracker Blocklist", null, null, (short)2, "https://raw.githubusercontent.com/jakejarvis/ios-trackers/master/blocklist.txt", null, null },
                    { (short)1719, null, "A personal blocklist curated by KurzGedanke.", null, "https://blog.kurzgedanke.me/donate/", null, "https://github.com/KurzGedanke/kurzBlock/", "https://github.com/KurzGedanke/kurzBlock//issues", (short)2, "kurzBlock", null, null, (short)2, "https://raw.githubusercontent.com/KurzGedanke/kurzBlock/master/kurzBlock.txt", null, null },
                    { (short)1731, null, "This repository contains lists of domains that very likely serve ads, analytics scripts, tracking pixels, widgets (webpage plugins), content enrichment (begging for mail subscription, sharing abilities), and represent affiliate or fake webpages. Usually lists get at least a monthly update.", null, null, null, "https://github.com/soteria-nou/domain-list", "https://github.com/soteria-nou/domain-list/issues", (short)32, "Soteria nou's domain list - Enrichments", null, null, (short)2, "https://raw.githubusercontent.com/soteria-nou/domain-list/master/enrichments.txt", null, null },
                    { (short)1464, null, "Mobile ad/tracker list based on AdGuard's mobile ad filter.", null, null, null, "https://github.com/CitizenXVIL/Hosts", "https://github.com/CitizenXVIL/Hosts/issues", (short)5, "CitizenXVIL Hosts Mobile", null, null, (short)2, "https://raw.githubusercontent.com/CitizenXVIL/Hosts/master/mobile%20domains.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1684, null, "Completely block DoubleClick services.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | DoubleClick (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/doubleclick.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/doubleclick.txt" },
                    { (short)1682, null, "Completely block Google search domains.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google search (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/domains.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/domains.txt" },
                    { (short)1815, null, "Have you ever been searching for rare PC parts, but a lot the sites you visit refuse to tell you the murderous prices they charge unless you sign up as a member with them? Now you won't feel infuriated by it anymore! While this list is designed for «Google Hit Hider by Domain» to remove search results, it can also be used with other domains-list tools if you want more thorough blocking of them.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'PC component price hiders' List", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiPCPriceHiderList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiPCPriceHiderList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiPCPriceHiderList.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)2017, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Porn", null, null, (short)2, "https://blocklist.site/app/dl/porn", null, null },
                    { (short)2018, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Redirect", null, null, (short)2, "https://blocklist.site/app/dl/redirect", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1835, null, "List containing auto-translated site clones of StackOverflow and other services.", null, null, null, "https://github.com/Nebula-Mechanica/Anti-AutoTranslation-List", "https://github.com/Nebula-Mechanica/Anti-AutoTranslation-List/issues", (short)11, "Anti-AutoTranslation-List", null, new DateTime(2019, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), null, (short)2, "https://raw.githubusercontent.com/Nebula-Mechanica/Anti-AutoTranslation-List/master/anti-autotranslation-list.txt", "https://gitcdn.xyz/repo/Nebula-Mechanica/Anti-AutoTranslation-List/master/anti-autotranslation-list.txt", "https://rawcdn.githack.com/Nebula-Mechanica/Anti-AutoTranslation-List/master/anti-autotranslation-list.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1561, null, "A list of 400+ Admiral domains. These are provided for educational and research purposes only.", "https://github.com/jkrejcha/AdmiraList/", null, null, "https://github.com/jkrejcha/AdmiraList/", "https://github.com/jkrejcha/AdmiraList/issues", (short)5, "AdmiraList", null, new DateTime(2018, 11, 1, 22, 37, 32, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 31, 22, 51, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/jkrejcha/AdmiraList/master/AdmiraList.txt", null, null },
                    { (short)1536, null, "A general ad & tracking domain blocklist for pihole.", null, null, null, "https://github.com/RooneyMcNibNug/pihole-stuff", null, (short)14, "SNAFU List", null, new DateTime(2019, 3, 14, 19, 15, 34, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 15, 20, 28, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/RooneyMcNibNug/pihole-stuff/master/SNAFU.txt", null, null },
                    { (short)1519, null, null, null, null, null, "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist", "https://github.com/mitchellkrogza/Ultimate.Hosts.Blacklist/issues", (short)2, "Ultimate Hosts Blacklist Domains", null, new DateTime(2019, 3, 6, 1, 28, 41, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 21, 16, 4, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Ultimate.Hosts.Blacklist/master/domains/domains0.list", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1509, null, "This file contains additions made during the last week or two only. You can download once per day or more, but we currently don't recommend intervals more frequent than hourly.", null, "http://www.joewein.de/sw/bl-text.htm#donate", null, "http://www.joewein.de/sw/bl-text.htm", null, (short)5, "JoeWein's Domain blacklist new", null, null, (short)2, new DateTime(2019, 4, 21, 13, 53, 11, 0, DateTimeKind.Unspecified), "https://joewein.net/dl/bl/dom-bl.txt", null, null },
                    { (short)1508, null, "This file contains the bulk of the spam domains. It is updated infrequently and therefore need not be downloaded more than once a week. You must not download it more than once a day or your IP address may be blocked without notice.", null, "http://www.joewein.de/sw/bl-text.htm#donate", null, "http://www.joewein.de/sw/bl-text.htm", null, (short)5, "JoeWein's Domain blacklist base", null, null, (short)2, new DateTime(2019, 4, 21, 13, 0, 14, 0, DateTimeKind.Unspecified), "https://joewein.net/dl/bl/dom-bl-base.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1499, null, "How to stop Google Analytics \"Ghost\" Spam using a well curated list of spam referrer domains and web sites. Simple and easy to use with instructions for creating Segments in Google Analytics using our google-exclude files.", null, null, null, "https://github.com/mitchellkrogza/Stop.Google.Analytics.Ghost.Spam.HOWTO", null, (short)2, "Stop Google Analytics Ghost Spam Inactive List", null, new DateTime(2019, 3, 3, 14, 56, 45, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 17, 12, 44, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Stop.Google.Analytics.Ghost.Spam.HOWTO/master/output/domains/INACTIVE/list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1814, null, "This list target huge international websites that clutter search engine results with misinformation, unfounded articles, and/or contempt for humanity. While designed for use with «Google Hit Hider by Domain» to remove search results, it can also be used with other domains-list tools if you want more thorough blocking of them.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Remover for Mainstream Tabloid and Alt-Right Sites", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/TabloidRemover.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/TabloidRemover.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/TabloidRemover.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1498, null, "How to stop Google Analytics \"Ghost\" Spam using a well curated list of spam referrer domains and web sites. Simple and easy to use with instructions for creating Segments in Google Analytics using our google-exclude files.", null, null, null, "https://github.com/mitchellkrogza/Stop.Google.Analytics.Ghost.Spam.HOWTO", null, (short)2, "Stop Google Analytics Ghost Spam Active List", null, new DateTime(2019, 3, 3, 14, 56, 45, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 17, 12, 44, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Stop.Google.Analytics.Ghost.Spam.HOWTO/master/output/domains/ACTIVE/list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1496, null, null, null, null, null, "http://www.taz.net.au/Mail/", null, (short)5, "Temporary Autonomous Zone Spam Domains", null, null, (short)2, new DateTime(2019, 4, 21, 4, 36, 18, 0, DateTimeKind.Unspecified), "http://www.taz.net.au/Mail/SpamDomains", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1493, null, "Anti-WebMiner protects your PC against web cryptocurrency miners (JS scripts like Coinhive executed in the browser) by modifying Windows hosts file", null, null, null, "https://github.com/greatis/Anti-WebMiner/", "https://github.com/greatis/Anti-WebMiner/issues", (short)19, "Greatis Anti-WebMiner", null, new DateTime(2017, 9, 26, 14, 10, 4, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 11, 27, 7, 35, 46, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/greatis/Anti-WebMiner/master/blacklist.txt", null, null },
                    { (short)1490, null, "Phishing Domains, urls websites and threats database. We use the PyFunceble testing tool to validate the status of all known Phishing domains and provide stats to reveal how many unique domains used for Phishing are still active.", null, null, null, "https://github.com/mitchellkrogza/Phishing.Database", null, (short)2, "Phishing Domain Database", null, new DateTime(2018, 4, 20, 15, 40, 20, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 11, 28, 9, 54, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mitchellkrogza/Phishing.Database/master/phishing-domains-ACTIVE.txt", null, null },
                    { (short)1487, null, null, null, null, null, "https://github.com/quedlin/blacklist", null, (short)5, "Quedlin Blacklist", null, new DateTime(2016, 11, 4, 10, 27, 45, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2016, 11, 4, 10, 27, 45, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/quedlin/blacklist/master/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1484, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Torrent", null, null, (short)2, new DateTime(2019, 3, 9, 23, 8, 18, 0, DateTimeKind.Unspecified), "https://blocklist.site/app/dl/torrent", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1870, null, "Malware, advert and tracking blacklist", null, null, null, "https://github.com/mkb2091/blockconvert", null, (short)4, "BlockConvert (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/mkb2091/blockconvert/master/output/domains.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1483, null, "A filter list that blocks mobile advertisements and trackers on Japanese properties", null, null, null, "https://280blocker.net", null, (short)1, "280blocker adblock domain lists", null, "https://docs.google.com/forms/d/e/1FAIpQLScNeZhFrFZt9GhIVGdThGz7oyepcNRKuOi5PJDnsC-awxTeOQ/viewform", (short)2, new DateTime(2019, 4, 21, 2, 53, 10, 0, DateTimeKind.Unspecified), "https://280blocker.net/files/280blocker_domain.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1474, null, null, null, null, null, "https://github.com/ookangzheng/blahdns/tree/master/hosts", "https://github.com/ookangzheng/blahdns/issues", (short)2, "Blah DNS Hosts whitelist", null, new DateTime(2017, 5, 1, 11, 34, 49, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 28, 21, 34, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ookangzheng/blahdns/master/hosts/whitelist.txt", null, null },
                    { (short)1473, null, null, null, null, null, "https://github.com/ookangzheng/blahdns/tree/master/hosts", "https://github.com/ookangzheng/blahdns/issues", (short)2, "Blah DNS Hosts blacklist", null, new DateTime(2017, 5, 1, 11, 15, 41, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 10, 15, 6, 57, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ookangzheng/blahdns/master/hosts/blacklist.txt", null, null },
                    { (short)1472, null, null, null, null, null, "https://github.com/ookangzheng/blahdns/tree/master/hosts", "https://github.com/ookangzheng/blahdns/issues", (short)2, "Blah DNS Content farm host", null, new DateTime(2017, 8, 15, 8, 49, 0, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 17, 10, 31, 19, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/ookangzheng/blahdns/master/hosts/contentfarms.host", null, null },
                    { (short)1497, null, "Unified hosts combined from wally3k pihole lists and possibly without false positives", null, null, null, "https://github.com/tankmohit/UnifiedHosts", null, (short)5, "tankmohit's WhitelistUnifiedHosts", null, new DateTime(2017, 8, 24, 7, 59, 21, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2017, 8, 27, 14, 22, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/tankmohit/UnifiedHosts/master/whitelist", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1683, null, "Completely block DoubleClick services.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | DoubleClick (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/doubleclickparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/doubleclickparsed" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)2016, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Spam", null, null, (short)2, "https://blocklist.site/app/dl/spam", null, null },
                    { (short)1595, null, "The Blocklist to filter Phishing.", null, null, null, "https://phishing.army/", null, (short)13, "Phishing Army", null, null, (short)2, "https://phishing.army/download/phishing_army_blocklist.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1681, null, "Completely block Google search domains.", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google search (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/domainsparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/domainsparsed" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)2014, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Gambling", null, null, (short)2, "https://blocklist.site/app/dl/gambling", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1680, null, "Completely block Google DNS services .", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google DNS (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/dns.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/dns.txt" },
                    { (short)1679, null, "Completely block Google DNS services .", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google DNS (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/dnsparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/dnsparsed" },
                    { (short)1678, null, "Completely block Android services .", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Android (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/android.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/android.txt" },
                    { (short)1677, null, "Completely block Android services .", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Android (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/androidparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/androidparsed" },
                    { (short)1676, null, "Completely block Google analytics services .", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google analytics (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/analytics.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/analytics.txt" },
                    { (short)1675, null, "Completely block Google analytics services .", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google | Google analytics (Domains)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/categories/analyticsparsed", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/categories/analyticsparsed" },
                    { (short)1674, null, "Completely block Google and its services .", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google (Hosts)", null, null, (short)2, "https://raw.githubusercontent.com/nickspaargaren/pihole-google/master/google-domains", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/google-domains" },
                    { (short)1673, null, "Completely block Google and its services .", "https://github.com/nickspaargaren/pihole-google", null, "poorpocketsmcnewhold@pm.me", null, "https://github.com/nickspaargaren/pihole-google", "https://github.com/nickspaargaren/pihole-google/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", (short)11, "pihole-google (Domains)", null, null, (short)2, "https://github.com/nickspaargaren/pihole-google/raw/master/pihole-google.txt", null, "https://framagit.org/PoorPocketsMcNewHold/pihole-google/raw/master/pihole-google.txt" },
                    { (short)1594, null, "AntiSocial Blacklist is an extensive collection of potentially malicious domains. We work hard scouring the internet looking for servers that are trying to impersonate common brands and the companies you do business with. Using our data, we then use our cloud platform to protect vulnerable computer users. You may not spot the IDN characters in iCłoud.com or the zero in Micr0Soft.com - But AntiSocial Blacklist will.", null, null, "Contact@TheAntiSocialEngineer.com", null, "https://theantisocialengineer.com/blacklist/", null, (short)5, "The AntiSocial Engineer Blacklist", null, null, (short)2, "https://theantisocialengineer.com/AntiSocial_Blacklist_Community_V1.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1667, null, "List of fraudulent French sites. Sites related to cryptocurrencies.", null, null, null, "https://github.com/CryptoFR/crypto-scams-fr", "https://github.com/CryptoFR/crypto-scams-fr/issues", (short)5, "CryptoScamsFR Websites", null, null, (short)2, "https://raw.githubusercontent.com/CryptoFR/crypto-scams-fr/master/websites.txt", null, null },
                    { (short)1647, null, null, null, null, null, "https://github.com/migueldemoura/ublock-umatrix-rulesets", "https://github.com/migueldemoura/ublock-umatrix-rulesets/issues", (short)8, "migueldemoura's Hosts - Malware", null, null, (short)2, "https://raw.githubusercontent.com/migueldemoura/ublock-umatrix-rulesets/master/Hosts/malware", null, null },
                    { (short)1646, null, null, null, null, null, "https://github.com/migueldemoura/ublock-umatrix-rulesets", "https://github.com/migueldemoura/ublock-umatrix-rulesets/issues", (short)8, "migueldemoura's Hosts - Ads & Tracking - Breaking", null, null, (short)2, "https://raw.githubusercontent.com/migueldemoura/ublock-umatrix-rulesets/master/Hosts/ads-tracking-breaking", null, null },
                    { (short)1645, null, null, null, null, null, "https://github.com/migueldemoura/ublock-umatrix-rulesets", "https://github.com/migueldemoura/ublock-umatrix-rulesets/issues", (short)8, "migueldemoura's Hosts - Ads & Tracking", null, null, (short)2, "https://raw.githubusercontent.com/migueldemoura/ublock-umatrix-rulesets/master/Hosts/ads-tracking", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1636, null, "This is a dual-compatibility list for domains-list tools and uBlock Origin, which intends to target and prevent access to groups and individuals that preach things that are either very strange, very hateful, or that promote economical scams.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Insane religious preachers' List", null, new DateTime(2019, 6, 28, 16, 0, 0, 0, DateTimeKind.Unspecified), null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/AntiPreacherList.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/AntiPreacherList.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/AntiPreacherList.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1607, null, "HostsY generated hosts files", null, null, null, "https://github.com/Laicure/HostsY_hosts", "https://github.com/Laicure/HostsY_hosts/issues", (short)5, "HostsY Hosts", null, null, (short)2, "https://raw.githubusercontent.com/Laicure/HostsY_hosts/master/shithosts", null, null },
                    { (short)1603, null, "A block list of malicious URLs that are being used for malware distribution. This is a lite version by including online URLs only.", "https://gitlab.com/curben/urlhaus-filter/blob/master/README.md", null, null, "https://gitlab.com/curben/urlhaus-filter", "https://gitlab.com/curben/urlhaus-filter/issues", (short)28, "urlhaus-filter-online", null, null, (short)2, "https://gitlab.com/curben/urlhaus-filter/raw/master/urlhaus-filter-online.txt", "https://cdn.statically.io/gl/curben/urlhaus-filter/raw/master/urlhaus-filter-online.txt", "https://glcdn.githack.com/curben/urlhaus-filter/raw/master/urlhaus-filter-online.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1599, null, "Introducing the Amazing/Sensational/Remarkable/Revolutionary; #1 Blocklist :)", null, "https://www.paypal.me/sjhgvr", null, "https://www.reddit.com/r/pihole/comments/bppug1/introducing_the/", null, (short)5, "OISD Mobile", null, null, (short)2, "https://dblmobile.oisd.nl/", "https://raw.githubusercontent.com/ookangzheng/dbl-oisd-nl/master/dbl2.txt", "https://gitlab.com/ookangzheng/dbl-oisd-nl/raw/master/dbl2.txt" },
                    { (short)2015, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Phishing", null, null, (short)2, "https://blocklist.site/app/dl/phishing", null, null },
                    { (short)1597, null, "Introducing the Amazing/Sensational/Remarkable/Revolutionary; #1 Blocklist :)", null, "https://www.paypal.me/sjhgvr", null, "https://www.reddit.com/r/pihole/comments/bppug1/introducing_the/", null, (short)5, "OISD", null, null, (short)2, "https://dbl.oisd.nl/", "https://raw.githubusercontent.com/ookangzheng/dbl-oisd-nl/master/dbl.txt", "https://gitlab.com/ookangzheng/dbl-oisd-nl/raw/master/dbl.txt" },
                    { (short)1596, null, null, null, null, null, null, null, (short)5, "De Hakkelaar's Cryptojacking Campaign List", null, null, (short)2, "https://dehakkelaar.nl/lists/cryptojacking_campaign.list.txt", null, null },
                    { (short)1666, null, "List of fraudulent French sites. Other related sites.", null, null, null, "https://github.com/CryptoFR/crypto-scams-fr", "https://github.com/CryptoFR/crypto-scams-fr/issues", (short)5, "CryptoScamsFR Misc", null, null, (short)2, "https://raw.githubusercontent.com/CryptoFR/crypto-scams-fr/master/misc.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1307, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Aggressive Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/aggressive", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/aggressive/domains", null, null },
                    { (short)1311, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List AnonVPN Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/anonvpn", (short)2, new DateTime(2019, 3, 25, 3, 0, 18, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/anonvpn/domains", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1980, null, "Are you tired of being nagged on by websites, that say \"Log in to read more\"? With this list, you'll be much less nagged on from now own.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Browse websites without logging in (Domains version)", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/BrowseWebsitesWithoutLoggingInDomains.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/BrowseWebsitesWithoutLoggingInDomains.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/BrowseWebsitesWithoutLoggingInDomains.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1112, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adblock Iran (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 1, 36, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adblock-Iran.txt", null, null },
                    { (short)1111, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adblock Filters by Gurudee (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adblock-Filters-by-Gurudee.txt", null, null },
                    { (short)1110, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "AdAway Default Blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/AdAway-Default-Blocklist.txt", null, null },
                    { (short)1109, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "AakList (Domains)", null, new DateTime(2017, 9, 4, 23, 56, 3, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/AakList.txt", null, null },
                    { (short)1108, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ABPindo (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 30, 0, 35, 30, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ABPindo.txt", null, null },
                    { (short)1107, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ABP X Files (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 12, 0, 41, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ABP-X-Files.txt", null, null },
                    { (short)1106, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ABP Japanese Paranoid Filters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ABP-Japanese-Paranoid-Filters.txt", null, null },
                    { (short)1105, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ABP Japanese Filters (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 14, 0, 39, 48, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ABP-Japanese-Filters.txt", null, null },
                    { (short)1104, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ABP Japanese 3rd Party SNS Filters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ABP-Japanese-3rd-Party-SNS-Filters.txt", null, null },
                    { (short)1103, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ABP Clickbait Blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ABP-Clickbait-Blocklist.txt", null, null },
                    { (short)1102, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ABP Bulgarian List (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 10, 24, 0, 37, 47, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ABP-Bulgarian-List.txt", null, null },
                    { (short)1101, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Zimbabwe", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 1, 23, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Zimbabwe.txt", null, null },
                    { (short)1100, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Zambia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Zambia.txt", null, null },
                    { (short)1099, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Western Sahara", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 1, 19, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/WesternSahara.txt", null, null },
                    { (short)1098, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Wallis and Futuna", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 1, 16, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/WallisandFutuna.txt", null, null },
                    { (short)1097, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Vietnam", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 1, 13, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Vietnam.txt", null, null },
                    { (short)1096, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Venezuela", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Venezuela.txt", null, null },
                    { (short)1095, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Vanuatu", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 2, 0, 38, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Vanuatu.txt", null, null },
                    { (short)1094, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Uzbekistan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Uzbekistan.txt", null, null },
                    { (short)1093, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Uruguay", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Uruguay.txt", null, null },
                    { (short)1092, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - United States of America", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 2, 0, 38, 54, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/UnitedStatesofAmerica.txt", null, null },
                    { (short)1091, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - United Kingdom", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/UnitedKingdom.txt", null, null },
                    { (short)1090, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - United Arab Emirates", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/UnitedArabEmirates.txt", null, null },
                    { (short)1113, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adblock Korea (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adblock-Korea.txt", null, null },
                    { (short)1089, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Ukraine", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 15, 0, 43, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Ukraine.txt", null, null },
                    { (short)1114, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adblock Persian (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 26, 0, 39, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adblock-Persian.txt", null, null },
                    { (short)1116, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adblock YouTube Ads (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adblock-YouTube-Ads.txt", null, null },
                    { (short)1148, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Liste FR (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 11, 0, 46, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/EasyList-Liste-FR.txt", null, null },
                    { (short)1146, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "EasyList Italy (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 18, 0, 38, 36, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/EasyList-Italy.txt", null, null },
                    { (short)1144, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "EasyList Dutch (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/EasyList-Dutch.txt", null, null },
                    { (short)1143, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "EasyList Czech Slovak (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 11, 18, 0, 39, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/EasyList-Czech-Slovak.txt", null, null },
                    { (short)1142, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Dshield Suspicious Medium (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Dshield-Suspicious-Medium.txt", null, null },
                    { (short)1141, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Dshield Suspicious Low (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 11, 0, 38, 56, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Dshield-Suspicious-Low.txt", null, null },
                    { (short)1140, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Dshield Suspicious High (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 11, 0, 38, 56, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Dshield-Suspicious-High.txt", null, null },
                    { (short)1139, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Disconnect Malware Filter (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Disconnect-Malware-Filter.txt", null, null },
                    { (short)1135, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "DNS-BH Malware Domains (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 20, 0, 38, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/DNS-BH-Malware-Domains.txt", null, null },
                    { (short)1133, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "CryptoWall Ransomware C2 Domain blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 9, 19, 0, 37, 47, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/CryptoWall-Ransomware-C2-Domain-blocklist.txt", null, null },
                    { (short)1130, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "CAMELEON Hosts (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 21, 0, 37, 4, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/CAMELEON-Hosts.txt", null, null },
                    { (short)1128, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "BreakingTheNews (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/BreakingTheNews.txt", null, null },
                    { (short)1127, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Blockzilla (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 8, 22, 0, 36, 47, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Blockzilla.txt", null, null },
                    { (short)1126, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Block EU Cookie Shit List (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Block-EU-Cookie-Shit-List.txt", null, null },
                    { (short)1125, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Bad JAV Sites (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Bad-JAV-Sites.txt", null, null },
                    { (short)1124, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "BLOGRAM Basic Filter List for Japan (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/BLOGRAM-Basic-Filter-List-for-Japan.txt", null, null },
                    { (short)1123, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "BLOGRAM Analysis Block Filter List for Japan (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/BLOGRAM-Analysis-Block-Filter-List-for-Japan.txt", null, null },
                    { (short)1122, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Ayucat Powerful (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Ayucat-Powerful.txt", null, null },
                    { (short)1121, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Anudeep Youtube (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Anudeep-Youtube.txt", null, null },
                    { (short)1120, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "AntiPubWeb (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/AntiPubWeb.txt", null, null },
                    { (short)1119, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adware Filters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adware-Filters.txt", null, null },
                    { (short)1118, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adguard English Filter (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adguard-English-Filter.txt", null, null },
                    { (short)1117, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adblock uBlock Polish Filters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 12, 6, 0, 38, 53, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adblock-uBlock-Polish-Filters.txt", null, null },
                    { (short)1115, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Adblock Polska (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Adblock-Polska.txt", null, null },
                    { (short)1088, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Uganda", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Uganda.txt", null, null },
                    { (short)1087, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Tuvalu", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Tuvalu.txt", null, null },
                    { (short)1086, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Turks And Caicos Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 0, 37, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/TurksAndCaicosIslands.txt", null, null },
                    { (short)1061, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Slovakia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Slovakia.txt", null, null },
                    { (short)1060, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Sint Maarten", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 23, 22, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SintMaarten.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1982, null, "Do you like to browse casually through different Wikia wikis, but are tired of FANDOM promotions, promotions for movies that you don't care about, and narrow article bodies? Then this list will save your day.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Wikia: Pure Browsing Experience («Hosts» version)", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/WikiaPureBrowsingExperienceDomains.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/WikiaPureBrowsingExperienceDomains.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/WikiaPureBrowsingExperienceDomains.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1992, null, null, null, null, null, null, null, (short)2, "Prigent Sects", null, null, (short)2, "https://dsi.ut-capitole.fr/blacklists/download/sect.tar.gz", null, null },
                    { (short)1993, null, null, null, null, null, null, null, (short)2, "Prigent Astrology", null, null, (short)2, "https://dsi.ut-capitole.fr/blacklists/download/astrology.tar.gz", null, null },
                    { (short)2007, null, null, null, null, null, null, null, (short)2, "Prigent Social Networks", null, null, (short)2, "https://block.energized.pro/assets/mirror/ut1-social-networks.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1059, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Singapore", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Singapore.txt", null, null },
                    { (short)1058, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Sierra Leone", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SierraLeone.txt", null, null },
                    { (short)1057, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Seychelles", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Seychelles.txt", null, null },
                    { (short)1056, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Serbia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Serbia.txt", null, null },
                    { (short)1055, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Senegal", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Senegal.txt", null, null },
                    { (short)1054, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Saudi-Arabia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 23, 6, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SaudiArabia.txt", null, null },
                    { (short)1053, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Sao Tome And Principe", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 23, 3, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SaoTomeAndPrincipe.txt", null, null },
                    { (short)1052, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - San Marino", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 23, 0, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SanMarino.txt", null, null },
                    { (short)1051, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Samoa", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Samoa.txt", null, null },
                    { (short)1050, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Saint Vincent And Grenadines", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SaintVincentAndGrenadines.txt", null, null },
                    { (short)1049, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Saint Pierre And Miquelon", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 22, 51, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SaintPierreAndMiquelon.txt", null, null },
                    { (short)1048, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Saint Lucia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 22, 48, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SaintLucia.txt", null, null },
                    { (short)1047, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Saint Helena", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 11, 15, 0, 39, 53, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SaintHelena.txt", null, null },
                    { (short)1046, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Réunion Island", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 12, 0, 41, 9, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/RéunionIsland.txt", null, null },
                    { (short)1045, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Rwanda", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Rwanda.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1994, null, null, null, null, null, null, null, (short)2, "Prigent Shorteners", null, null, (short)2, "https://dsi.ut-capitole.fr/blacklists/download/shortener.tar.gz", null, null },
                    { (short)1995, null, null, null, null, null, null, null, (short)2, "Prigent Gambling", null, null, (short)2, "https://block.energized.pro/assets/mirror/ut1-gambling.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1062, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Slovenia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Slovenia.txt", null, null },
                    { (short)1063, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Somalia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 23, 32, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Somalia.txt", null, null },
                    { (short)1064, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - South Africa", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 27, 0, 40, 34, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SouthAfrica.txt", null, null },
                    { (short)1065, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - South Georgia And South Sandwich Islands", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 23, 38, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SouthGeorgiaAndSouthSandwichIslands.txt", null, null },
                    { (short)1085, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Turkmenistan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Turkmenistan.txt", null, null },
                    { (short)1084, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Turkey", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Turkey.txt", null, null },
                    { (short)1083, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Tunisia", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 0, 30, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Tunisia.txt", null, null },
                    { (short)1082, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Trinidad And Tobago", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 0, 27, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/TrinidadAndTobago.txt", null, null },
                    { (short)1081, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Tonga", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Tonga.txt", null, null },
                    { (short)1080, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Tokelau", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Tokelau.txt", null, null },
                    { (short)1079, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Togo", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 0, 18, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Togo.txt", null, null },
                    { (short)1078, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Timor Leste", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 0, 15, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/TimorLeste.txt", null, null },
                    { (short)1077, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Thailand", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 24, 0, 44, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Thailand.txt", null, null },
                    { (short)1076, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Tanzania", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 0, 9, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Tanzania.txt", null, null },
                    { (short)1075, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Tajikistan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 0, 6, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Tajikistan.txt", null, null },
                    { (short)6, null, "A filter list that blocks advertisements and trackers on Japanese properties", null, null, null, "https://github.com/mayve/private-adblock-filters", "https://github.com/mayve/private-adblock-filters/issues", (short)5, "Mayve's Private Adblock Filters", null, new DateTime(2014, 8, 23, 7, 30, 22, 0, DateTimeKind.Unspecified), null, (short)3, new DateTime(2017, 3, 4, 8, 46, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/mayve/private-adblock-filters/master/Adblock_List.txt", "https://gitcdn.xyz/repo/mayve/private-adblock-filters/master/Adblock_List.txt", "https://rawcdn.githack.com/mayve/private-adblock-filters/master/Adblock_List.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)11, null, "A merged list of Liste FR and EasyList", null, null, null, null, null, (short)6, "Liste FR + EasyList", null, null, (short)3, new DateTime(2019, 4, 8, 15, 56, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/liste_fr+easylist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1981, null, "Do you like to browse casually through different Wikia wikis, but are tired of FANDOM promotions, promotions for movies that you don't care about, and narrow article bodies? Then this list will save your day.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Wikia: Pure Browsing Experience (Domains version)", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/WikiaPureBrowsingExperienceDomains.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/WikiaPureBrowsingExperienceDomains.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/WikiaPureBrowsingExperienceDomains.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)2008, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Ads", null, null, (short)2, "https://blocklist.site/app/dl/ads", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1074, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Taiwan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Taiwan.txt", null, null },
                    { (short)1073, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Syria", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 15, 0, 0, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Syria.txt", null, null },
                    { (short)1072, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Switzerland", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Switzerland.txt", null, null },
                    { (short)1071, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Sweden", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Sweden.txt", null, null },
                    { (short)1070, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Suriname", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 23, 51, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Suriname.txt", null, null },
                    { (short)1069, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Sudan", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Sudan.txt", null, null },
                    { (short)1068, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Sri Lanka", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 14, 23, 47, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SriLanka.txt", null, null },
                    { (short)1067, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Spain", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/Spain.txt", null, null },
                    { (short)1066, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - South Korea", null, new DateTime(2017, 8, 25, 2, 8, 54, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CountryCodesLists/SouthKorea.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)12, null, "Liste FR is an EasyList affiliated filter list that specifically removes adverts on French-language websites.", "https://easylist.to/pages/other-supplementary-filter-lists-and-easylist-variants.html", null, "listefr.adblock@gmail.com", "https://forums.lanik.us/viewforum.php?f=91", "https://forums.lanik.us/viewforum.php?f=91", null, (short)6, "Liste FR", null, null, (short)3, new DateTime(2019, 4, 8, 16, 25, 12, 0, DateTimeKind.Unspecified), "https://easylist-downloads.adblockplus.org/liste_fr.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)2, null, "Mute is an AdBlock Plus filter for user comments. In the same way that AdBlock hides ads, AdBlock can use this filter to hide user-generated comments, allowing you to browse the Internet with less stupidity clawing at your eyeballs.", "https://github.com/B-Con/mute", null, null, "https://github.com/B-Con/mute", "https://github.com/B-Con/mute/issues", (short)2, "Mute", null, null, (short)3, "https://raw.githubusercontent.com/B-Con/mute/master/mute.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1751, "https://t.me/EnergizedProtection", "Block social apps and sites", "https://github.com/EnergizedProtection/block", "https://energized.pro/support", "mail@energized.pro", "https://forum.xda-developers.com/android/software-hacking/energized-protection-ad-porn-malware-t3803773", "https://energized.pro", "https://github.com/EnergizedProtection/block/issues", (short)9, "Energized Social Extension (Domains)", null, "https://app.energized.pro", (short)2, "https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/social/formats/domains.txt", null, null },
                    { (short)1978, null, "Steven Universe is a cartoon about a Mary Sue boy tagging along with racist xenophobic aliens to fight other racist xenophobic aliens for no good reason, all of whom are also bad parental figures. Here's a list to get a breather break from it.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Steven Universe' List (Domains version)", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/AntiStevenUniverseListDomains.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/AntiStevenUniverseListDomains.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/AntiStevenUniverseListDomains.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1218, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Turk adlist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 23, 0, 38, 33, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Turk-adlist.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1217, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "TorrentLocker Ransomware Payment Sites Domain Blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/TorrentLocker-Ransomware-Payment-Sites-Domain-Blocklist.txt", null, null },
                    { (short)1216, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "TorrentLocker Ransomware C2 Domain Blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/TorrentLocker-Ransomware-C2-Domain-Blocklist.txt", null, null },
                    { (short)1215, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Tofu Filter (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 24, 0, 36, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Tofu-Filter.txt", null, null },
                    { (short)1214, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Thoughtconverge AdBlock Filters (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Thoughtconverge-AdBlock-Filters.txt", null, null },
                    { (short)1213, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "The Hosts File Project (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/The-Hosts-File-Project.txt", null, null },
                    { (short)1212, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "TeslaCrypt Ransomware Payment Sites Domain Blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/TeslaCrypt-Ransomware-Payment-Sites-Domain-Blocklist.txt", null, null },
                    { (short)1211, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "TeslaCrypt Ransomware C2 Domain Blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/TeslaCrypt-Ransomware-C2-Domain-Blocklist.txt", null, null },
                    { (short)1210, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "TakoYachty Gift Card Killer (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/TakoYachty-Gift-Card-Killer.txt", null, null },
                    { (short)1209, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Unified Hosts (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 17, 17, 41, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Steven-Blacks-Unified-Hosts.txt", null, null },
                    { (short)1207, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Steven Blacks Trackers (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 10, 23, 1, 14, 25, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Steven-Blacks-Trackers.txt", null, null },
                    { (short)1206, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Steven Blacks Risky Hosts (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Steven-Blacks-Risky-Hosts.txt", null, null },
                    { (short)1205, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Steven Blacks Porn (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 17, 17, 26, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Steven-Blacks-Porn.txt", null, null },
                    { (short)1204, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Steven Blacks Hosts (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 31, 0, 39, 33, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Steven-Blacks-Hosts.txt", null, null },
                    { (short)1203, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Steven Blacks Gambling (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 17, 17, 11, 11, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Steven-Blacks-Gambling.txt", null, null },
                    { (short)1202, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Steven Blacks Fakenews (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 17, 16, 59, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Steven-Blacks-Fakenews.txt", null, null },
                    { (short)1199, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Spam Assassin Bill Stearns (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Spam-Assassin-Bill-Stearns.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1928, null, "My custom blocklists for pihole", null, null, null, "https://github.com/Th3M3/blocklists", "https://github.com/Th3M3/blocklists/issues", (short)5, "Th3M3 Blocklists - Tracking & Ads", null, null, (short)2, "https://raw.githubusercontent.com/Th3M3/blocklists/master/tracking%26ads.list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1305, null, "Shalla's Blacklists is a collection of URL lists grouped into several categories intended for the usage with URL filters like SquidGuard or Dansguardian.", null, null, null, "https://www.shallalist.de/", null, (short)5, "Shalla List Adv Domains", null, new DateTime(2018, 4, 20, 21, 26, 11, 0, DateTimeKind.Unspecified), "https://github.com/cbuijs/shallalist/tree/master/adv", (short)2, new DateTime(2019, 4, 3, 2, 0, 8, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/cbuijs/shallalist/master/adv/domains", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1931, null, "We all hate advertising banners on pages when surfing the web, A proxy such as Squid can used to block these without the need to install any additional software on end users systems. This saves bandwidth as well as protects your privacy from tracking site etc.", null, null, null, "https://www.thedumbterminal.co.uk/services/squidblockedsites.html", null, (short)5, "The Dumb Terminal's Squid blocked sites", null, null, (short)2, "http://www.thedumbterminal.co.uk/files/services/squidblockedsites/blocked.txt", null, null },
                    { (short)1932, null, null, null, null, null, null, null, (short)5, "Windscribe Clickbait", null, null, (short)2, "https://assets.windscribe.com/custom_blocklists/clickbait.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1220, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Wiltteri (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Wiltteri.txt", null, null },
                    { (short)1221, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "WindowsSpyBlocker7 (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/WindowsSpyBlocker7.txt", null, null },
                    { (short)1222, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "WindowsSpyBlocker81 (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/WindowsSpyBlocker81.txt", null, null },
                    { (short)1223, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Yhonay AntiPopAds (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 9, 0, 38, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Yhonay-AntiPopAds.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1300, null, "Stop Forum Spam is a free service that records reports of spam on forums, blogs and wikis to name a few. All these records are then made available to you search and view but most importantly, to access in an automated way to block suspected spammers before they can get in the front door. Everyone is familiar with more traditional 'solve the word' systems to prevent abuse, Stop Forum Spam is a targeted and specialsed solution to help stop abuse of your website.", null, null, "https://www.stopforumspam.com/forum/", "https://www.stopforumspam.com/", null, (short)26, "StopForumSpam Toxic Domains Whole", null, null, (short)2, new DateTime(2019, 4, 11, 0, 16, 11, 0, DateTimeKind.Unspecified), "https://www.stopforumspam.com/downloads/toxic_domains_whole.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1286, null, "A phishing domains list aiming at blocking scam domains from Steam Store, CS:GO, Dota 2, Team Fortress 2, PUBG and other related scams related to it, based on the wishihab/steamscamsite scam list https://github.com/wishihab/steamscamsite.", "https://github.com/PoorPocketsMcNewHold/steamscamsites/blob/master/README.md", null, "poorpocketsmcnewhold@pm.me", null, "https://poorpocketsmcnewhold.github.io/SteamScamSites/", "https://github.com/PoorPocketsMcNewHold/steamscamsites/issues", (short)14, "SteamScamSites", null, new DateTime(2018, 8, 31, 9, 11, 52, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 21, 15, 50, 51, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/PoorPocketsMcNewHold/steamscamsites/master/steamscamsite.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1245, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Combined Whitelists", null, new DateTime(2018, 4, 29, 23, 32, 34, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 4, 29, 23, 32, 34, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CombinedWhitelists/CombinedWhiteLists.txt", null, null },
                    { (short)1244, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - deathbybandaid List", null, new DateTime(2017, 9, 3, 0, 46, 22, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 11, 0, 40, 25, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CombinedBlacklists/DeathbybandaidList.txt", null, null },
                    { (short)1243, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Pi-hole Parser - Combined Blacklists", null, new DateTime(2017, 9, 3, 0, 46, 22, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 9, 0, 38, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/CombinedBlacklists/CombinedBlackLists.txt", null, null },
                    { (short)1241, null, "To block other things that I could not assign anywhere", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - Other", null, new DateTime(2017, 10, 19, 20, 18, 47, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 8, 12, 11, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/other.txt", null, null },
                    { (short)1240, null, "To block cryptomining", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - Cryptomining", null, new DateTime(2018, 1, 31, 14, 0, 41, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 24, 11, 39, 12, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/cryptomine.txt", null, null },
                    { (short)1239, null, "To block German fake news websites", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - German fake news", null, new DateTime(2017, 11, 17, 20, 52, 1, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 1, 20, 4, 0, 10, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/fakenewsde.txt", null, null },
                    { (short)1238, null, "To block fake gaming websites (fake emulators, etc.)", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - Fake game sites", null, new DateTime(2018, 1, 31, 14, 2, 23, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 1, 31, 14, 2, 23, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/gamefake.txt", null, null },
                    { (short)1237, null, "Block fake jailbreak websites (Domains of The iPhone Wiki)", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - Fake jailbreak sites", null, new DateTime(2017, 11, 6, 13, 59, 45, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 4, 10, 18, 37, 24, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/jbfake.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1933, null, "This repository is www.mypdns.org self maintained list of domains that needs to be blocked for various reasons.", null, null, null, "https://gitlab.com/my-privacy-dns/matrix/matrix/", null, (short)43, "My Privacy DNS Matrix - Adware", null, null, (short)2, "https://gitlab.com/dns-firewall/dns/matrix/matrix/raw/master/source/adware/domains.list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1235, null, "To block tracking and information that Windows collects", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - Windows tracking", null, new DateTime(2017, 7, 31, 18, 43, 55, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 8, 12, 20, 41, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/nomsdata.txt", null, null },
                    { (short)1233, null, "To block Adobe Updates (Photoshop & co.)", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - Adobe updates", null, new DateTime(2017, 7, 31, 18, 43, 55, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2017, 7, 31, 18, 43, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/adobeblock.txt", null, null },
                    { (short)1232, null, "To block advertising on SmartTVs (HbbTV and co.)", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - SmartTV", null, new DateTime(2017, 7, 31, 18, 43, 55, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 10, 19, 52, 13, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/hbbtv.txt", null, null },
                    { (short)1231, null, "Block ads in apps on iOS and Android", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - App ads", null, new DateTime(2017, 7, 31, 18, 43, 55, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 6, 20, 4, 52, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/appads.txt", null, null },
                    { (short)1230, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "uBlockFiltersPlus (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/uBlockFiltersPlus.txt", null, null },
                    { (short)1229, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "uBOPersonalFilters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 12, 4, 0, 37, 44, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/uBOPersonalFilters.txt", null, null },
                    { (short)1228, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "uAssetsUnbreak (Domains)", null, new DateTime(2018, 4, 13, 4, 1, 44, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/uAssetsUnbreak.txt", null, null },
                    { (short)1227, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "uAssetsPrivacy (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 11, 18, 0, 39, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/uAssetsPrivacy.txt", null, null },
                    { (short)1226, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "uAssetsFilters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 9, 0, 38, 43, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/uAssetsFilters.txt", null, null },
                    { (short)1225, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ZeuS Domain Blocklist Bad Domains (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 10, 16, 0, 36, 56, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ZeuS-Domain-Blocklist-Bad-Domains.txt", null, null },
                    { (short)1224, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "YousList (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 19, 0, 38, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/YousList.txt", null, null },
                    { (short)1234, null, "To block Nintendo system updates (3DS / Wii U / Switch)", "https://github.com/Akamaru/Pi-Hole-Lists/blob/master/README.md", null, null, "https://github.com/Akamaru/Pi-Hole-Lists", "https://github.com/Akamaru/Pi-Hole-Lists/issues", (short)5, "Pi-Hole-Lists - Nintendo updates", null, new DateTime(2017, 7, 31, 18, 43, 55, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 4, 6, 12, 51, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/nintendoblock.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1934, null, "This repository is www.mypdns.org self maintained list of domains that needs to be blocked for various reasons.", null, null, null, "https://gitlab.com/my-privacy-dns/matrix/matrix/", null, (short)43, "My Privacy DNS Matrix - Tracking", null, null, (short)2, "https://gitlab.com/dns-firewall/dns/matrix/matrix/raw/master/source/tracking/domains.list", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1, null, "A filter list that blocks mobile advertisements and trackers on Japanese properties", null, null, null, "https://280blocker.net", null, (short)1, "280 Blocker", null, "https://docs.google.com/forms/d/e/1FAIpQLScNeZhFrFZt9GhIVGdThGz7oyepcNRKuOi5PJDnsC-awxTeOQ/viewform", (short)3, new DateTime(2019, 4, 8, 14, 29, 9, 0, DateTimeKind.Unspecified), "https://280blocker.net/files/280blocker_adblock.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1936, null, null, null, null, null, "https://hashdd.com/", null, (short)5, "VXVault (Domains)", null, null, (short)2, "https://lists.hashdd.com/hashdd/vxvault-urllist/hosts", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1173, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Mayve's Private Adblock Filters (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Mayvs-Private-Adblock-Filters.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1935, null, "The list contains domains (FQDN) collected over the last seven days by the web application. From any of these domains has been downloaded and analyzed a suspicious binary file.", null, null, null, "https://infosec.cert-pa.it/", null, (short)5, "CERT-PA Domains", null, null, (short)2, "https://infosec.cert-pa.it/analyze/listdomains.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1169, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Malware Domains Just Domains (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 20, 0, 38, 20, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Malware-Domains-Just-Domains.txt", null, null },
                    { (short)1168, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Locky Ransomware C2 Domain Blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 8, 11, 0, 41, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Locky-Ransomware-C2-Domain-Blocklist.txt", null, null },
                    { (short)1167, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ListeAR (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ListeAR.txt", null, null },
                    { (short)1166, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Lead Generator (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Lead-Generator.txt", null, null },
                    { (short)1165, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Latvian List (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/LatvianList.txt", null, null },
                    { (short)1163, null, "The Blocklist to filter Phishing.", null, null, null, "https://phishing.army/", null, (short)13, "Phishing Army Extended", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 16, 15, 48, 12, 0, DateTimeKind.Unspecified), "https://phishing.army/download/phishing_army_blocklist_extended.txt", null, null },
                    { (short)1162, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "JapaneseSiteAdblockFilterver2 (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/JapaneseSiteAdblockFilterver2.txt", null, null },
                    { (short)1161, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ImmortalMalwareDomains (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ImmortalMalwareDomains.txt", null, null },
                    { (short)1160, null, "List of toxic links for Turkey.", null, null, null, "https://phishing.horus.com.tr/", null, (short)2, "TR-PhishingList URL List", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 8, 11, 59, 1, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/HorusTeknoloji/TR-PhishingList/master/url-lists.txt", null, null },
                    { (short)1159, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Hufilter (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Hufilter.txt", null, null },
                    { (short)1158, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Henning VanRaumle Youtube (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Henning-VanRaumle-Youtube.txt", null, null },
                    { (short)1157, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Hant05080 Filters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 11, 21, 0, 39, 31, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Hant05080-Filters.txt", null, null },
                    { (short)1156, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Greek AdBlock Filter (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Greek-AdBlock-Filter.txt", null, null },
                    { (short)1155, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "G&J Hosts (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/GandJ-Hosts.txt", null, null },
                    { (short)1154, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Finnish AntiSocial (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Finnish-AntiSocial.txt", null, null },
                    { (short)1153, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Filtros Nauscopicos (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Filtros-Nauscopicos.txt", null, null },
                    { (short)1152, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Fanboy Annoyances List (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 25, 0, 43, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Fanboy-Annoyances-List.txt", null, null },
                    { (short)1151, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "FadeMind addSpam (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/FadeMind-addSpam.txt", null, null },
                    { (short)1149, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "EasyList Thailand (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 9, 7, 0, 35, 52, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/EasyList-Thailand.txt", null, null },
                    { (short)1174, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Metaphoricgiraffe Privacy Filters (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 6, 30, 0, 37, 0, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Metaphoricgiraffe-Privacy-Filters.txt", null, null },
                    { (short)1175, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Michael Trimms Hosts (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Michael-Trimms-Hosts.txt", null, null },
                    { (short)1172, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Mat1th DNS add block (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Mat1th-DNS-add-block.txt", null, null },
                    { (short)1187, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Quidsup Malicious (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Quidsup-Malicious.txt", null, null },
                    { (short)1193, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Ransomware Domain Blocklist (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 8, 11, 0, 41, 26, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Ransomware-Domain-Blocklist.txt", null, null },
                    { (short)1194, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Slovenian List (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/SVN-Slovenian.txt", null, null },
                    { (short)1196, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "SatterlysAdblockPlusFilters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/SatterlysAdblockPlusFilters.txt", null, null },
                    { (short)1190, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "RU AdList (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 21, 0, 40, 22, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/RU-AdList.txt", null, null },
                    { (short)1189, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "ROad Block (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 3, 8, 0, 39, 35, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/ROad-Block.txt", null, null },
                    { (short)1176, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Mitchell Krogs Badd Boyz Hosts (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Mitchell-Krogs-Badd-Boyz-Hosts.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)2011, null, null, null, null, null, "https://blocklist.site/piracy", null, (short)5, "Block List Project: Piracy", null, null, (short)2, "https://blocklist.site/app/dl/piracy", null, null },
                    { (short)2010, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Ransomware", null, null, (short)2, "https://blocklist.site/app/dl/ransomware", null, null },
                    { (short)2009, null, null, null, null, null, "https://blocklist.site/", null, (short)5, "Block List Project: Crypto", null, null, (short)2, "https://blocklist.site/app/dl/crypto", null, null }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1973, null, "As someone who lives in Norway, which is not an Amazon core country, I became increasingly annoyed at how they hid away shipping fees from me, and even more annoyed when they barred third-party sellers from shipping abroad. Thus I deleted my Amazon account in protest, and to this day I refuse to make a new one.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-Amazon List for Twitch (Domains version)", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/AntiAmazonListForTwitchDomains.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/AntiAmazonListForTwitchDomains.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/AntiAmazonListForTwitchDomains.txt" },
                    { (short)1975, null, "Do you feel that Friendship is Magic overstayed its welcome? Here's a list that'll let you keep more of a distance to it.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-FіМ list (Domains version)", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/AntiF%25D1%2596%25D0%259C%2520ListDomains.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/AntiF%25D1%2596%25D0%259C%2520ListDomains.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/AntiF%25D1%2596%25D0%259C%2520ListDomains.txt" }
                });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1197, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Schacks Adblock Plus Liste (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 6, 14, 0, 40, 7, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Schacks-Adblock-Plus-Liste.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1944, null, null, null, null, null, "https://www.bentasker.co.uk/adblock/", null, (short)19, "Ben Tasker's List (Domains)", null, null, (short)2, "https://www.bentasker.co.uk/adblock/blockeddomains.txt", null, null });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "EmailAddress", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "SubmissionUrl", "SyntaxId", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[] { (short)1977, null, "A lot of trashy \"reviewers\" and \"forums\" seem to have an extremely unhealthy fascination with trashing the same few cartoons over and over for no reason other than group pressure, making a lot of the internet a pretty unhealthy place to discuss and research cartoons on. Here's how to get away from such places.", null, "https://sproutsluckycorner.wordpress.com/2017/11/14/my-work-and-contact-resume/#donations", "imreeil42@gmail.com", null, "https://github.com/DandelionSprout/adfilt", "https://github.com/DandelionSprout/adfilt/issues", (short)35, "Anti-'Hivemind cartoon trashing' List (Domains version)", null, null, (short)2, "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Other%20domains%20versions/AntiHivemindCartoonTrashingListDomains.txt", "https://repo.or.cz/FilterMirrorRepo.git/blob_plain/refs/heads/master:/Other%20domains%20versions/AntiHivemindCartoonTrashingListDomains.txt", "https://gitlab.com/DandelionSprout/adfilt/raw/master/Other%20domains%20versions/AntiHivemindCartoonTrashingListDomains.txt" });

            migrationBuilder.InsertData(
                table: "filterlists",
                columns: new[] { "Id", "ChatUrl", "Description", "DescriptionSourceUrl", "DonateUrl", "ForumUrl", "HomeUrl", "IssuesUrl", "LicenseId", "Name", "PolicyUrl", "PublishedDate", "SubmissionUrl", "SyntaxId", "UpdatedDate", "ViewUrl", "ViewUrlMirror1", "ViewUrlMirror2" },
                values: new object[,]
                {
                    { (short)1185, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Prigent Malware (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 7, 22, 0, 36, 27, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Prigent-Malware.txt", null, null },
                    { (short)1184, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Prebake Obtrusive (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Prebake-Obtrusive.txt", null, null },
                    { (short)1183, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "PopupBlocker (Domains)", null, new DateTime(2018, 4, 13, 4, 1, 44, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 11, 7, 0, 48, 16, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/PopupBlocker.txt", null, null },
                    { (short)1182, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Piwik Spam (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 4, 5, 0, 42, 21, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Piwik-Spam.txt", null, null },
                    { (short)1180, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "PLgeneral (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/PLgeneral.txt", null, null },
                    { (short)1179, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "Notracking hostnames (Domains)", null, new DateTime(2017, 9, 2, 1, 7, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/Notracking-hostnames.txt", null, null },
                    { (short)1191, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "RU AdList BitBlock (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2018, 5, 28, 14, 2, 55, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/RUAdListBitBlock.txt", null, null },
                    { (short)1192, null, null, null, null, null, "https://github.com/deathbybandaid/piholeparser", "https://github.com/deathbybandaid/piholeparser/issues", (short)14, "RU AdList Counters (Domains)", null, new DateTime(2017, 9, 5, 8, 14, 36, 0, DateTimeKind.Unspecified), null, (short)2, new DateTime(2019, 2, 1, 0, 40, 14, 0, DateTimeKind.Unspecified), "https://raw.githubusercontent.com/deathbybandaid/piholeparser/master/Subscribable-Lists/ParsedBlacklists/RUAdListCounters.txt", null, null }
                });

            migrationBuilder.InsertData(
                table: "software_syntaxes",
                columns: new[] { "SyntaxId", "SoftwareId" },
                values: new object[,]
                {
                    { (short)32, (short)5 },
                    { (short)33, (short)31 },
                    { (short)32, (short)31 },
                    { (short)32, (short)32 },
                    { (short)32, (short)39 },
                    { (short)33, (short)1 },
                    { (short)33, (short)5 },
                    { (short)33, (short)18 },
                    { (short)32, (short)18 },
                    { (short)32, (short)1 },
                    { (short)36, (short)27 },
                    { (short)33, (short)39 },
                    { (short)2, (short)25 },
                    { (short)2, (short)26 },
                    { (short)2, (short)27 },
                    { (short)2, (short)28 },
                    { (short)2, (short)31 },
                    { (short)2, (short)32 },
                    { (short)2, (short)39 },
                    { (short)38, (short)2 },
                    { (short)38, (short)6 },
                    { (short)38, (short)40 },
                    { (short)39, (short)1 },
                    { (short)39, (short)5 },
                    { (short)39, (short)18 },
                    { (short)39, (short)31 },
                    { (short)2, (short)19 },
                    { (short)39, (short)32 },
                    { (short)40, (short)1 },
                    { (short)40, (short)5 },
                    { (short)40, (short)18 },
                    { (short)40, (short)31 },
                    { (short)40, (short)32 },
                    { (short)40, (short)39 },
                    { (short)41, (short)18 },
                    { (short)41, (short)31 },
                    { (short)42, (short)1 },
                    { (short)42, (short)5 },
                    { (short)42, (short)18 },
                    { (short)42, (short)31 },
                    { (short)42, (short)32 },
                    { (short)42, (short)39 },
                    { (short)39, (short)39 },
                    { (short)2, (short)17 },
                    { (short)2, (short)14 },
                    { (short)37, (short)31 },
                    { (short)34, (short)18 },
                    { (short)34, (short)31 },
                    { (short)35, (short)1 },
                    { (short)35, (short)4 },
                    { (short)35, (short)5 },
                    { (short)35, (short)7 },
                    { (short)35, (short)11 },
                    { (short)35, (short)12 },
                    { (short)35, (short)14 },
                    { (short)35, (short)22 },
                    { (short)35, (short)25 },
                    { (short)35, (short)26 },
                    { (short)35, (short)27 },
                    { (short)35, (short)28 },
                    { (short)35, (short)31 },
                    { (short)35, (short)32 },
                    { (short)35, (short)39 },
                    { (short)37, (short)12 },
                    { (short)37, (short)11 },
                    { (short)37, (short)7 },
                    { (short)2, (short)8 },
                    { (short)2, (short)5 },
                    { (short)36, (short)22 },
                    { (short)33, (short)32 },
                    { (short)36, (short)14 },
                    { (short)36, (short)11 },
                    { (short)36, (short)7 },
                    { (short)36, (short)5 },
                    { (short)2, (short)4 },
                    { (short)2, (short)3 },
                    { (short)2, (short)1 },
                    { (short)36, (short)12 },
                    { (short)6, (short)5 },
                    { (short)1, (short)7 },
                    { (short)30, (short)14 },
                    { (short)3, (short)5 },
                    { (short)3, (short)3 },
                    { (short)3, (short)2 },
                    { (short)3, (short)1 },
                    { (short)10, (short)16 },
                    { (short)11, (short)10 },
                    { (short)12, (short)5 },
                    { (short)13, (short)1 },
                    { (short)13, (short)5 },
                    { (short)3, (short)6 },
                    { (short)13, (short)13 },
                    { (short)14, (short)7 },
                    { (short)14, (short)11 },
                    { (short)14, (short)12 },
                    { (short)14, (short)14 },
                    { (short)14, (short)31 },
                    { (short)15, (short)18 },
                    { (short)16, (short)1 },
                    { (short)16, (short)3 },
                    { (short)16, (short)5 },
                    { (short)13, (short)32 },
                    { (short)3, (short)24 },
                    { (short)3, (short)32 },
                    { (short)3, (short)39 },
                    { (short)6, (short)3 },
                    { (short)6, (short)1 },
                    { (short)7, (short)1 },
                    { (short)7, (short)5 },
                    { (short)7, (short)25 },
                    { (short)7, (short)32 },
                    { (short)4, (short)32 },
                    { (short)4, (short)5 },
                    { (short)4, (short)3 },
                    { (short)4, (short)1 },
                    { (short)8, (short)1 },
                    { (short)8, (short)3 },
                    { (short)8, (short)5 },
                    { (short)8, (short)32 },
                    { (short)9, (short)1 },
                    { (short)9, (short)5 },
                    { (short)9, (short)18 },
                    { (short)9, (short)31 },
                    { (short)9, (short)32 },
                    { (short)9, (short)39 },
                    { (short)3, (short)40 },
                    { (short)16, (short)19 },
                    { (short)16, (short)26 },
                    { (short)16, (short)31 },
                    { (short)16, (short)32 },
                    { (short)22, (short)26 },
                    { (short)22, (short)28 },
                    { (short)23, (short)33 },
                    { (short)24, (short)29 },
                    { (short)25, (short)30 },
                    { (short)26, (short)30 },
                    { (short)27, (short)34 },
                    { (short)43, (short)18 },
                    { (short)28, (short)1 },
                    { (short)28, (short)2 },
                    { (short)28, (short)3 },
                    { (short)28, (short)5 },
                    { (short)28, (short)6 },
                    { (short)28, (short)24 },
                    { (short)28, (short)31 },
                    { (short)28, (short)32 },
                    { (short)28, (short)39 },
                    { (short)28, (short)40 },
                    { (short)29, (short)35 },
                    { (short)29, (short)36 },
                    { (short)29, (short)37 },
                    { (short)22, (short)4 },
                    { (short)31, (short)38 },
                    { (short)21, (short)32 },
                    { (short)21, (short)1 },
                    { (short)17, (short)1 },
                    { (short)17, (short)5 },
                    { (short)17, (short)32 },
                    { (short)1, (short)39 },
                    { (short)1, (short)32 },
                    { (short)1, (short)31 },
                    { (short)1, (short)28 },
                    { (short)1, (short)27 },
                    { (short)1, (short)26 },
                    { (short)1, (short)25 },
                    { (short)1, (short)22 },
                    { (short)18, (short)20 },
                    { (short)1, (short)14 },
                    { (short)1, (short)12 },
                    { (short)1, (short)11 },
                    { (short)6, (short)32 },
                    { (short)1, (short)5 },
                    { (short)1, (short)4 },
                    { (short)19, (short)21 },
                    { (short)1, (short)1 },
                    { (short)20, (short)23 },
                    { (short)21, (short)5 },
                    { (short)43, (short)31 }
                });

            migrationBuilder.InsertData(
                table: "dependents",
                columns: new[] { "DependentFilterListId", "DependencyFilterListId" },
                values: new object[,]
                {
                    { (short)852, (short)97 },
                    { (short)1817, (short)347 },
                    { (short)1816, (short)60 },
                    { (short)344, (short)479 },
                    { (short)344, (short)301 },
                    { (short)819, (short)97 },
                    { (short)853, (short)97 }
                });

            migrationBuilder.InsertData(
                table: "filterlists_languages",
                columns: new[] { "FilterListId", "LanguageId" },
                values: new object[,]
                {
                    { (short)1725, (short)18 },
                    { (short)1704, (short)154 },
                    { (short)1584, (short)106 },
                    { (short)1584, (short)44 },
                    { (short)885, (short)10 },
                    { (short)886, (short)83 },
                    { (short)887, (short)120 },
                    { (short)889, (short)110 },
                    { (short)1725, (short)48 },
                    { (short)1667, (short)163 },
                    { (short)890, (short)95 },
                    { (short)1666, (short)163 },
                    { (short)891, (short)13 },
                    { (short)892, (short)110 },
                    { (short)894, (short)110 },
                    { (short)895, (short)79 },
                    { (short)1536, (short)110 },
                    { (short)1164, (short)48 },
                    { (short)888, (short)122 },
                    { (short)1725, (short)122 },
                    { (short)703, (short)11 },
                    { (short)680, (short)106 },
                    { (short)13, (short)122 },
                    { (short)333, (short)87 },
                    { (short)12, (short)163 },
                    { (short)12, (short)122 },
                    { (short)1562, (short)18 },
                    { (short)11, (short)163 },
                    { (short)11, (short)122 },
                    { (short)6, (short)141 },
                    { (short)1, (short)141 },
                    { (short)1642, (short)87 },
                    { (short)897, (short)110 },
                    { (short)1656, (short)18 },
                    { (short)416, (short)167 },
                    { (short)882, (short)141 },
                    { (short)422, (short)99 },
                    { (short)422, (short)110 },
                    { (short)1096, (short)79 },
                    { (short)1918, (short)106 },
                    { (short)1918, (short)99 },
                    { (short)1897, (short)10 },
                    { (short)1886, (short)29 },
                    { (short)680, (short)44 },
                    { (short)1658, (short)58 },
                    { (short)898, (short)110 },
                    { (short)899, (short)167 },
                    { (short)901, (short)110 },
                    { (short)756, (short)27 },
                    { (short)925, (short)163 },
                    { (short)926, (short)79 },
                    { (short)927, (short)99 },
                    { (short)758, (short)10 },
                    { (short)928, (short)110 },
                    { (short)759, (short)183 },
                    { (short)930, (short)79 },
                    { (short)931, (short)163 },
                    { (short)1627, (short)58 },
                    { (short)932, (short)110 },
                    { (short)933, (short)79 },
                    { (short)934, (short)71 },
                    { (short)935, (short)79 },
                    { (short)1625, (short)99 },
                    { (short)937, (short)105 },
                    { (short)938, (short)106 },
                    { (short)773, (short)167 },
                    { (short)940, (short)110 },
                    { (short)941, (short)79 },
                    { (short)942, (short)79 },
                    { (short)943, (short)122 },
                    { (short)775, (short)25 },
                    { (short)924, (short)110 },
                    { (short)13, (short)163 },
                    { (short)923, (short)95 },
                    { (short)921, (short)110 },
                    { (short)1483, (short)141 },
                    { (short)902, (short)122 },
                    { (short)905, (short)163 },
                    { (short)1962, (short)48 },
                    { (short)906, (short)110 },
                    { (short)907, (short)110 },
                    { (short)370, (short)75 },
                    { (short)370, (short)105 },
                    { (short)909, (short)79 },
                    { (short)1583, (short)160 },
                    { (short)910, (short)108 },
                    { (short)1583, (short)106 },
                    { (short)911, (short)71 },
                    { (short)1583, (short)44 },
                    { (short)912, (short)110 },
                    { (short)388, (short)44 },
                    { (short)913, (short)13 },
                    { (short)1573, (short)99 },
                    { (short)914, (short)110 },
                    { (short)915, (short)110 },
                    { (short)916, (short)113 },
                    { (short)917, (short)163 },
                    { (short)920, (short)163 },
                    { (short)922, (short)13 },
                    { (short)944, (short)79 },
                    { (short)14, (short)122 },
                    { (short)1860, (short)141 },
                    { (short)215, (short)11 },
                    { (short)16, (short)154 },
                    { (short)206, (short)58 },
                    { (short)156, (short)48 },
                    { (short)205, (short)141 },
                    { (short)204, (short)141 },
                    { (short)203, (short)141 },
                    { (short)158, (short)13 },
                    { (short)202, (short)141 },
                    { (short)158, (short)79 },
                    { (short)201, (short)159 },
                    { (short)200, (short)159 },
                    { (short)1877, (short)106 },
                    { (short)1877, (short)44 },
                    { (short)1563, (short)48 },
                    { (short)199, (short)159 },
                    { (short)1566, (short)48 },
                    { (short)1574, (short)18 },
                    { (short)198, (short)179 },
                    { (short)198, (short)31 },
                    { (short)197, (short)179 },
                    { (short)197, (short)31 },
                    { (short)161, (short)18 },
                    { (short)216, (short)11 },
                    { (short)178, (short)18 },
                    { (short)217, (short)10 },
                    { (short)221, (short)112 },
                    { (short)254, (short)58 },
                    { (short)251, (short)110 },
                    { (short)251, (short)79 },
                    { (short)817, (short)83 },
                    { (short)248, (short)25 },
                    { (short)246, (short)95 },
                    { (short)246, (short)79 },
                    { (short)827, (short)110 },
                    { (short)827, (short)179 },
                    { (short)245, (short)87 },
                    { (short)1852, (short)87 },
                    { (short)240, (short)110 },
                    { (short)1853, (short)87 },
                    { (short)237, (short)112 },
                    { (short)1929, (short)44 },
                    { (short)232, (short)110 },
                    { (short)1938, (short)99 },
                    { (short)228, (short)10 },
                    { (short)1298, (short)99 },
                    { (short)224, (short)11 },
                    { (short)1299, (short)99 },
                    { (short)223, (short)11 },
                    { (short)222, (short)10 },
                    { (short)220, (short)154 },
                    { (short)1915, (short)154 },
                    { (short)171, (short)139 },
                    { (short)163, (short)141 },
                    { (short)101, (short)139 },
                    { (short)100, (short)139 },
                    { (short)1568, (short)110 },
                    { (short)99, (short)154 },
                    { (short)1569, (short)163 },
                    { (short)1570, (short)167 },
                    { (short)1585, (short)106 },
                    { (short)1585, (short)44 },
                    { (short)72, (short)177 },
                    { (short)1581, (short)44 },
                    { (short)1581, (short)46 },
                    { (short)69, (short)160 },
                    { (short)1581, (short)106 },
                    { (short)1581, (short)137 },
                    { (short)1581, (short)160 },
                    { (short)63, (short)141 },
                    { (short)62, (short)141 },
                    { (short)56, (short)27 },
                    { (short)51, (short)168 },
                    { (short)39, (short)27 },
                    { (short)31, (short)11 },
                    { (short)30, (short)11 },
                    { (short)1855, (short)154 },
                    { (short)1739, (short)141 },
                    { (short)171, (short)110 },
                    { (short)114, (short)110 },
                    { (short)116, (short)17 },
                    { (short)164, (short)167 },
                    { (short)150, (short)18 },
                    { (short)147, (short)106 },
                    { (short)146, (short)141 },
                    { (short)166, (short)110 },
                    { (short)1670, (short)154 },
                    { (short)136, (short)76 },
                    { (short)167, (short)108 },
                    { (short)1702, (short)141 },
                    { (short)1706, (short)167 },
                    { (short)134, (short)18 },
                    { (short)1707, (short)141 },
                    { (short)1708, (short)141 },
                    { (short)1709, (short)141 },
                    { (short)1713, (short)99 },
                    { (short)133, (short)18 },
                    { (short)132, (short)18 },
                    { (short)345, (short)11 },
                    { (short)131, (short)18 },
                    { (short)119, (short)17 },
                    { (short)118, (short)17 },
                    { (short)350, (short)163 },
                    { (short)117, (short)17 },
                    { (short)1528, (short)110 },
                    { (short)945, (short)79 },
                    { (short)948, (short)137 },
                    { (short)776, (short)113 },
                    { (short)1148, (short)163 },
                    { (short)1148, (short)122 },
                    { (short)1046, (short)163 },
                    { (short)1146, (short)159 },
                    { (short)1547, (short)175 },
                    { (short)1047, (short)110 },
                    { (short)1144, (short)108 },
                    { (short)1048, (short)110 },
                    { (short)1143, (short)105 },
                    { (short)1049, (short)163 },
                    { (short)1044, (short)18 },
                    { (short)1143, (short)75 },
                    { (short)1052, (short)159 },
                    { (short)1053, (short)13 },
                    { (short)1054, (short)122 },
                    { (short)1055, (short)163 },
                    { (short)1128, (short)110 },
                    { (short)1056, (short)71 },
                    { (short)1058, (short)110 },
                    { (short)670, (short)106 },
                    { (short)1124, (short)141 },
                    { (short)670, (short)44 },
                    { (short)1050, (short)110 },
                    { (short)1546, (short)139 },
                    { (short)1149, (short)87 },
                    { (short)1043, (short)17 },
                    { (short)1029, (short)44 },
                    { (short)1165, (short)27 },
                    { (short)1030, (short)122 },
                    { (short)1162, (short)141 },
                    { (short)1031, (short)55 },
                    { (short)1032, (short)110 },
                    { (short)1160, (short)48 },
                    { (short)1033, (short)122 },
                    { (short)1034, (short)79 },
                    { (short)1159, (short)177 },
                    { (short)1035, (short)79 },
                    { (short)1543, (short)154 },
                    { (short)1036, (short)79 },
                    { (short)1156, (short)168 },
                    { (short)1038, (short)110 },
                    { (short)1544, (short)13 },
                    { (short)1039, (short)11 },
                    { (short)1154, (short)139 },
                    { (short)1040, (short)13 },
                    { (short)1153, (short)79 },
                    { (short)1041, (short)79 },
                    { (short)1545, (short)139 },
                    { (short)1042, (short)122 },
                    { (short)1060, (short)108 },
                    { (short)1540, (short)11 },
                    { (short)1123, (short)141 },
                    { (short)1064, (short)110 },
                    { (short)1106, (short)141 },
                    { (short)20, (short)46 },
                    { (short)1638, (short)179 },
                    { (short)20, (short)44 },
                    { (short)1082, (short)110 },
                    { (short)1105, (short)141 },
                    { (short)1083, (short)122 },
                    { (short)1104, (short)141 },
                    { (short)1084, (short)48 },
                    { (short)1102, (short)113 },
                    { (short)1080, (short)110 },
                    { (short)1086, (short)110 },
                    { (short)1087, (short)110 },
                    { (short)1088, (short)110 },
                    { (short)1100, (short)110 },
                    { (short)1099, (short)122 },
                    { (short)1090, (short)122 },
                    { (short)1098, (short)163 },
                    { (short)1091, (short)110 },
                    { (short)1097, (short)58 },
                    { (short)1092, (short)110 },
                    { (short)1093, (short)79 },
                    { (short)1101, (short)110 },
                    { (short)20, (short)106 },
                    { (short)20, (short)137 },
                    { (short)1107, (short)159 },
                    { (short)1878, (short)106 },
                    { (short)1065, (short)110 },
                    { (short)1118, (short)110 },
                    { (short)1066, (short)154 },
                    { (short)1117, (short)11 },
                    { (short)1067, (short)79 },
                    { (short)1115, (short)11 },
                    { (short)340, (short)99 },
                    { (short)1069, (short)122 },
                    { (short)1114, (short)10 },
                    { (short)1070, (short)108 },
                    { (short)84, (short)11 },
                    { (short)1071, (short)83 },
                    { (short)1113, (short)154 },
                    { (short)1112, (short)10 },
                    { (short)1073, (short)122 },
                    { (short)435, (short)99 },
                    { (short)1111, (short)112 },
                    { (short)1075, (short)10 },
                    { (short)1108, (short)179 },
                    { (short)1555, (short)179 },
                    { (short)1077, (short)87 },
                    { (short)20, (short)160 },
                    { (short)1878, (short)44 },
                    { (short)946, (short)112 },
                    { (short)1028, (short)110 },
                    { (short)1027, (short)110 },
                    { (short)970, (short)163 },
                    { (short)1239, (short)167 },
                    { (short)784, (short)139 },
                    { (short)971, (short)110 },
                    { (short)972, (short)79 },
                    { (short)974, (short)177 },
                    { (short)786, (short)122 },
                    { (short)975, (short)160 },
                    { (short)786, (short)163 },
                    { (short)976, (short)110 },
                    { (short)969, (short)110 },
                    { (short)977, (short)179 },
                    { (short)979, (short)122 },
                    { (short)980, (short)110 },
                    { (short)787, (short)18 },
                    { (short)981, (short)110 },
                    { (short)982, (short)183 },
                    { (short)983, (short)159 },
                    { (short)788, (short)122 },
                    { (short)984, (short)163 },
                    { (short)985, (short)141 },
                    { (short)986, (short)110 },
                    { (short)978, (short)10 },
                    { (short)968, (short)163 },
                    { (short)967, (short)110 },
                    { (short)783, (short)17 },
                    { (short)689, (short)11 },
                    { (short)949, (short)110 },
                    { (short)777, (short)27 },
                    { (short)951, (short)139 },
                    { (short)952, (short)163 },
                    { (short)953, (short)163 },
                    { (short)954, (short)163 },
                    { (short)955, (short)163 },
                    { (short)779, (short)159 },
                    { (short)956, (short)110 },
                    { (short)957, (short)122 },
                    { (short)780, (short)183 },
                    { (short)959, (short)167 },
                    { (short)960, (short)110 },
                    { (short)781, (short)99 },
                    { (short)961, (short)168 },
                    { (short)963, (short)110 },
                    { (short)782, (short)108 },
                    { (short)964, (short)163 },
                    { (short)1286, (short)163 },
                    { (short)1286, (short)110 },
                    { (short)965, (short)110 },
                    { (short)966, (short)79 },
                    { (short)1220, (short)139 },
                    { (short)1167, (short)122 },
                    { (short)987, (short)122 },
                    { (short)789, (short)108 },
                    { (short)1010, (short)79 },
                    { (short)1011, (short)17 },
                    { (short)1190, (short)18 },
                    { (short)1189, (short)17 },
                    { (short)1013, (short)71 },
                    { (short)1014, (short)110 },
                    { (short)1015, (short)122 },
                    { (short)799, (short)159 },
                    { (short)1016, (short)13 },
                    { (short)1017, (short)110 },
                    { (short)1191, (short)18 },
                    { (short)1180, (short)11 },
                    { (short)800, (short)95 },
                    { (short)1020, (short)108 },
                    { (short)1021, (short)163 },
                    { (short)1022, (short)110 },
                    { (short)1023, (short)79 },
                    { (short)1173, (short)141 },
                    { (short)1173, (short)99 },
                    { (short)1024, (short)163 },
                    { (short)1025, (short)110 },
                    { (short)1026, (short)110 },
                    { (short)800, (short)79 },
                    { (short)1009, (short)163 },
                    { (short)798, (short)163 },
                    { (short)1192, (short)18 },
                    { (short)989, (short)110 },
                    { (short)990, (short)110 },
                    { (short)790, (short)110 },
                    { (short)991, (short)122 },
                    { (short)1214, (short)110 },
                    { (short)791, (short)18 },
                    { (short)994, (short)27 },
                    { (short)995, (short)122 },
                    { (short)793, (short)79 },
                    { (short)996, (short)122 },
                    { (short)793, (short)95 },
                    { (short)997, (short)167 },
                    { (short)794, (short)99 },
                    { (short)998, (short)25 },
                    { (short)795, (short)122 },
                    { (short)795, (short)163 },
                    { (short)1002, (short)163 },
                    { (short)796, (short)167 },
                    { (short)1197, (short)106 },
                    { (short)1005, (short)163 },
                    { (short)1194, (short)76 },
                    { (short)1007, (short)122 },
                    { (short)798, (short)122 },
                    { (short)1218, (short)48 },
                    { (short)1593, (short)160 },
                    { (short)181, (short)141 },
                    { (short)808, (short)177 },
                    { (short)315, (short)11 },
                    { (short)569, (short)99 },
                    { (short)1554, (short)31 },
                    { (short)869, (short)141 },
                    { (short)721, (short)13 },
                    { (short)1549, (short)139 },
                    { (short)332, (short)87 },
                    { (short)809, (short)108 },
                    { (short)1548, (short)95 },
                    { (short)1712, (short)99 },
                    { (short)346, (short)11 },
                    { (short)1548, (short)79 },
                    { (short)814, (short)141 },
                    { (short)815, (short)110 },
                    { (short)868, (short)141 },
                    { (short)815, (short)141 },
                    { (short)1529, (short)154 },
                    { (short)430, (short)106 },
                    { (short)316, (short)48 },
                    { (short)430, (short)44 },
                    { (short)734, (short)110 },
                    { (short)562, (short)99 },
                    { (short)818, (short)85 },
                    { (short)1703, (short)154 },
                    { (short)818, (short)144 },
                    { (short)818, (short)175 },
                    { (short)508, (short)11 },
                    { (short)1554, (short)55 },
                    { (short)877, (short)141 },
                    { (short)871, (short)141 },
                    { (short)836, (short)17 },
                    { (short)295, (short)108 },
                    { (short)574, (short)163 },
                    { (short)801, (short)29 },
                    { (short)59, (short)154 },
                    { (short)297, (short)75 },
                    { (short)297, (short)105 },
                    { (short)573, (short)110 },
                    { (short)609, (short)11 },
                    { (short)802, (short)122 },
                    { (short)298, (short)99 },
                    { (short)608, (short)11 },
                    { (short)299, (short)99 },
                    { (short)61, (short)11 },
                    { (short)743, (short)18 },
                    { (short)803, (short)160 },
                    { (short)600, (short)58 },
                    { (short)300, (short)99 },
                    { (short)607, (short)11 },
                    { (short)663, (short)58 },
                    { (short)804, (short)84 },
                    { (short)570, (short)105 },
                    { (short)733, (short)99 },
                    { (short)806, (short)13 },
                    { (short)878, (short)141 },
                    { (short)1842, (short)106 },
                    { (short)305, (short)75 },
                    { (short)305, (short)105 },
                    { (short)720, (short)13 },
                    { (short)879, (short)141 },
                    { (short)770, (short)13 },
                    { (short)1294, (short)139 },
                    { (short)744, (short)110 },
                    { (short)344, (short)11 },
                    { (short)335, (short)141 },
                    { (short)875, (short)141 },
                    { (short)847, (short)87 },
                    { (short)1841, (short)106 },
                    { (short)349, (short)11 },
                    { (short)437, (short)13 },
                    { (short)1841, (short)44 },
                    { (short)874, (short)141 },
                    { (short)336, (short)141 },
                    { (short)873, (short)141 },
                    { (short)331, (short)87 },
                    { (short)343, (short)11 },
                    { (short)872, (short)141 },
                    { (short)337, (short)141 },
                    { (short)331, (short)110 },
                    { (short)1817, (short)11 },
                    { (short)870, (short)141 },
                    { (short)1816, (short)11 },
                    { (short)807, (short)159 },
                    { (short)347, (short)11 },
                    { (short)429, (short)110 },
                    { (short)342, (short)11 },
                    { (short)341, (short)11 },
                    { (short)338, (short)141 },
                    { (short)429, (short)167 },
                    { (short)1842, (short)44 },
                    { (short)876, (short)141 },
                    { (short)805, (short)18 },
                    { (short)1947, (short)99 },
                    { (short)334, (short)141 },
                    { (short)253, (short)18 },
                    { (short)480, (short)79 },
                    { (short)746, (short)179 },
                    { (short)822, (short)99 },
                    { (short)1284, (short)139 },
                    { (short)329, (short)99 },
                    { (short)390, (short)11 },
                    { (short)369, (short)105 },
                    { (short)369, (short)75 },
                    { (short)479, (short)11 },
                    { (short)1280, (short)11 },
                    { (short)846, (short)87 },
                    { (short)1279, (short)11 },
                    { (short)113, (short)141 },
                    { (short)828, (short)107 },
                    { (short)829, (short)74 },
                    { (short)399, (short)83 },
                    { (short)330, (short)87 },
                    { (short)1242, (short)110 },
                    { (short)330, (short)110 },
                    { (short)563, (short)154 },
                    { (short)829, (short)84 },
                    { (short)884, (short)139 },
                    { (short)747, (short)10 },
                    { (short)1949, (short)99 },
                    { (short)839, (short)110 },
                    { (short)839, (short)163 },
                    { (short)1948, (short)99 },
                    { (short)1242, (short)167 },
                    { (short)294, (short)108 },
                    { (short)339, (short)99 },
                    { (short)141, (short)110 },
                    { (short)225, (short)141 },
                    { (short)277, (short)105 },
                    { (short)728, (short)179 },
                    { (short)1848, (short)99 },
                    { (short)1859, (short)141 },
                    { (short)1876, (short)106 },
                    { (short)1671, (short)17 },
                    { (short)278, (short)154 },
                    { (short)602, (short)87 },
                    { (short)586, (short)79 },
                    { (short)1669, (short)10 },
                    { (short)1876, (short)44 },
                    { (short)283, (short)113 },
                    { (short)745, (short)154 },
                    { (short)252, (short)159 },
                    { (short)258, (short)79 },
                    { (short)614, (short)11 },
                    { (short)585, (short)18 },
                    { (short)49, (short)141 },
                    { (short)284, (short)113 },
                    { (short)281, (short)99 },
                    { (short)1799, (short)122 },
                    { (short)688, (short)13 },
                    { (short)1858, (short)141 },
                    { (short)1961, (short)48 },
                    { (short)267, (short)25 },
                    { (short)1281, (short)11 },
                    { (short)1849, (short)99 },
                    { (short)1582, (short)106 },
                    { (short)616, (short)11 },
                    { (short)260, (short)11 },
                    { (short)593, (short)110 },
                    { (short)1840, (short)44 },
                    { (short)1582, (short)44 },
                    { (short)1850, (short)99 },
                    { (short)1705, (short)99 },
                    { (short)268, (short)99 },
                    { (short)261, (short)154 },
                    { (short)1582, (short)137 },
                    { (short)731, (short)83 },
                    { (short)1582, (short)160 },
                    { (short)1857, (short)141 },
                    { (short)264, (short)175 },
                    { (short)269, (short)159 },
                    { (short)1672, (short)17 },
                    { (short)1582, (short)46 },
                    { (short)258, (short)13 },
                    { (short)731, (short)110 },
                    { (short)613, (short)11 },
                    { (short)598, (short)58 },
                    { (short)767, (short)99 },
                    { (short)1283, (short)120 },
                    { (short)767, (short)110 },
                    { (short)291, (short)183 },
                    { (short)1840, (short)106 },
                    { (short)769, (short)163 },
                    { (short)292, (short)167 },
                    { (short)611, (short)11 },
                    { (short)263, (short)183 },
                    { (short)766, (short)99 },
                    { (short)1602, (short)99 },
                    { (short)1889, (short)99 },
                    { (short)726, (short)99 },
                    { (short)599, (short)58 },
                    { (short)183, (short)17 },
                    { (short)60, (short)11 },
                    { (short)1864, (short)74 },
                    { (short)293, (short)167 },
                    { (short)256, (short)48 },
                    { (short)610, (short)11 },
                    { (short)1846, (short)29 },
                    { (short)1593, (short)137 },
                    { (short)262, (short)141 },
                    { (short)575, (short)167 },
                    { (short)1593, (short)106 },
                    { (short)53, (short)141 },
                    { (short)1593, (short)44 },
                    { (short)1890, (short)167 },
                    { (short)143, (short)110 },
                    { (short)1593, (short)46 },
                    { (short)151, (short)110 },
                    { (short)144, (short)110 },
                    { (short)1861, (short)141 },
                    { (short)583, (short)13 },
                    { (short)289, (short)159 },
                    { (short)1862, (short)141 },
                    { (short)290, (short)183 },
                    { (short)1863, (short)141 },
                    { (short)1888, (short)99 },
                    { (short)257, (short)83 },
                    { (short)145, (short)110 },
                    { (short)601, (short)87 },
                    { (short)612, (short)11 }
                });

            migrationBuilder.InsertData(
                table: "filterlists_maintainers",
                columns: new[] { "FilterListId", "MaintainerId" },
                values: new object[,]
                {
                    { (short)344, (short)70 },
                    { (short)1325, (short)116 },
                    { (short)1216, (short)109 },
                    { (short)789, (short)7 },
                    { (short)1215, (short)109 },
                    { (short)1217, (short)109 },
                    { (short)778, (short)7 },
                    { (short)353, (short)48 },
                    { (short)1245, (short)109 },
                    { (short)792, (short)7 },
                    { (short)777, (short)102 },
                    { (short)1204, (short)109 },
                    { (short)1205, (short)109 },
                    { (short)1331, (short)116 },
                    { (short)1206, (short)109 },
                    { (short)794, (short)98 },
                    { (short)856, (short)22 },
                    { (short)1207, (short)109 },
                    { (short)851, (short)22 },
                    { (short)1209, (short)109 },
                    { (short)342, (short)70 },
                    { (short)1327, (short)116 },
                    { (short)850, (short)22 },
                    { (short)848, (short)22 },
                    { (short)1210, (short)109 },
                    { (short)1211, (short)109 },
                    { (short)1329, (short)116 },
                    { (short)343, (short)32 },
                    { (short)847, (short)106 },
                    { (short)1212, (short)109 },
                    { (short)1213, (short)109 },
                    { (short)790, (short)7 },
                    { (short)1214, (short)109 },
                    { (short)777, (short)7 },
                    { (short)354, (short)48 },
                    { (short)369, (short)52 },
                    { (short)1323, (short)116 },
                    { (short)1311, (short)116 },
                    { (short)1232, (short)110 },
                    { (short)379, (short)57 },
                    { (short)1233, (short)110 },
                    { (short)1309, (short)116 },
                    { (short)1234, (short)110 },
                    { (short)785, (short)14 },
                    { (short)1235, (short)110 },
                    { (short)1237, (short)110 },
                    { (short)431, (short)22 },
                    { (short)380, (short)58 },
                    { (short)1307, (short)116 },
                    { (short)784, (short)7 },
                    { (short)1238, (short)110 },
                    { (short)781, (short)7 },
                    { (short)1305, (short)116 },
                    { (short)806, (short)7 },
                    { (short)781, (short)98 },
                    { (short)1300, (short)115 },
                    { (short)1239, (short)110 },
                    { (short)1240, (short)110 },
                    { (short)783, (short)96 },
                    { (short)1241, (short)110 },
                    { (short)783, (short)7 },
                    { (short)410, (short)57 },
                    { (short)1243, (short)109 },
                    { (short)405, (short)57 },
                    { (short)782, (short)7 },
                    { (short)1244, (short)109 },
                    { (short)1231, (short)110 },
                    { (short)786, (short)7 },
                    { (short)375, (short)54 },
                    { (short)1230, (short)109 },
                    { (short)1321, (short)116 },
                    { (short)730, (short)134 },
                    { (short)1220, (short)109 },
                    { (short)356, (short)48 },
                    { (short)788, (short)13 },
                    { (short)1221, (short)109 },
                    { (short)514, (short)77 },
                    { (short)788, (short)12 },
                    { (short)1222, (short)109 },
                    { (short)1319, (short)116 },
                    { (short)779, (short)7 },
                    { (short)1223, (short)109 },
                    { (short)1317, (short)116 },
                    { (short)1224, (short)109 },
                    { (short)1218, (short)109 },
                    { (short)787, (short)92 },
                    { (short)1225, (short)109 },
                    { (short)787, (short)7 },
                    { (short)819, (short)22 },
                    { (short)1226, (short)109 },
                    { (short)513, (short)76 },
                    { (short)1227, (short)109 },
                    { (short)1228, (short)109 },
                    { (short)1313, (short)116 },
                    { (short)780, (short)7 },
                    { (short)786, (short)13 },
                    { (short)1229, (short)109 },
                    { (short)816, (short)22 },
                    { (short)786, (short)12 },
                    { (short)780, (short)97 },
                    { (short)1315, (short)116 },
                    { (short)1593, (short)22 },
                    { (short)1169, (short)109 },
                    { (short)1202, (short)109 },
                    { (short)1565, (short)22 },
                    { (short)1127, (short)109 },
                    { (short)1126, (short)109 },
                    { (short)397, (short)63 },
                    { (short)1125, (short)109 },
                    { (short)1124, (short)109 },
                    { (short)1567, (short)46 },
                    { (short)1579, (short)22 },
                    { (short)398, (short)63 },
                    { (short)1123, (short)109 },
                    { (short)1591, (short)22 },
                    { (short)1122, (short)109 },
                    { (short)512, (short)75 },
                    { (short)1120, (short)109 },
                    { (short)1119, (short)109 },
                    { (short)27, (short)24 },
                    { (short)1118, (short)109 },
                    { (short)1602, (short)138 },
                    { (short)2021, (short)6 },
                    { (short)396, (short)63 },
                    { (short)1878, (short)22 },
                    { (short)1564, (short)22 },
                    { (short)1130, (short)109 },
                    { (short)1532, (short)128 },
                    { (short)1146, (short)109 },
                    { (short)1548, (short)7 },
                    { (short)83, (short)63 },
                    { (short)1144, (short)109 },
                    { (short)1549, (short)7 },
                    { (short)1143, (short)109 },
                    { (short)1552, (short)22 },
                    { (short)1588, (short)22 },
                    { (short)1142, (short)109 },
                    { (short)1141, (short)109 },
                    { (short)393, (short)22 },
                    { (short)1140, (short)109 },
                    { (short)1554, (short)22 },
                    { (short)1139, (short)109 },
                    { (short)1135, (short)109 },
                    { (short)857, (short)22 },
                    { (short)1133, (short)109 },
                    { (short)61, (short)34 },
                    { (short)1128, (short)109 },
                    { (short)1148, (short)109 },
                    { (short)1117, (short)109 },
                    { (short)1604, (short)22 },
                    { (short)1967, (short)22 },
                    { (short)1105, (short)109 },
                    { (short)1838, (short)144 },
                    { (short)1966, (short)22 },
                    { (short)1104, (short)109 },
                    { (short)1965, (short)22 },
                    { (short)1103, (short)109 },
                    { (short)302, (short)79 },
                    { (short)1102, (short)109 },
                    { (short)1964, (short)22 },
                    { (short)1101, (short)109 },
                    { (short)1524, (short)126 },
                    { (short)1100, (short)109 },
                    { (short)1099, (short)109 },
                    { (short)1525, (short)126 },
                    { (short)1098, (short)109 },
                    { (short)1097, (short)109 },
                    { (short)510, (short)73 },
                    { (short)1096, (short)109 },
                    { (short)1836, (short)144 },
                    { (short)2020, (short)6 },
                    { (short)1976, (short)22 },
                    { (short)1106, (short)109 },
                    { (short)1116, (short)109 },
                    { (short)1115, (short)109 },
                    { (short)1605, (short)22 },
                    { (short)2019, (short)6 },
                    { (short)1114, (short)109 },
                    { (short)1606, (short)22 },
                    { (short)340, (short)43 },
                    { (short)1113, (short)109 },
                    { (short)1637, (short)22 },
                    { (short)1112, (short)109 },
                    { (short)1988, (short)22 },
                    { (short)1111, (short)109 },
                    { (short)1110, (short)109 },
                    { (short)1109, (short)109 },
                    { (short)1108, (short)109 },
                    { (short)1987, (short)22 },
                    { (short)1107, (short)109 },
                    { (short)1832, (short)22 },
                    { (short)1984, (short)22 },
                    { (short)1834, (short)142 },
                    { (short)87, (short)57 },
                    { (short)1531, (short)128 },
                    { (short)88, (short)57 },
                    { (short)1185, (short)109 },
                    { (short)1184, (short)109 },
                    { (short)874, (short)108 },
                    { (short)313, (short)26 },
                    { (short)1183, (short)109 },
                    { (short)799, (short)7 },
                    { (short)1182, (short)109 },
                    { (short)1180, (short)109 },
                    { (short)875, (short)108 },
                    { (short)1179, (short)109 },
                    { (short)876, (short)108 },
                    { (short)1176, (short)109 },
                    { (short)800, (short)7 },
                    { (short)1175, (short)109 },
                    { (short)1174, (short)109 },
                    { (short)312, (short)26 },
                    { (short)1537, (short)7 },
                    { (short)1173, (short)109 },
                    { (short)881, (short)108 },
                    { (short)798, (short)13 },
                    { (short)884, (short)134 },
                    { (short)1187, (short)109 },
                    { (short)873, (short)108 },
                    { (short)859, (short)22 },
                    { (short)341, (short)32 },
                    { (short)1199, (short)109 },
                    { (short)796, (short)7 },
                    { (short)1197, (short)109 },
                    { (short)1196, (short)109 },
                    { (short)863, (short)22 },
                    { (short)797, (short)7 },
                    { (short)1194, (short)109 },
                    { (short)331, (short)38 },
                    { (short)1193, (short)109 },
                    { (short)1192, (short)109 },
                    { (short)870, (short)108 },
                    { (short)1191, (short)109 },
                    { (short)872, (short)108 },
                    { (short)798, (short)7 },
                    { (short)1190, (short)109 },
                    { (short)798, (short)11 },
                    { (short)1189, (short)109 },
                    { (short)798, (short)12 },
                    { (short)1172, (short)109 },
                    { (short)1538, (short)7 },
                    { (short)311, (short)26 },
                    { (short)1543, (short)7 },
                    { (short)1156, (short)109 },
                    { (short)1294, (short)134 },
                    { (short)1155, (short)109 },
                    { (short)1456, (short)22 },
                    { (short)102, (short)94 },
                    { (short)1154, (short)109 },
                    { (short)1459, (short)22 },
                    { (short)1461, (short)22 },
                    { (short)1544, (short)7 },
                    { (short)91, (short)57 },
                    { (short)1153, (short)109 },
                    { (short)90, (short)57 },
                    { (short)89, (short)57 },
                    { (short)1152, (short)109 },
                    { (short)1511, (short)121 },
                    { (short)1151, (short)109 },
                    { (short)1149, (short)109 },
                    { (short)1529, (short)7 },
                    { (short)1157, (short)109 },
                    { (short)1292, (short)22 },
                    { (short)1158, (short)109 },
                    { (short)1291, (short)22 },
                    { (short)1168, (short)109 },
                    { (short)1539, (short)7 },
                    { (short)1167, (short)109 },
                    { (short)1242, (short)110 },
                    { (short)1166, (short)109 },
                    { (short)1247, (short)22 },
                    { (short)307, (short)20 },
                    { (short)1165, (short)109 },
                    { (short)1279, (short)112 },
                    { (short)1203, (short)109 },
                    { (short)1540, (short)7 },
                    { (short)1280, (short)112 },
                    { (short)270, (short)88 },
                    { (short)1541, (short)7 },
                    { (short)1161, (short)109 },
                    { (short)1160, (short)109 },
                    { (short)1284, (short)134 },
                    { (short)1289, (short)22 },
                    { (short)1542, (short)7 },
                    { (short)1159, (short)109 },
                    { (short)1162, (short)109 },
                    { (short)515, (short)78 },
                    { (short)1381, (short)116 },
                    { (short)1335, (short)116 },
                    { (short)14, (short)13 },
                    { (short)14, (short)12 },
                    { (short)1968, (short)46 },
                    { (short)13, (short)13 },
                    { (short)13, (short)12 },
                    { (short)13, (short)7 },
                    { (short)346, (short)32 },
                    { (short)1969, (short)46 },
                    { (short)12, (short)13 },
                    { (short)868, (short)108 },
                    { (short)12, (short)12 },
                    { (short)355, (short)48 },
                    { (short)372, (short)53 },
                    { (short)11, (short)13 },
                    { (short)11, (short)12 },
                    { (short)11, (short)11 },
                    { (short)11, (short)7 },
                    { (short)373, (short)53 },
                    { (short)862, (short)38 },
                    { (short)1970, (short)46 },
                    { (short)12, (short)11 },
                    { (short)18, (short)20 },
                    { (short)332, (short)38 },
                    { (short)327, (short)22 },
                    { (short)299, (short)98 },
                    { (short)1568, (short)46 },
                    { (short)300, (short)98 },
                    { (short)98, (short)6 },
                    { (short)1569, (short)46 },
                    { (short)97, (short)6 },
                    { (short)301, (short)7 },
                    { (short)878, (short)108 },
                    { (short)1570, (short)46 },
                    { (short)71, (short)136 },
                    { (short)305, (short)52 },
                    { (short)871, (short)108 },
                    { (short)306, (short)6 },
                    { (short)1581, (short)22 },
                    { (short)56, (short)102 },
                    { (short)56, (short)7 },
                    { (short)315, (short)28 },
                    { (short)39, (short)102 },
                    { (short)869, (short)108 },
                    { (short)1587, (short)22 },
                    { (short)30, (short)34 },
                    { (short)6, (short)8 },
                    { (short)1971, (short)46 },
                    { (short)2, (short)3 },
                    { (short)367, (short)51 },
                    { (short)1316, (short)116 },
                    { (short)1318, (short)116 },
                    { (short)391, (short)22 },
                    { (short)392, (short)22 },
                    { (short)1320, (short)116 },
                    { (short)1322, (short)116 },
                    { (short)1324, (short)116 },
                    { (short)1326, (short)116 },
                    { (short)1328, (short)116 },
                    { (short)1330, (short)116 },
                    { (short)1332, (short)116 },
                    { (short)1334, (short)116 },
                    { (short)1336, (short)116 },
                    { (short)399, (short)64 }
                });

            migrationBuilder.InsertData(
                table: "filterlists_maintainers",
                columns: new[] { "FilterListId", "MaintainerId" },
                values: new object[,]
                {
                    { (short)1338, (short)116 },
                    { (short)1340, (short)116 },
                    { (short)1342, (short)116 },
                    { (short)1344, (short)116 },
                    { (short)1346, (short)116 },
                    { (short)1348, (short)116 },
                    { (short)1835, (short)143 },
                    { (short)1314, (short)116 },
                    { (short)1528, (short)46 },
                    { (short)1312, (short)116 },
                    { (short)846, (short)38 },
                    { (short)1, (short)2 },
                    { (short)374, (short)53 },
                    { (short)368, (short)51 },
                    { (short)820, (short)57 },
                    { (short)1285, (short)134 },
                    { (short)376, (short)55 },
                    { (short)861, (short)107 },
                    { (short)381, (short)59 },
                    { (short)1982, (short)22 },
                    { (short)1981, (short)22 },
                    { (short)1980, (short)22 },
                    { (short)1978, (short)22 },
                    { (short)855, (short)22 },
                    { (short)1977, (short)22 },
                    { (short)348, (short)44 },
                    { (short)385, (short)22 },
                    { (short)1975, (short)22 },
                    { (short)1973, (short)22 },
                    { (short)1306, (short)116 },
                    { (short)1308, (short)116 },
                    { (short)390, (short)34 },
                    { (short)1310, (short)116 },
                    { (short)299, (short)7 },
                    { (short)879, (short)108 },
                    { (short)116, (short)96 },
                    { (short)262, (short)14 },
                    { (short)223, (short)32 },
                    { (short)1556, (short)131 },
                    { (short)1990, (short)22 },
                    { (short)1991, (short)22 },
                    { (short)263, (short)14 },
                    { (short)216, (short)32 },
                    { (short)1550, (short)22 },
                    { (short)264, (short)14 },
                    { (short)214, (short)7 },
                    { (short)16, (short)18 },
                    { (short)207, (short)47 },
                    { (short)155, (short)46 },
                    { (short)1535, (short)22 },
                    { (short)266, (short)14 },
                    { (short)205, (short)95 },
                    { (short)156, (short)46 },
                    { (short)204, (short)95 },
                    { (short)157, (short)46 },
                    { (short)203, (short)95 },
                    { (short)267, (short)99 },
                    { (short)224, (short)32 },
                    { (short)202, (short)95 },
                    { (short)227, (short)6 },
                    { (short)229, (short)6 },
                    { (short)255, (short)14 },
                    { (short)256, (short)14 },
                    { (short)254, (short)14 },
                    { (short)250, (short)14 },
                    { (short)248, (short)99 },
                    { (short)248, (short)7 },
                    { (short)257, (short)14 },
                    { (short)247, (short)14 },
                    { (short)1737, (short)22 },
                    { (short)243, (short)7 },
                    { (short)1833, (short)141 },
                    { (short)242, (short)7 },
                    { (short)258, (short)14 },
                    { (short)241, (short)7 },
                    { (short)240, (short)7 },
                    { (short)259, (short)14 },
                    { (short)239, (short)7 },
                    { (short)260, (short)14 },
                    { (short)1576, (short)22 },
                    { (short)1929, (short)22 },
                    { (short)261, (short)14 },
                    { (short)1558, (short)107 },
                    { (short)1350, (short)116 },
                    { (short)1304, (short)38 },
                    { (short)269, (short)7 },
                    { (short)291, (short)97 },
                    { (short)167, (short)46 },
                    { (short)292, (short)7 },
                    { (short)135, (short)129 },
                    { (short)134, (short)92 },
                    { (short)1281, (short)112 },
                    { (short)169, (short)46 },
                    { (short)133, (short)92 },
                    { (short)293, (short)7 },
                    { (short)133, (short)7 },
                    { (short)132, (short)92 },
                    { (short)294, (short)7 },
                    { (short)131, (short)92 },
                    { (short)295, (short)7 },
                    { (short)345, (short)32 },
                    { (short)118, (short)96 },
                    { (short)297, (short)7 },
                    { (short)117, (short)96 },
                    { (short)117, (short)7 },
                    { (short)297, (short)52 },
                    { (short)350, (short)46 },
                    { (short)136, (short)68 },
                    { (short)201, (short)133 },
                    { (short)166, (short)46 },
                    { (short)290, (short)7 },
                    { (short)158, (short)46 },
                    { (short)200, (short)133 },
                    { (short)199, (short)133 },
                    { (short)1303, (short)38 },
                    { (short)1297, (short)94 },
                    { (short)159, (short)46 },
                    { (short)283, (short)7 },
                    { (short)283, (short)100 },
                    { (short)1288, (short)63 },
                    { (short)197, (short)7 },
                    { (short)160, (short)46 },
                    { (short)184, (short)14 },
                    { (short)284, (short)100 },
                    { (short)161, (short)46 },
                    { (short)162, (short)46 },
                    { (short)289, (short)7 },
                    { (short)163, (short)46 },
                    { (short)170, (short)7 },
                    { (short)150, (short)92 },
                    { (short)164, (short)46 },
                    { (short)165, (short)46 },
                    { (short)290, (short)97 },
                    { (short)1815, (short)22 },
                    { (short)1352, (short)116 },
                    { (short)1814, (short)22 },
                    { (short)1419, (short)116 },
                    { (short)673, (short)91 },
                    { (short)1417, (short)116 },
                    { (short)1415, (short)116 },
                    { (short)1413, (short)116 },
                    { (short)1411, (short)116 },
                    { (short)1409, (short)116 },
                    { (short)565, (short)82 },
                    { (short)1407, (short)116 },
                    { (short)1405, (short)116 },
                    { (short)1403, (short)116 },
                    { (short)1401, (short)116 },
                    { (short)603, (short)22 },
                    { (short)1399, (short)116 },
                    { (short)1397, (short)116 },
                    { (short)1395, (short)116 },
                    { (short)607, (short)34 },
                    { (short)756, (short)102 },
                    { (short)1393, (short)116 },
                    { (short)1391, (short)116 },
                    { (short)1389, (short)116 },
                    { (short)1421, (short)116 },
                    { (short)608, (short)34 },
                    { (short)729, (short)134 },
                    { (short)1423, (short)116 },
                    { (short)1445, (short)116 },
                    { (short)1443, (short)116 },
                    { (short)1441, (short)116 },
                    { (short)504, (short)22 },
                    { (short)1439, (short)116 },
                    { (short)370, (short)52 },
                    { (short)505, (short)22 },
                    { (short)506, (short)6 },
                    { (short)1437, (short)116 },
                    { (short)1435, (short)116 },
                    { (short)508, (short)34 },
                    { (short)509, (short)72 },
                    { (short)517, (short)78 },
                    { (short)1433, (short)116 },
                    { (short)734, (short)38 },
                    { (short)388, (short)22 },
                    { (short)1431, (short)116 },
                    { (short)1429, (short)116 },
                    { (short)1427, (short)116 },
                    { (short)1425, (short)116 },
                    { (short)564, (short)14 },
                    { (short)507, (short)7 },
                    { (short)479, (short)7 },
                    { (short)1387, (short)116 },
                    { (short)1385, (short)116 },
                    { (short)773, (short)7 },
                    { (short)1355, (short)116 },
                    { (short)616, (short)34 },
                    { (short)1353, (short)116 },
                    { (short)774, (short)14 },
                    { (short)1351, (short)116 },
                    { (short)1349, (short)116 },
                    { (short)658, (short)94 },
                    { (short)1347, (short)116 },
                    { (short)660, (short)94 },
                    { (short)775, (short)7 },
                    { (short)1345, (short)116 },
                    { (short)686, (short)82 },
                    { (short)775, (short)99 },
                    { (short)1343, (short)116 },
                    { (short)601, (short)38 },
                    { (short)1341, (short)116 },
                    { (short)1339, (short)116 },
                    { (short)776, (short)7 },
                    { (short)1337, (short)116 },
                    { (short)776, (short)100 },
                    { (short)1357, (short)116 },
                    { (short)609, (short)34 },
                    { (short)614, (short)34 },
                    { (short)1361, (short)116 },
                    { (short)661, (short)94 },
                    { (short)1383, (short)116 },
                    { (short)759, (short)14 },
                    { (short)1379, (short)116 },
                    { (short)610, (short)34 },
                    { (short)1377, (short)116 },
                    { (short)611, (short)34 },
                    { (short)1375, (short)116 },
                    { (short)762, (short)14 },
                    { (short)659, (short)94 },
                    { (short)1373, (short)116 },
                    { (short)1371, (short)116 },
                    { (short)763, (short)14 },
                    { (short)1369, (short)116 },
                    { (short)612, (short)34 },
                    { (short)1367, (short)116 },
                    { (short)764, (short)14 },
                    { (short)1365, (short)116 },
                    { (short)1363, (short)116 },
                    { (short)765, (short)14 },
                    { (short)613, (short)34 },
                    { (short)1359, (short)116 },
                    { (short)1333, (short)116 },
                    { (short)1447, (short)116 },
                    { (short)1451, (short)116 },
                    { (short)1384, (short)116 },
                    { (short)1744, (short)84 },
                    { (short)1386, (short)116 },
                    { (short)1388, (short)116 },
                    { (short)1743, (short)84 },
                    { (short)1390, (short)116 },
                    { (short)1392, (short)116 },
                    { (short)1394, (short)116 },
                    { (short)1396, (short)116 },
                    { (short)403, (short)64 },
                    { (short)1398, (short)116 },
                    { (short)1400, (short)116 },
                    { (short)1402, (short)116 },
                    { (short)1404, (short)116 },
                    { (short)843, (short)38 },
                    { (short)1406, (short)116 },
                    { (short)1408, (short)116 },
                    { (short)1410, (short)116 },
                    { (short)1412, (short)116 },
                    { (short)1414, (short)116 },
                    { (short)1416, (short)116 },
                    { (short)1382, (short)116 },
                    { (short)1418, (short)116 },
                    { (short)1745, (short)84 },
                    { (short)1378, (short)116 },
                    { (short)1753, (short)84 },
                    { (short)1354, (short)116 },
                    { (short)1752, (short)84 },
                    { (short)1751, (short)84 },
                    { (short)1356, (short)116 },
                    { (short)1750, (short)84 },
                    { (short)1358, (short)116 },
                    { (short)1360, (short)116 },
                    { (short)1362, (short)116 },
                    { (short)1364, (short)116 },
                    { (short)1749, (short)84 },
                    { (short)1366, (short)116 },
                    { (short)1368, (short)116 },
                    { (short)1370, (short)116 },
                    { (short)1748, (short)84 },
                    { (short)1747, (short)84 },
                    { (short)1372, (short)116 },
                    { (short)1374, (short)116 },
                    { (short)844, (short)38 },
                    { (short)1376, (short)116 },
                    { (short)1746, (short)84 },
                    { (short)1380, (short)116 },
                    { (short)1449, (short)116 },
                    { (short)1420, (short)116 },
                    { (short)1424, (short)116 },
                    { (short)437, (short)71 },
                    { (short)675, (short)91 },
                    { (short)681, (short)10 },
                    { (short)1536, (short)130 },
                    { (short)467, (short)128 },
                    { (short)1519, (short)121 },
                    { (short)1517, (short)121 },
                    { (short)1509, (short)125 },
                    { (short)468, (short)128 },
                    { (short)1534, (short)129 },
                    { (short)1508, (short)125 },
                    { (short)1499, (short)121 },
                    { (short)1498, (short)121 },
                    { (short)1490, (short)121 },
                    { (short)1483, (short)2 },
                    { (short)1474, (short)118 },
                    { (short)469, (short)128 },
                    { (short)1473, (short)118 },
                    { (short)1472, (short)118 },
                    { (short)1465, (short)135 },
                    { (short)1464, (short)135 },
                    { (short)604, (short)115 },
                    { (short)1422, (short)116 },
                    { (short)415, (short)66 },
                    { (short)1636, (short)22 },
                    { (short)1426, (short)116 },
                    { (short)1428, (short)116 },
                    { (short)1430, (short)116 },
                    { (short)429, (short)68 },
                    { (short)432, (short)22 },
                    { (short)1432, (short)116 },
                    { (short)1434, (short)116 },
                    { (short)1436, (short)116 },
                    { (short)1438, (short)116 },
                    { (short)433, (short)22 },
                    { (short)1440, (short)116 },
                    { (short)1442, (short)116 },
                    { (short)1444, (short)116 },
                    { (short)1446, (short)116 },
                    { (short)1448, (short)116 },
                    { (short)434, (short)22 },
                    { (short)436, (short)64 },
                    { (short)805, (short)92 },
                    { (short)1450, (short)116 },
                    { (short)1452, (short)116 },
                    { (short)1485, (short)120 },
                    { (short)1486, (short)120 },
                    { (short)1095, (short)109 },
                    { (short)1121, (short)109 },
                    { (short)959, (short)109 },
                    { (short)1094, (short)109 },
                    { (short)363, (short)49 },
                    { (short)923, (short)109 },
                    { (short)617, (short)91 },
                    { (short)115, (short)129 },
                    { (short)924, (short)109 },
                    { (short)925, (short)109 },
                    { (short)359, (short)49 },
                    { (short)1551, (short)22 },
                    { (short)926, (short)109 },
                    { (short)358, (short)49 },
                    { (short)927, (short)109 },
                    { (short)357, (short)49 },
                    { (short)1930, (short)22 },
                    { (short)928, (short)109 },
                    { (short)1562, (short)132 },
                    { (short)929, (short)109 },
                    { (short)936, (short)109 },
                    { (short)935, (short)109 },
                    { (short)322, (short)30 },
                    { (short)934, (short)109 },
                    { (short)1952, (short)22 },
                    { (short)323, (short)30 },
                    { (short)922, (short)109 },
                    { (short)933, (short)109 },
                    { (short)932, (short)109 },
                    { (short)333, (short)39 },
                    { (short)931, (short)109 },
                    { (short)112, (short)93 },
                    { (short)930, (short)109 },
                    { (short)352, (short)48 },
                    { (short)1876, (short)22 },
                    { (short)111, (short)93 },
                    { (short)137, (short)93 },
                    { (short)921, (short)109 },
                    { (short)907, (short)109 },
                    { (short)908, (short)109 },
                    { (short)1583, (short)22 },
                    { (short)909, (short)109 },
                    { (short)910, (short)109 },
                    { (short)602, (short)38 },
                    { (short)911, (short)109 },
                    { (short)912, (short)109 },
                    { (short)189, (short)86 },
                    { (short)913, (short)109 },
                    { (short)914, (short)109 },
                    { (short)188, (short)86 },
                    { (short)1502, (short)122 },
                    { (short)915, (short)109 },
                    { (short)187, (short)86 },
                    { (short)1840, (short)22 },
                    { (short)186, (short)86 },
                    { (short)173, (short)86 },
                    { (short)1950, (short)91 },
                    { (short)920, (short)109 },
                    { (short)177, (short)78 },
                    { (short)365, (short)50 },
                    { (short)1460, (short)22 },
                    { (short)364, (short)50 },
                    { (short)919, (short)109 },
                    { (short)676, (short)91 },
                    { (short)918, (short)109 },
                    { (short)606, (short)83 },
                    { (short)366, (short)50 },
                    { (short)917, (short)109 },
                    { (short)916, (short)109 },
                    { (short)185, (short)86 },
                    { (short)190, (short)85 },
                    { (short)937, (short)109 },
                    { (short)321, (short)30 },
                    { (short)1983, (short)22 },
                    { (short)957, (short)109 },
                    { (short)958, (short)109 },
                    { (short)1794, (short)84 },
                    { (short)522, (short)80 },
                    { (short)108, (short)93 },
                    { (short)960, (short)109 },
                    { (short)275, (short)45 },
                    { (short)961, (short)109 },
                    { (short)962, (short)109 },
                    { (short)811, (short)25 },
                    { (short)963, (short)109 },
                    { (short)274, (short)45 },
                    { (short)964, (short)109 },
                    { (short)965, (short)109 },
                    { (short)272, (short)45 },
                    { (short)107, (short)93 },
                    { (short)1816, (short)34 },
                    { (short)973, (short)109 },
                    { (short)106, (short)93 },
                    { (short)1974, (short)22 },
                    { (short)972, (short)109 },
                    { (short)817, (short)64 },
                    { (short)956, (short)109 },
                    { (short)971, (short)109 },
                    { (short)970, (short)109 },
                    { (short)969, (short)109 },
                    { (short)1842, (short)22 },
                    { (short)968, (short)109 },
                    { (short)967, (short)109 },
                    { (short)966, (short)109 },
                    { (short)1492, (short)121 },
                    { (short)938, (short)109 },
                    { (short)285, (short)88 },
                    { (short)954, (short)109 },
                    { (short)939, (short)109 },
                    { (short)319, (short)30 },
                    { (short)940, (short)109 },
                    { (short)304, (short)88 },
                    { (short)941, (short)109 },
                    { (short)942, (short)109 },
                    { (short)1797, (short)84 },
                    { (short)1575, (short)22 },
                    { (short)943, (short)109 },
                    { (short)110, (short)93 },
                    { (short)944, (short)109 },
                    { (short)303, (short)88 },
                    { (short)945, (short)109 },
                    { (short)1796, (short)84 },
                    { (short)946, (short)109 },
                    { (short)288, (short)88 },
                    { (short)947, (short)109 },
                    { (short)286, (short)88 },
                    { (short)953, (short)109 },
                    { (short)1989, (short)22 },
                    { (short)1901, (short)22 },
                    { (short)952, (short)109 },
                    { (short)109, (short)93 },
                    { (short)955, (short)109 },
                    { (short)951, (short)109 },
                    { (short)950, (short)109 },
                    { (short)1795, (short)84 },
                    { (short)1979, (short)22 },
                    { (short)949, (short)109 },
                    { (short)685, (short)88 },
                    { (short)948, (short)109 },
                    { (short)287, (short)88 },
                    { (short)1480, (short)118 },
                    { (short)906, (short)109 },
                    { (short)1589, (short)22 },
                    { (short)401, (short)69 },
                    { (short)265, (short)14 },
                    { (short)378, (short)56 },
                    { (short)1768, (short)84 },
                    { (short)1738, (short)22 },
                    { (short)362, (short)49 },
                    { (short)448, (short)127 },
                    { (short)249, (short)14 },
                    { (short)1754, (short)84 },
                    { (short)361, (short)49 },
                    { (short)447, (short)127 },
                    { (short)360, (short)49 },
                    { (short)1767, (short)84 },
                    { (short)484, (short)84 },
                    { (short)349, (short)34 },
                    { (short)244, (short)7 },
                    { (short)1755, (short)84 },
                    { (short)336, (short)42 },
                    { (short)1756, (short)84 },
                    { (short)168, (short)46 },
                    { (short)337, (short)42 },
                    { (short)443, (short)80 },
                    { (short)812, (short)25 },
                    { (short)1736, (short)22 },
                    { (short)486, (short)84 },
                    { (short)338, (short)42 },
                    { (short)339, (short)43 },
                    { (short)485, (short)84 },
                    { (short)347, (short)32 },
                    { (short)810, (short)25 },
                    { (short)1766, (short)84 },
                    { (short)1765, (short)84 },
                    { (short)1584, (short)22 },
                    { (short)1775, (short)84 },
                    { (short)271, (short)88 },
                    { (short)1772, (short)84 },
                    { (short)525, (short)81 },
                    { (short)478, (short)90 },
                    { (short)477, (short)90 },
                    { (short)377, (short)56 },
                    { (short)526, (short)81 },
                    { (short)521, (short)80 },
                    { (short)476, (short)90 },
                    { (short)482, (short)84 },
                    { (short)520, (short)79 },
                    { (short)475, (short)90 },
                    { (short)474, (short)90 },
                    { (short)473, (short)90 },
                    { (short)877, (short)108 },
                    { (short)674, (short)91 },
                    { (short)1771, (short)84 },
                    { (short)1773, (short)84 },
                    { (short)516, (short)78 },
                    { (short)1769, (short)84 },
                    { (short)430, (short)22 },
                    { (short)1770, (short)84 },
                    { (short)1774, (short)84 },
                    { (short)1586, (short)22 },
                    { (short)483, (short)84 },
                    { (short)449, (short)105 },
                    { (short)450, (short)105 },
                    { (short)451, (short)105 },
                    { (short)1296, (short)117 },
                    { (short)680, (short)22 },
                    { (short)472, (short)90 },
                    { (short)519, (short)79 },
                    { (short)518, (short)79 },
                    { (short)335, (short)41 },
                    { (short)885, (short)109 },
                    { (short)334, (short)40 },
                    { (short)416, (short)66 },
                    { (short)591, (short)137 },
                    { (short)898, (short)109 },
                    { (short)5, (short)6 },
                    { (short)592, (short)137 },
                    { (short)899, (short)109 },
                    { (short)414, (short)66 },
                    { (short)1454, (short)22 },
                    { (short)1760, (short)84 },
                    { (short)413, (short)66 },
                    { (short)309, (short)25 },
                    { (short)900, (short)109 },
                    { (short)595, (short)139 },
                    { (short)308, (short)21 },
                    { (short)1455, (short)22 },
                    { (short)901, (short)109 },
                    { (short)596, (short)139 },
                    { (short)905, (short)109 },
                    { (short)1764, (short)84 },
                    { (short)191, (short)85 },
                    { (short)904, (short)109 },
                    { (short)192, (short)85 },
                    { (short)395, (short)62 },
                    { (short)897, (short)109 },
                    { (short)400, (short)69 },
                    { (short)1527, (short)91 },
                    { (short)903, (short)109 },
                    { (short)212, (short)85 },
                    { (short)1762, (short)84 },
                    { (short)902, (short)109 },
                    { (short)1761, (short)84 },
                    { (short)1763, (short)84 },
                    { (short)882, (short)108 },
                    { (short)1759, (short)84 },
                    { (short)896, (short)109 },
                    { (short)320, (short)30 },
                    { (short)891, (short)109 },
                    { (short)1479, (short)119 },
                    { (short)890, (short)109 },
                    { (short)325, (short)35 },
                    { (short)889, (short)109 },
                    { (short)892, (short)109 },
                    { (short)1757, (short)84 },
                    { (short)888, (short)109 },
                    { (short)1503, (short)122 },
                    { (short)887, (short)109 },
                    { (short)330, (short)38 },
                    { (short)886, (short)109 },
                    { (short)487, (short)84 },
                    { (short)329, (short)37 },
                    { (short)1520, (short)121 },
                    { (short)318, (short)30 },
                    { (short)32, (short)91 },
                    { (short)419, (short)125 },
                    { (short)895, (short)109 },
                    { (short)590, (short)137 },
                    { (short)853, (short)22 },
                    { (short)19, (short)21 },
                    { (short)420, (short)125 },
                    { (short)426, (short)124 },
                    { (short)589, (short)137 },
                    { (short)894, (short)109 },
                    { (short)842, (short)91 },
                    { (short)893, (short)109 },
                    { (short)317, (short)30 },
                    { (short)852, (short)22 },
                    { (short)1758, (short)84 },
                    { (short)316, (short)29 },
                    { (short)974, (short)109 },
                    { (short)481, (short)84 },
                    { (short)975, (short)109 },
                    { (short)1639, (short)139 },
                    { (short)1030, (short)109 },
                    { (short)566, (short)15 },
                    { (short)1031, (short)109 },
                    { (short)1790, (short)84 },
                    { (short)1785, (short)84 },
                    { (short)1032, (short)109 },
                    { (short)569, (short)15 },
                    { (short)1033, (short)109 },
                    { (short)1301, (short)38 },
                    { (short)1034, (short)109 },
                    { (short)570, (short)15 },
                    { (short)79, (short)93 },
                    { (short)78, (short)93 },
                    { (short)1036, (short)109 },
                    { (short)74, (short)89 },
                    { (short)1037, (short)109 },
                    { (short)1817, (short)32 },
                    { (short)73, (short)89 },
                    { (short)1038, (short)109 },
                    { (short)573, (short)15 },
                    { (short)1039, (short)109 },
                    { (short)1071, (short)109 },
                    { (short)1040, (short)109 },
                    { (short)1070, (short)109 },
                    { (short)60, (short)34 },
                    { (short)1035, (short)109 },
                    { (short)84, (short)32 },
                    { (short)1072, (short)109 },
                    { (short)1299, (short)114 },
                    { (short)81, (short)85 },
                    { (short)1786, (short)84 },
                    { (short)1018, (short)109 },
                    { (short)1779, (short)84 },
                    { (short)1019, (short)109 },
                    { (short)1020, (short)109 },
                    { (short)1075, (short)109 },
                    { (short)1574, (short)132 },
                    { (short)1021, (short)109 },
                    { (short)1506, (short)123 },
                    { (short)10, (short)10 },
                    { (short)1022, (short)109 },
                    { (short)1029, (short)109 },
                    { (short)1074, (short)109 },
                    { (short)80, (short)93 },
                    { (short)1024, (short)109 },
                    { (short)1470, (short)84 },
                    { (short)1025, (short)109 },
                    { (short)1298, (short)114 },
                    { (short)1780, (short)84 },
                    { (short)1026, (short)109 },
                    { (short)1073, (short)109 },
                    { (short)17, (short)19 },
                    { (short)1027, (short)109 },
                    { (short)1781, (short)84 },
                    { (short)1028, (short)109 },
                    { (short)1023, (short)109 },
                    { (short)1017, (short)109 },
                    { (short)1069, (short)109 },
                    { (short)574, (short)15 },
                    { (short)1789, (short)84 },
                    { (short)1053, (short)109 },
                    { (short)1064, (short)109 },
                    { (short)1592, (short)22 },
                    { (short)1063, (short)109 },
                    { (short)47, (short)89 },
                    { (short)1054, (short)109 },
                    { (short)46, (short)89 },
                    { (short)672, (short)91 },
                    { (short)1055, (short)109 },
                    { (short)42, (short)89 },
                    { (short)43, (short)89 },
                    { (short)48, (short)89 },
                    { (short)1056, (short)109 },
                    { (short)1458, (short)30 },
                    { (short)1590, (short)22 },
                    { (short)1057, (short)109 },
                    { (short)1062, (short)109 },
                    { (short)670, (short)22 },
                    { (short)1783, (short)84 },
                    { (short)1058, (short)109 },
                    { (short)1059, (short)109 },
                    { (short)1635, (short)22 },
                    { (short)1060, (short)109 },
                    { (short)45, (short)89 },
                    { (short)1061, (short)109 },
                    { (short)586, (short)15 },
                    { (short)1041, (short)109 },
                    { (short)1052, (short)109 },
                    { (short)1051, (short)109 },
                    { (short)1784, (short)84 },
                    { (short)1042, (short)109 },
                    { (short)1068, (short)109 },
                    { (short)1782, (short)84 },
                    { (short)58, (short)89 },
                    { (short)1043, (short)109 },
                    { (short)1290, (short)22 },
                    { (short)1044, (short)109 },
                    { (short)57, (short)89 },
                    { (short)40, (short)89 },
                    { (short)1045, (short)109 },
                    { (short)1067, (short)109 },
                    { (short)1282, (short)113 },
                    { (short)1582, (short)22 },
                    { (short)1046, (short)109 },
                    { (short)55, (short)89 },
                    { (short)1047, (short)109 },
                    { (short)1066, (short)109 },
                    { (short)1048, (short)109 },
                    { (short)583, (short)15 },
                    { (short)1049, (short)109 },
                    { (short)1302, (short)38 },
                    { (short)1050, (short)109 },
                    { (short)1065, (short)109 },
                    { (short)41, (short)89 },
                    { (short)585, (short)15 },
                    { (short)575, (short)15 },
                    { (short)1076, (short)109 },
                    { (short)1505, (short)123 },
                    { (short)1776, (short)84 },
                    { (short)987, (short)109 },
                    { (short)988, (short)109 },
                    { (short)1088, (short)109 },
                    { (short)1507, (short)124 },
                    { (short)989, (short)109 },
                    { (short)412, (short)66 },
                    { (short)1087, (short)109 },
                    { (short)845, (short)38 },
                    { (short)990, (short)109 },
                    { (short)103, (short)93 },
                    { (short)1799, (short)15 },
                    { (short)1086, (short)109 },
                    { (short)1518, (short)121 },
                    { (short)991, (short)109 },
                    { (short)992, (short)109 },
                    { (short)1475, (short)119 },
                    { (short)866, (short)38 },
                    { (short)993, (short)109 },
                    { (short)3, (short)4 },
                    { (short)994, (short)109 },
                    { (short)1798, (short)84 },
                    { (short)995, (short)109 },
                    { (short)1016, (short)109 },
                    { (short)1951, (short)22 },
                    { (short)996, (short)109 },
                    { (short)1085, (short)109 },
                    { (short)1526, (short)91 },
                    { (short)1504, (short)122 },
                    { (short)1793, (short)84 },
                    { (short)986, (short)109 },
                    { (short)677, (short)91 },
                    { (short)976, (short)109 },
                    { (short)977, (short)109 },
                    { (short)105, (short)93 },
                    { (short)978, (short)109 },
                    { (short)1818, (short)140 },
                    { (short)979, (short)109 },
                    { (short)1510, (short)125 },
                    { (short)1093, (short)109 },
                    { (short)1787, (short)84 },
                    { (short)1092, (short)109 },
                    { (short)980, (short)109 },
                    { (short)1585, (short)22 },
                    { (short)981, (short)109 },
                    { (short)1476, (short)119 },
                    { (short)1841, (short)22 },
                    { (short)1091, (short)109 },
                    { (short)982, (short)109 },
                    { (short)1463, (short)135 },
                    { (short)983, (short)109 },
                    { (short)1090, (short)109 },
                    { (short)104, (short)93 },
                    { (short)1477, (short)119 },
                    { (short)984, (short)109 },
                    { (short)985, (short)109 },
                    { (short)1478, (short)119 },
                    { (short)1089, (short)109 },
                    { (short)96, (short)93 },
                    { (short)997, (short)109 },
                    { (short)44, (short)89 },
                    { (short)998, (short)109 },
                    { (short)1082, (short)109 },
                    { (short)1081, (short)109 },
                    { (short)95, (short)93 },
                    { (short)1013, (short)109 },
                    { (short)1005, (short)109 },
                    { (short)1080, (short)109 },
                    { (short)1079, (short)109 },
                    { (short)1006, (short)109 },
                    { (short)324, (short)31 },
                    { (short)1012, (short)109 },
                    { (short)1078, (short)109 },
                    { (short)1819, (short)139 },
                    { (short)1778, (short)84 },
                    { (short)1007, (short)109 },
                    { (short)1011, (short)109 },
                    { (short)1742, (short)84 },
                    { (short)1008, (short)109 },
                    { (short)4, (short)5 },
                    { (short)1009, (short)109 },
                    { (short)1741, (short)84 },
                    { (short)1010, (short)109 },
                    { (short)1077, (short)109 },
                    { (short)1740, (short)84 },
                    { (short)1877, (short)22 },
                    { (short)1004, (short)109 },
                    { (short)1000, (short)109 },
                    { (short)1084, (short)109 },
                    { (short)1295, (short)117 },
                    { (short)1523, (short)126 },
                    { (short)1015, (short)109 },
                    { (short)1972, (short)22 },
                    { (short)999, (short)109 },
                    { (short)867, (short)38 },
                    { (short)93, (short)93 },
                    { (short)1791, (short)84 },
                    { (short)1777, (short)84 },
                    { (short)1293, (short)22 },
                    { (short)20, (short)22 },
                    { (short)1083, (short)109 },
                    { (short)1003, (short)109 },
                    { (short)1839, (short)144 },
                    { (short)1014, (short)109 },
                    { (short)1788, (short)84 },
                    { (short)1001, (short)109 },
                    { (short)1792, (short)84 },
                    { (short)1002, (short)109 }
                });

            migrationBuilder.InsertData(
                table: "filterlists_tags",
                columns: new[] { "FilterListId", "TagId" },
                values: new object[,]
                {
                    { (short)144, (short)10 },
                    { (short)145, (short)10 },
                    { (short)377, (short)6 },
                    { (short)249, (short)18 },
                    { (short)1278, (short)2 },
                    { (short)1283, (short)2 },
                    { (short)16, (short)3 },
                    { (short)143, (short)10 },
                    { (short)244, (short)2 },
                    { (short)1278, (short)3 },
                    { (short)271, (short)6 },
                    { (short)183, (short)2 },
                    { (short)234, (short)3 },
                    { (short)279, (short)3 },
                    { (short)238, (short)10 },
                    { (short)168, (short)3 },
                    { (short)155, (short)10 },
                    { (short)1281, (short)5 },
                    { (short)1787, (short)2 },
                    { (short)16, (short)2 },
                    { (short)1788, (short)2 },
                    { (short)168, (short)2 },
                    { (short)1787, (short)3 },
                    { (short)1788, (short)3 },
                    { (short)1787, (short)6 },
                    { (short)265, (short)3 },
                    { (short)151, (short)10 },
                    { (short)279, (short)8 },
                    { (short)879, (short)2 },
                    { (short)1788, (short)1 },
                    { (short)1963, (short)6 },
                    { (short)141, (short)10 },
                    { (short)1792, (short)3 },
                    { (short)1795, (short)4 },
                    { (short)1852, (short)2 },
                    { (short)1796, (short)11 },
                    { (short)1792, (short)2 },
                    { (short)1792, (short)1 },
                    { (short)1797, (short)2 },
                    { (short)1872, (short)1 },
                    { (short)1853, (short)9 },
                    { (short)1792, (short)6 },
                    { (short)1872, (short)2 },
                    { (short)1872, (short)3 },
                    { (short)1872, (short)6 },
                    { (short)1791, (short)11 },
                    { (short)1872, (short)7 },
                    { (short)1867, (short)2 },
                    { (short)1577, (short)10 },
                    { (short)1577, (short)2 },
                    { (short)1929, (short)15 },
                    { (short)1876, (short)2 },
                    { (short)1854, (short)9 },
                    { (short)1790, (short)7 },
                    { (short)1833, (short)27 },
                    { (short)1794, (short)6 },
                    { (short)1662, (short)9 },
                    { (short)1663, (short)10 },
                    { (short)1720, (short)3 },
                    { (short)1793, (short)3 },
                    { (short)1793, (short)6 },
                    { (short)1793, (short)7 },
                    { (short)1649, (short)15 },
                    { (short)1793, (short)9 },
                    { (short)1720, (short)6 },
                    { (short)1792, (short)7 },
                    { (short)1793, (short)2 },
                    { (short)1793, (short)11 },
                    { (short)1793, (short)1 },
                    { (short)1593, (short)31 },
                    { (short)1593, (short)9 },
                    { (short)1792, (short)9 },
                    { (short)1737, (short)15 },
                    { (short)1794, (short)3 },
                    { (short)1593, (short)6 },
                    { (short)1593, (short)2 },
                    { (short)1648, (short)9 },
                    { (short)1576, (short)27 },
                    { (short)1790, (short)6 },
                    { (short)1876, (short)7 },
                    { (short)1913, (short)6 },
                    { (short)1560, (short)1 },
                    { (short)1789, (short)3 },
                    { (short)1304, (short)27 },
                    { (short)1990, (short)31 },
                    { (short)1789, (short)2 },
                    { (short)5, (short)3 },
                    { (short)1303, (short)9 },
                    { (short)1991, (short)27 },
                    { (short)1789, (short)6 },
                    { (short)1789, (short)1 },
                    { (short)1997, (short)15 },
                    { (short)19, (short)1 },
                    { (short)1288, (short)31 },
                    { (short)1788, (short)6 },
                    { (short)32, (short)2 },
                    { (short)32, (short)3 },
                    { (short)38, (short)29 },
                    { (short)52, (short)3 },
                    { (short)67, (short)3 },
                    { (short)1297, (short)27 },
                    { (short)1533, (short)2 },
                    { (short)1912, (short)7 },
                    { (short)1535, (short)27 },
                    { (short)1938, (short)2 },
                    { (short)1576, (short)18 },
                    { (short)1790, (short)3 },
                    { (short)1950, (short)2 },
                    { (short)1957, (short)2 },
                    { (short)1790, (short)2 },
                    { (short)1957, (short)5 },
                    { (short)1558, (short)5 },
                    { (short)1790, (short)1 },
                    { (short)1958, (short)2 },
                    { (short)1502, (short)3 },
                    { (short)1958, (short)6 },
                    { (short)1556, (short)30 },
                    { (short)1963, (short)2 },
                    { (short)1502, (short)6 },
                    { (short)1789, (short)7 },
                    { (short)1527, (short)2 },
                    { (short)1963, (short)10 },
                    { (short)1550, (short)27 },
                    { (short)1527, (short)3 },
                    { (short)1911, (short)2 },
                    { (short)1283, (short)9 },
                    { (short)510, (short)9 },
                    { (short)563, (short)2 },
                    { (short)878, (short)2 },
                    { (short)313, (short)9 },
                    { (short)1818, (short)3 },
                    { (short)1841, (short)6 },
                    { (short)1945, (short)2 },
                    { (short)312, (short)9 },
                    { (short)1945, (short)3 },
                    { (short)1947, (short)12 },
                    { (short)1948, (short)12 },
                    { (short)1949, (short)12 },
                    { (short)311, (short)9 },
                    { (short)412, (short)6 },
                    { (short)470, (short)6 },
                    { (short)471, (short)6 },
                    { (short)605, (short)6 },
                    { (short)307, (short)3 },
                    { (short)1798, (short)6 },
                    { (short)1809, (short)6 },
                    { (short)270, (short)14 },
                    { (short)1951, (short)20 },
                    { (short)1960, (short)6 },
                    { (short)1972, (short)2 },
                    { (short)253, (short)2 },
                    { (short)1824, (short)6 },
                    { (short)2022, (short)20 },
                    { (short)113, (short)3 },
                    { (short)2023, (short)20 },
                    { (short)113, (short)2 }
                });

            migrationBuilder.InsertData(
                table: "filterlists_tags",
                columns: new[] { "FilterListId", "TagId" },
                values: new object[,]
                {
                    { (short)2024, (short)20 },
                    { (short)2025, (short)20 },
                    { (short)1818, (short)2 },
                    { (short)1557, (short)2 },
                    { (short)1817, (short)3 },
                    { (short)1816, (short)7 },
                    { (short)1955, (short)3 },
                    { (short)356, (short)27 },
                    { (short)1955, (short)6 },
                    { (short)1979, (short)16 },
                    { (short)354, (short)9 },
                    { (short)353, (short)9 },
                    { (short)344, (short)9 },
                    { (short)1989, (short)19 },
                    { (short)2027, (short)3 },
                    { (short)2027, (short)4 },
                    { (short)1800, (short)2 },
                    { (short)1800, (short)3 },
                    { (short)1800, (short)12 },
                    { (short)343, (short)8 },
                    { (short)1801, (short)2 },
                    { (short)1801, (short)3 },
                    { (short)1802, (short)2 },
                    { (short)1803, (short)2 },
                    { (short)1803, (short)3 },
                    { (short)342, (short)15 },
                    { (short)1804, (short)2 },
                    { (short)1805, (short)2 },
                    { (short)1805, (short)12 },
                    { (short)341, (short)4 },
                    { (short)1842, (short)6 },
                    { (short)1941, (short)2 },
                    { (short)331, (short)3 },
                    { (short)1941, (short)12 },
                    { (short)331, (short)2 },
                    { (short)1817, (short)2 },
                    { (short)102, (short)9 },
                    { (short)1557, (short)3 },
                    { (short)2000, (short)2 },
                    { (short)1996, (short)5 },
                    { (short)1988, (short)15 },
                    { (short)585, (short)5 },
                    { (short)1987, (short)15 },
                    { (short)586, (short)5 },
                    { (short)1984, (short)9 },
                    { (short)1976, (short)30 },
                    { (short)1967, (short)9 },
                    { (short)1967, (short)2 },
                    { (short)1966, (short)11 },
                    { (short)1966, (short)9 },
                    { (short)1582, (short)2 },
                    { (short)1965, (short)9 },
                    { (short)1582, (short)6 },
                    { (short)1964, (short)30 },
                    { (short)1582, (short)9 },
                    { (short)1961, (short)2 },
                    { (short)1582, (short)10 },
                    { (short)1946, (short)11 },
                    { (short)1582, (short)31 },
                    { (short)1946, (short)9 },
                    { (short)1891, (short)6 },
                    { (short)1890, (short)2 },
                    { (short)1799, (short)5 },
                    { (short)1874, (short)10 },
                    { (short)2029, (short)20 },
                    { (short)1868, (short)7 },
                    { (short)2030, (short)20 },
                    { (short)1868, (short)6 },
                    { (short)1999, (short)27 },
                    { (short)583, (short)5 },
                    { (short)575, (short)5 },
                    { (short)2019, (short)9 },
                    { (short)2000, (short)3 },
                    { (short)91, (short)6 },
                    { (short)324, (short)2 },
                    { (short)90, (short)2 },
                    { (short)89, (short)2 },
                    { (short)628, (short)2 },
                    { (short)88, (short)3 },
                    { (short)628, (short)3 },
                    { (short)1505, (short)6 },
                    { (short)87, (short)10 },
                    { (short)1506, (short)3 },
                    { (short)86, (short)6 },
                    { (short)85, (short)2 },
                    { (short)83, (short)5 },
                    { (short)1955, (short)2 },
                    { (short)1506, (short)6 },
                    { (short)1712, (short)12 },
                    { (short)716, (short)12 },
                    { (short)718, (short)12 },
                    { (short)82, (short)3 },
                    { (short)61, (short)7 },
                    { (short)566, (short)5 },
                    { (short)569, (short)5 },
                    { (short)570, (short)5 },
                    { (short)59, (short)2 },
                    { (short)573, (short)5 },
                    { (short)27, (short)3 },
                    { (short)2021, (short)9 },
                    { (short)574, (short)5 },
                    { (short)2020, (short)9 },
                    { (short)1712, (short)3 },
                    { (short)600, (short)2 },
                    { (short)1955, (short)1 },
                    { (short)1954, (short)3 },
                    { (short)807, (short)25 },
                    { (short)1755, (short)3 },
                    { (short)1755, (short)6 },
                    { (short)805, (short)2 },
                    { (short)1756, (short)1 },
                    { (short)1756, (short)2 },
                    { (short)747, (short)2 },
                    { (short)1756, (short)3 },
                    { (short)1756, (short)6 },
                    { (short)746, (short)2 },
                    { (short)1756, (short)7 },
                    { (short)1757, (short)1 },
                    { (short)744, (short)9 },
                    { (short)1757, (short)2 },
                    { (short)743, (short)2 },
                    { (short)1757, (short)3 },
                    { (short)735, (short)9 },
                    { (short)1757, (short)6 },
                    { (short)1757, (short)7 },
                    { (short)734, (short)11 },
                    { (short)734, (short)2 },
                    { (short)1758, (short)1 },
                    { (short)1758, (short)2 },
                    { (short)1758, (short)3 },
                    { (short)729, (short)9 },
                    { (short)1758, (short)6 },
                    { (short)721, (short)3 },
                    { (short)1758, (short)7 },
                    { (short)1758, (short)9 },
                    { (short)824, (short)16 },
                    { (short)720, (short)3 },
                    { (short)1755, (short)2 },
                    { (short)843, (short)3 },
                    { (short)733, (short)2 },
                    { (short)871, (short)2 },
                    { (short)821, (short)2 },
                    { (short)823, (short)3 },
                    { (short)836, (short)21 },
                    { (short)869, (short)2 },
                    { (short)877, (short)1 },
                    { (short)868, (short)2 },
                    { (short)1296, (short)3 },
                    { (short)1530, (short)29 },
                    { (short)1586, (short)6 },
                    { (short)862, (short)14 },
                    { (short)862, (short)3 },
                    { (short)1650, (short)15 },
                    { (short)1661, (short)3 },
                    { (short)1703, (short)2 },
                    { (short)861, (short)2 },
                    { (short)855, (short)27 },
                    { (short)1736, (short)2 },
                    { (short)846, (short)3 },
                    { (short)1738, (short)6 },
                    { (short)846, (short)2 },
                    { (short)1754, (short)2 },
                    { (short)844, (short)4 },
                    { (short)844, (short)3 },
                    { (short)1754, (short)3 },
                    { (short)1754, (short)6 },
                    { (short)843, (short)9 },
                    { (short)843, (short)4 },
                    { (short)1755, (short)1 },
                    { (short)1758, (short)11 },
                    { (short)663, (short)2 },
                    { (short)1759, (short)1 },
                    { (short)1888, (short)10 },
                    { (short)1889, (short)2 },
                    { (short)405, (short)16 },
                    { (short)405, (short)9 },
                    { (short)1892, (short)2 },
                    { (short)1892, (short)3 },
                    { (short)383, (short)2 },
                    { (short)1892, (short)6 },
                    { (short)382, (short)11 },
                    { (short)1893, (short)10 },
                    { (short)382, (short)2 },
                    { (short)1930, (short)2 },
                    { (short)380, (short)2 },
                    { (short)1930, (short)9 },
                    { (short)1943, (short)2 },
                    { (short)379, (short)4 },
                    { (short)1943, (short)6 },
                    { (short)375, (short)3 },
                    { (short)375, (short)2 },
                    { (short)1952, (short)9 },
                    { (short)1953, (short)1 },
                    { (short)371, (short)21 },
                    { (short)1953, (short)2 },
                    { (short)371, (short)13 },
                    { (short)1953, (short)3 },
                    { (short)1953, (short)6 },
                    { (short)1954, (short)1 },
                    { (short)369, (short)2 },
                    { (short)1954, (short)2 },
                    { (short)410, (short)1 },
                    { (short)1888, (short)2 },
                    { (short)1866, (short)2 },
                    { (short)431, (short)27 },
                    { (short)1759, (short)2 },
                    { (short)1759, (short)3 },
                    { (short)661, (short)9 },
                    { (short)1759, (short)6 },
                    { (short)1759, (short)7 },
                    { (short)661, (short)4 },
                    { (short)1759, (short)9 },
                    { (short)1760, (short)1 },
                    { (short)1760, (short)2 },
                    { (short)659, (short)9 },
                    { (short)1760, (short)3 },
                    { (short)1760, (short)6 },
                    { (short)1760, (short)7 },
                    { (short)1760, (short)9 },
                    { (short)1954, (short)6 },
                    { (short)614, (short)9 },
                    { (short)1761, (short)3 },
                    { (short)1761, (short)6 },
                    { (short)1762, (short)4 },
                    { (short)601, (short)7 },
                    { (short)601, (short)4 },
                    { (short)1763, (short)11 },
                    { (short)515, (short)2 },
                    { (short)1764, (short)2 },
                    { (short)514, (short)3 },
                    { (short)514, (short)2 },
                    { (short)1840, (short)6 },
                    { (short)513, (short)3 },
                    { (short)513, (short)2 },
                    { (short)1858, (short)3 },
                    { (short)1760, (short)11 },
                    { (short)156, (short)2 },
                    { (short)1460, (short)15 },
                    { (short)1480, (short)3 },
                    { (short)774, (short)9 },
                    { (short)1623, (short)1 },
                    { (short)1622, (short)11 },
                    { (short)1622, (short)7 },
                    { (short)1622, (short)6 },
                    { (short)775, (short)2 },
                    { (short)1623, (short)2 },
                    { (short)1622, (short)3 },
                    { (short)1622, (short)1 },
                    { (short)776, (short)2 },
                    { (short)1621, (short)11 },
                    { (short)1621, (short)7 },
                    { (short)1621, (short)6 },
                    { (short)1621, (short)4 },
                    { (short)1622, (short)2 },
                    { (short)777, (short)2 },
                    { (short)773, (short)2 },
                    { (short)1623, (short)4 },
                    { (short)759, (short)2 },
                    { (short)1627, (short)2 },
                    { (short)760, (short)4 },
                    { (short)761, (short)2 },
                    { (short)1626, (short)10 },
                    { (short)762, (short)2 },
                    { (short)1623, (short)3 },
                    { (short)1625, (short)3 },
                    { (short)763, (short)3 },
                    { (short)1624, (short)3 },
                    { (short)764, (short)3 },
                    { (short)1624, (short)2 },
                    { (short)765, (short)2 },
                    { (short)1623, (short)6 },
                    { (short)1625, (short)2 },
                    { (short)1628, (short)3 },
                    { (short)1621, (short)3 },
                    { (short)1621, (short)2 },
                    { (short)783, (short)2 },
                    { (short)1618, (short)17 },
                    { (short)1618, (short)11 },
                    { (short)1618, (short)7 },
                    { (short)784, (short)2 },
                    { (short)1618, (short)6 },
                    { (short)1619, (short)1 },
                    { (short)1618, (short)3 },
                    { (short)1618, (short)2 },
                    { (short)1618, (short)1 },
                    { (short)1617, (short)17 },
                    { (short)1617, (short)11 },
                    { (short)1617, (short)7 },
                    { (short)786, (short)2 },
                    { (short)785, (short)3 },
                    { (short)778, (short)3 },
                    { (short)1619, (short)2 },
                    { (short)782, (short)2 },
                    { (short)1621, (short)1 },
                    { (short)1620, (short)17 },
                    { (short)779, (short)2 },
                    { (short)1620, (short)7 },
                    { (short)1620, (short)6 },
                    { (short)1620, (short)3 },
                    { (short)1619, (short)3 },
                    { (short)780, (short)2 },
                    { (short)1620, (short)1 },
                    { (short)1619, (short)17 },
                    { (short)781, (short)2 },
                    { (short)1619, (short)7 },
                    { (short)1619, (short)6 },
                    { (short)1619, (short)4 },
                    { (short)1620, (short)2 },
                    { (short)1617, (short)6 },
                    { (short)1629, (short)10 },
                    { (short)1630, (short)4 },
                    { (short)400, (short)6 },
                    { (short)1827, (short)6 },
                    { (short)1828, (short)7 },
                    { (short)400, (short)3 },
                    { (short)1829, (short)6 },
                    { (short)1830, (short)6 },
                    { (short)1826, (short)6 },
                    { (short)1831, (short)2 },
                    { (short)1831, (short)3 },
                    { (short)1871, (short)1 },
                    { (short)1871, (short)2 },
                    { (short)1871, (short)3 },
                    { (short)1871, (short)6 },
                    { (short)1871, (short)7 },
                    { (short)400, (short)2 },
                    { (short)1589, (short)6 },
                    { (short)1825, (short)7 },
                    { (short)1822, (short)6 },
                    { (short)1164, (short)7 },
                    { (short)832, (short)19 },
                    { (short)1517, (short)3 },
                    { (short)831, (short)2 },
                    { (short)1534, (short)2 },
                    { (short)1534, (short)3 },
                    { (short)1823, (short)6 },
                    { (short)830, (short)2 },
                    { (short)1807, (short)6 },
                    { (short)1808, (short)6 },
                    { (short)1810, (short)6 },
                    { (short)1811, (short)6 },
                    { (short)1812, (short)6 },
                    { (short)1813, (short)6 },
                    { (short)1806, (short)6 },
                    { (short)758, (short)2 },
                    { (short)1910, (short)2 },
                    { (short)1583, (short)6 },
                    { (short)750, (short)10 },
                    { (short)751, (short)30 },
                    { (short)1633, (short)3 },
                    { (short)752, (short)2 },
                    { (short)753, (short)8 },
                    { (short)1632, (short)4 },
                    { (short)1633, (short)26 },
                    { (short)754, (short)6 },
                    { (short)1632, (short)3 },
                    { (short)1631, (short)4 },
                    { (short)1631, (short)3 },
                    { (short)756, (short)2 },
                    { (short)757, (short)3 },
                    { (short)1630, (short)6 },
                    { (short)755, (short)6 },
                    { (short)1962, (short)6 },
                    { (short)749, (short)6 },
                    { (short)1634, (short)3 },
                    { (short)1583, (short)2 },
                    { (short)370, (short)2 },
                    { (short)1573, (short)2 },
                    { (short)388, (short)2 },
                    { (short)679, (short)3 },
                    { (short)388, (short)6 },
                    { (short)748, (short)3 },
                    { (short)388, (short)9 },
                    { (short)388, (short)10 },
                    { (short)676, (short)3 },
                    { (short)507, (short)2 },
                    { (short)676, (short)2 },
                    { (short)673, (short)2 },
                    { (short)673, (short)3 },
                    { (short)678, (short)2 },
                    { (short)1617, (short)4 },
                    { (short)1617, (short)3 },
                    { (short)1617, (short)2 },
                    { (short)1578, (short)19 },
                    { (short)1588, (short)6 },
                    { (short)1282, (short)10 },
                    { (short)393, (short)6 },
                    { (short)393, (short)15 },
                    { (short)672, (short)3 },
                    { (short)1608, (short)1 },
                    { (short)672, (short)2 },
                    { (short)857, (short)12 },
                    { (short)671, (short)14 },
                    { (short)396, (short)2 },
                    { (short)670, (short)6 },
                    { (short)397, (short)10 },
                    { (short)1635, (short)22 },
                    { (short)857, (short)3 },
                    { (short)398, (short)9 },
                    { (short)1547, (short)2 },
                    { (short)1608, (short)3 },
                    { (short)1609, (short)17 },
                    { (short)1543, (short)2 },
                    { (short)1609, (short)11 },
                    { (short)1609, (short)7 },
                    { (short)1609, (short)6 },
                    { (short)1609, (short)4 },
                    { (short)1608, (short)2 },
                    { (short)1544, (short)2 },
                    { (short)1545, (short)2 },
                    { (short)1609, (short)2 },
                    { (short)1609, (short)1 },
                    { (short)1608, (short)7 },
                    { (short)1546, (short)2 },
                    { (short)1608, (short)6 },
                    { (short)1609, (short)3 },
                    { (short)1609, (short)21 },
                    { (short)1868, (short)3 },
                    { (short)1592, (short)30 },
                    { (short)1468, (short)3 },
                    { (short)1959, (short)12 },
                    { (short)1467, (short)3 },
                    { (short)1466, (short)3 },
                    { (short)302, (short)6 },
                    { (short)1463, (short)7 },
                    { (short)1638, (short)12 },
                    { (short)1463, (short)3 },
                    { (short)1463, (short)2 },
                    { (short)1463, (short)1 },
                    { (short)1525, (short)3 },
                    { (short)677, (short)3 },
                    { (short)677, (short)2 },
                    { (short)510, (short)2 },
                    { (short)1524, (short)3 },
                    { (short)512, (short)1 },
                    { (short)1469, (short)3 },
                    { (short)20, (short)2 },
                    { (short)1290, (short)13 },
                    { (short)1290, (short)7 },
                    { (short)1290, (short)6 },
                    { (short)1878, (short)2 },
                    { (short)1878, (short)7 },
                    { (short)84, (short)2 },
                    { (short)1555, (short)12 },
                    { (short)20, (short)31 },
                    { (short)20, (short)10 },
                    { (short)20, (short)9 },
                    { (short)435, (short)12 },
                    { (short)20, (short)6 },
                    { (short)715, (short)12 },
                    { (short)717, (short)12 },
                    { (short)340, (short)12 },
                    { (short)1610, (short)1 },
                    { (short)1542, (short)2 },
                    { (short)1610, (short)2 },
                    { (short)1615, (short)2 },
                    { (short)793, (short)2 },
                    { (short)1615, (short)1 },
                    { (short)1614, (short)21 },
                    { (short)1614, (short)11 },
                    { (short)794, (short)2 },
                    { (short)792, (short)2 },
                    { (short)1614, (short)7 },
                    { (short)795, (short)2 },
                    { (short)1614, (short)3 },
                    { (short)1614, (short)2 },
                    { (short)1614, (short)1 },
                    { (short)796, (short)2 },
                    { (short)1613, (short)21 },
                    { (short)1614, (short)6 },
                    { (short)1613, (short)17 },
                    { (short)1615, (short)3 },
                    { (short)1615, (short)4 },
                    { (short)787, (short)2 },
                    { (short)1617, (short)1 },
                    { (short)1616, (short)21 },
                    { (short)1616, (short)7 },
                    { (short)1616, (short)6 },
                    { (short)788, (short)2 },
                    { (short)791, (short)2 },
                    { (short)1616, (short)3 },
                    { (short)1616, (short)1 },
                    { (short)789, (short)2 },
                    { (short)1615, (short)21 },
                    { (short)1615, (short)7 },
                    { (short)1615, (short)6 },
                    { (short)790, (short)3 },
                    { (short)1616, (short)2 },
                    { (short)797, (short)5 },
                    { (short)1613, (short)7 },
                    { (short)1613, (short)6 },
                    { (short)1537, (short)3 },
                    { (short)1611, (short)3 },
                    { (short)1538, (short)2 },
                    { (short)1611, (short)2 },
                    { (short)1611, (short)1 },
                    { (short)1539, (short)2 },
                    { (short)1611, (short)4 },
                    { (short)1610, (short)21 },
                    { (short)1610, (short)11 },
                    { (short)1540, (short)2 },
                    { (short)1610, (short)7 },
                    { (short)1610, (short)6 },
                    { (short)1541, (short)10 },
                    { (short)1610, (short)3 },
                    { (short)1610, (short)17 },
                    { (short)1611, (short)6 },
                    { (short)1611, (short)7 },
                    { (short)800, (short)2 },
                    { (short)1613, (short)4 },
                    { (short)1613, (short)3 },
                    { (short)1613, (short)2 },
                    { (short)1613, (short)1 },
                    { (short)1612, (short)21 },
                    { (short)1612, (short)17 },
                    { (short)1612, (short)7 },
                    { (short)798, (short)2 },
                    { (short)1612, (short)6 },
                    { (short)1612, (short)3 },
                    { (short)799, (short)2 },
                    { (short)1612, (short)2 },
                    { (short)1612, (short)1 },
                    { (short)1611, (short)21 },
                    { (short)1611, (short)17 },
                    { (short)833, (short)19 },
                    { (short)691, (short)20 },
                    { (short)690, (short)20 },
                    { (short)834, (short)19 },
                    { (short)1915, (short)2 },
                    { (short)1562, (short)29 },
                    { (short)1915, (short)10 },
                    { (short)1562, (short)20 },
                    { (short)1562, (short)16 },
                    { (short)1562, (short)8 },
                    { (short)1575, (short)9 },
                    { (short)1968, (short)31 },
                    { (short)1562, (short)3 },
                    { (short)1562, (short)2 },
                    { (short)1969, (short)32 },
                    { (short)1551, (short)27 },
                    { (short)1970, (short)33 },
                    { (short)1460, (short)20 },
                    { (short)1562, (short)4 },
                    { (short)1971, (short)5 },
                    { (short)1860, (short)10 },
                    { (short)1855, (short)2 },
                    { (short)1986, (short)11 },
                    { (short)1986, (short)3 },
                    { (short)1986, (short)2 },
                    { (short)1985, (short)3 },
                    { (short)1581, (short)2 },
                    { (short)1985, (short)2 },
                    { (short)1575, (short)19 },
                    { (short)1983, (short)30 },
                    { (short)1581, (short)9 },
                    { (short)1581, (short)10 },
                    { (short)1983, (short)11 },
                    { (short)1581, (short)31 },
                    { (short)1901, (short)30 },
                    { (short)1587, (short)6 },
                    { (short)1581, (short)6 },
                    { (short)1492, (short)3 },
                    { (short)1460, (short)7 },
                    { (short)1460, (short)6 },
                    { (short)1658, (short)10 },
                    { (short)1659, (short)10 },
                    { (short)1660, (short)10 },
                    { (short)882, (short)2 },
                    { (short)34, (short)7 },
                    { (short)853, (short)9 },
                    { (short)1454, (short)9 },
                    { (short)348, (short)6 },
                    { (short)1306, (short)2 },
                    { (short)1308, (short)6 },
                    { (short)852, (short)9 },
                    { (short)1310, (short)15 },
                    { (short)1312, (short)3 },
                    { (short)1312, (short)12 },
                    { (short)496, (short)7 },
                    { (short)367, (short)10 },
                    { (short)1657, (short)10 },
                    { (short)1655, (short)3 },
                    { (short)368, (short)10 },
                    { (short)820, (short)3 },
                    { (short)1455, (short)9 },
                    { (short)1285, (short)10 },
                    { (short)1640, (short)4 },
                    { (short)1640, (short)10 },
                    { (short)1656, (short)3 },
                    { (short)1641, (short)10 },
                    { (short)1643, (short)3 },
                    { (short)1644, (short)3 },
                    { (short)1651, (short)3 },
                    { (short)1652, (short)10 },
                    { (short)1653, (short)10 },
                    { (short)1654, (short)3 },
                    { (short)1642, (short)3 },
                    { (short)1520, (short)6 },
                    { (short)1570, (short)2 },
                    { (short)1521, (short)3 },
                    { (short)162, (short)2 },
                    { (short)1782, (short)7 },
                    { (short)1782, (short)6 },
                    { (short)1782, (short)3 },
                    { (short)1782, (short)2 },
                    { (short)1782, (short)1 },
                    { (short)1782, (short)9 },
                    { (short)163, (short)2 },
                    { (short)1781, (short)7 },
                    { (short)1781, (short)6 },
                    { (short)164, (short)2 },
                    { (short)1781, (short)3 },
                    { (short)1781, (short)2 },
                    { (short)165, (short)2 },
                    { (short)1781, (short)9 },
                    { (short)1781, (short)1 },
                    { (short)1782, (short)11 },
                    { (short)1783, (short)3 },
                    { (short)157, (short)3 },
                    { (short)1477, (short)4 },
                    { (short)1477, (short)3 },
                    { (short)1942, (short)6 },
                    { (short)1942, (short)2 },
                    { (short)1877, (short)7 },
                    { (short)161, (short)2 },
                    { (short)1877, (short)2 },
                    { (short)1786, (short)2 },
                    { (short)1785, (short)11 },
                    { (short)159, (short)4 },
                    { (short)1784, (short)4 },
                    { (short)1783, (short)6 },
                    { (short)160, (short)2 },
                    { (short)158, (short)2 },
                    { (short)166, (short)2 },
                    { (short)1780, (short)11 },
                    { (short)1779, (short)7 },
                    { (short)1776, (short)2 },
                    { (short)350, (short)2 },
                    { (short)1739, (short)2 },
                    { (short)1526, (short)3 },
                    { (short)1526, (short)2 },
                    { (short)1528, (short)2 },
                    { (short)1776, (short)3 },
                    { (short)1504, (short)6 },
                    { (short)1568, (short)2 },
                    { (short)1478, (short)3 },
                    { (short)1585, (short)6 },
                    { (short)1585, (short)2 },
                    { (short)1569, (short)2 },
                    { (short)1521, (short)7 },
                    { (short)1504, (short)3 },
                    { (short)1776, (short)6 },
                    { (short)1777, (short)1 },
                    { (short)1777, (short)2 },
                    { (short)1779, (short)6 },
                    { (short)1779, (short)3 },
                    { (short)167, (short)2 },
                    { (short)1779, (short)2 },
                    { (short)1779, (short)1 },
                    { (short)1778, (short)7 },
                    { (short)1778, (short)6 },
                    { (short)1778, (short)3 },
                    { (short)169, (short)8 },
                    { (short)169, (short)9 },
                    { (short)1778, (short)2 },
                    { (short)1778, (short)1 },
                    { (short)345, (short)2 },
                    { (short)1777, (short)6 },
                    { (short)1777, (short)3 },
                    { (short)1314, (short)15 },
                    { (short)1665, (short)6 },
                    { (short)2003, (short)6 },
                    { (short)2003, (short)3 },
                    { (short)1410, (short)15 },
                    { (short)1412, (short)22 },
                    { (short)1414, (short)15 },
                    { (short)1765, (short)6 },
                    { (short)1416, (short)30 },
                    { (short)1765, (short)3 },
                    { (short)1766, (short)1 },
                    { (short)1418, (short)15 },
                    { (short)1420, (short)15 },
                    { (short)1422, (short)13 },
                    { (short)1668, (short)15 },
                    { (short)1424, (short)15 },
                    { (short)1584, (short)6 },
                    { (short)1426, (short)11 },
                    { (short)1765, (short)2 },
                    { (short)1584, (short)2 },
                    { (short)1408, (short)15 },
                    { (short)1406, (short)15 },
                    { (short)1768, (short)1 },
                    { (short)1394, (short)11 },
                    { (short)1396, (short)30 },
                    { (short)1767, (short)7 },
                    { (short)1398, (short)30 },
                    { (short)1767, (short)6 },
                    { (short)1766, (short)2 },
                    { (short)1400, (short)15 },
                    { (short)1402, (short)15 },
                    { (short)1767, (short)2 },
                    { (short)1404, (short)15 },
                    { (short)1767, (short)1 },
                    { (short)1766, (short)6 },
                    { (short)1766, (short)3 },
                    { (short)1767, (short)3 },
                    { (short)1392, (short)25 },
                    { (short)1428, (short)15 },
                    { (short)1432, (short)6 },
                    { (short)1500, (short)3 },
                    { (short)1501, (short)3 },
                    { (short)1501, (short)11 },
                    { (short)1513, (short)3 },
                    { (short)1664, (short)6 },
                    { (short)1920, (short)2 },
                    { (short)1486, (short)24 },
                    { (short)415, (short)6 },
                    { (short)675, (short)2 },
                    { (short)675, (short)3 },
                    { (short)835, (short)19 },
                    { (short)681, (short)6 },
                    { (short)682, (short)6 },
                    { (short)683, (short)6 },
                    { (short)604, (short)20 },
                    { (short)1430, (short)4 },
                    { (short)842, (short)2 },
                    { (short)842, (short)3 },
                    { (short)1503, (short)6 },
                    { (short)1434, (short)3 },
                    { (short)1436, (short)26 },
                    { (short)1503, (short)3 },
                    { (short)1438, (short)23 },
                    { (short)1440, (short)11 },
                    { (short)1485, (short)24 },
                    { (short)1442, (short)24 },
                    { (short)1479, (short)4 },
                    { (short)1446, (short)4 },
                    { (short)1479, (short)3 },
                    { (short)1448, (short)4 },
                    { (short)1450, (short)30 },
                    { (short)1452, (short)30 },
                    { (short)1444, (short)3 },
                    { (short)1768, (short)2 },
                    { (short)1390, (short)30 },
                    { (short)1768, (short)3 },
                    { (short)1334, (short)15 },
                    { (short)1900, (short)2 },
                    { (short)1336, (short)15 },
                    { (short)1899, (short)3 },
                    { (short)1338, (short)15 },
                    { (short)1340, (short)15 },
                    { (short)2001, (short)1 },
                    { (short)1775, (short)2 },
                    { (short)1344, (short)15 },
                    { (short)1774, (short)11 },
                    { (short)1346, (short)15 },
                    { (short)1348, (short)22 },
                    { (short)1773, (short)4 },
                    { (short)1350, (short)4 },
                    { (short)1342, (short)15 },
                    { (short)1352, (short)17 },
                    { (short)1332, (short)15 },
                    { (short)1330, (short)15 },
                    { (short)2003, (short)2 },
                    { (short)2003, (short)1 },
                    { (short)1318, (short)15 },
                    { (short)2002, (short)6 },
                    { (short)1320, (short)15 },
                    { (short)2002, (short)3 },
                    { (short)2001, (short)2 },
                    { (short)1322, (short)4 },
                    { (short)1324, (short)7 },
                    { (short)2002, (short)1 },
                    { (short)1326, (short)15 },
                    { (short)2001, (short)6 },
                    { (short)1328, (short)15 },
                    { (short)2001, (short)3 },
                    { (short)2002, (short)2 },
                    { (short)1772, (short)6 },
                    { (short)1354, (short)25 },
                    { (short)1772, (short)3 },
                    { (short)1376, (short)15 },
                    { (short)1770, (short)6 },
                    { (short)1378, (short)30 },
                    { (short)1770, (short)3 },
                    { (short)1380, (short)15 },
                    { (short)1770, (short)2 },
                    { (short)1770, (short)7 },
                    { (short)1770, (short)1 },
                    { (short)1384, (short)30 },
                    { (short)1769, (short)11 },
                    { (short)1386, (short)30 },
                    { (short)1768, (short)7 },
                    { (short)1768, (short)6 },
                    { (short)1388, (short)30 },
                    { (short)1382, (short)15 },
                    { (short)1374, (short)15 },
                    { (short)1770, (short)9 },
                    { (short)1372, (short)30 },
                    { (short)1356, (short)24 },
                    { (short)1771, (short)11 },
                    { (short)1358, (short)15 },
                    { (short)1360, (short)30 },
                    { (short)1771, (short)9 },
                    { (short)1362, (short)30 },
                    { (short)1771, (short)7 },
                    { (short)1364, (short)15 },
                    { (short)1771, (short)6 },
                    { (short)1366, (short)15 },
                    { (short)1771, (short)3 },
                    { (short)1368, (short)15 },
                    { (short)1771, (short)2 },
                    { (short)1771, (short)1 },
                    { (short)1370, (short)15 },
                    { (short)1316, (short)15 },
                    { (short)1868, (short)2 },
                    { (short)1512, (short)3 },
                    { (short)1865, (short)2 },
                    { (short)812, (short)2 },
                    { (short)812, (short)3 },
                    { (short)812, (short)6 },
                    { (short)826, (short)2 },
                    { (short)858, (short)6 },
                    { (short)885, (short)6 },
                    { (short)886, (short)6 },
                    { (short)887, (short)6 },
                    { (short)888, (short)6 },
                    { (short)812, (short)1 },
                    { (short)889, (short)6 },
                    { (short)891, (short)6 },
                    { (short)892, (short)6 },
                    { (short)893, (short)6 },
                    { (short)894, (short)6 },
                    { (short)895, (short)6 },
                    { (short)896, (short)6 },
                    { (short)897, (short)6 },
                    { (short)898, (short)6 },
                    { (short)899, (short)6 },
                    { (short)890, (short)6 },
                    { (short)900, (short)6 },
                    { (short)810, (short)6 },
                    { (short)810, (short)2 },
                    { (short)696, (short)3 },
                    { (short)696, (short)6 },
                    { (short)697, (short)2 },
                    { (short)697, (short)3 },
                    { (short)697, (short)6 },
                    { (short)698, (short)6 },
                    { (short)699, (short)1 },
                    { (short)700, (short)2 },
                    { (short)703, (short)6 },
                    { (short)810, (short)3 },
                    { (short)704, (short)2 },
                    { (short)706, (short)6 },
                    { (short)707, (short)6 },
                    { (short)708, (short)6 },
                    { (short)709, (short)6 },
                    { (short)710, (short)3 },
                    { (short)711, (short)6 },
                    { (short)712, (short)2 },
                    { (short)713, (short)2 },
                    { (short)810, (short)1 },
                    { (short)705, (short)1 },
                    { (short)901, (short)6 },
                    { (short)902, (short)6 },
                    { (short)903, (short)6 },
                    { (short)929, (short)6 },
                    { (short)930, (short)6 },
                    { (short)931, (short)6 },
                    { (short)932, (short)6 },
                    { (short)933, (short)6 },
                    { (short)934, (short)6 },
                    { (short)935, (short)6 },
                    { (short)936, (short)6 },
                    { (short)937, (short)6 },
                    { (short)928, (short)6 },
                    { (short)938, (short)6 },
                    { (short)940, (short)6 },
                    { (short)941, (short)6 },
                    { (short)942, (short)6 },
                    { (short)943, (short)6 },
                    { (short)944, (short)6 },
                    { (short)945, (short)6 },
                    { (short)946, (short)6 },
                    { (short)947, (short)6 },
                    { (short)948, (short)6 },
                    { (short)939, (short)6 },
                    { (short)927, (short)6 },
                    { (short)926, (short)6 },
                    { (short)925, (short)6 },
                    { (short)904, (short)6 },
                    { (short)905, (short)6 },
                    { (short)906, (short)6 },
                    { (short)907, (short)6 },
                    { (short)908, (short)6 },
                    { (short)909, (short)6 },
                    { (short)910, (short)6 },
                    { (short)911, (short)6 },
                    { (short)912, (short)6 },
                    { (short)913, (short)6 },
                    { (short)914, (short)6 },
                    { (short)915, (short)6 },
                    { (short)916, (short)6 },
                    { (short)917, (short)6 },
                    { (short)918, (short)6 },
                    { (short)919, (short)6 },
                    { (short)920, (short)6 },
                    { (short)921, (short)6 },
                    { (short)922, (short)6 },
                    { (short)923, (short)6 },
                    { (short)924, (short)6 },
                    { (short)696, (short)2 },
                    { (short)694, (short)6 },
                    { (short)692, (short)20 },
                    { (short)692, (short)6 },
                    { (short)275, (short)2 },
                    { (short)285, (short)14 },
                    { (short)286, (short)14 },
                    { (short)287, (short)6 },
                    { (short)288, (short)6 },
                    { (short)303, (short)14 },
                    { (short)303, (short)23 },
                    { (short)304, (short)3 },
                    { (short)319, (short)2 },
                    { (short)274, (short)6 },
                    { (short)321, (short)10 },
                    { (short)323, (short)10 },
                    { (short)333, (short)13 },
                    { (short)352, (short)6 },
                    { (short)357, (short)1 },
                    { (short)358, (short)1 },
                    { (short)358, (short)20 },
                    { (short)359, (short)1 },
                    { (short)363, (short)1 },
                    { (short)364, (short)2 },
                    { (short)322, (short)10 },
                    { (short)272, (short)3 },
                    { (short)139, (short)7 },
                    { (short)36, (short)6 },
                    { (short)1887, (short)6 },
                    { (short)1902, (short)3 },
                    { (short)1906, (short)2 },
                    { (short)1906, (short)3 },
                    { (short)1906, (short)6 },
                    { (short)1907, (short)2 },
                    { (short)1921, (short)2 },
                    { (short)1921, (short)3 },
                    { (short)1922, (short)6 },
                    { (short)1922, (short)7 },
                    { (short)1926, (short)2 },
                    { (short)1927, (short)6 },
                    { (short)1937, (short)7 },
                    { (short)1939, (short)2 },
                    { (short)1939, (short)6 },
                    { (short)1940, (short)2 },
                    { (short)1956, (short)7 },
                    { (short)1974, (short)9 },
                    { (short)1998, (short)15 },
                    { (short)2004, (short)2 },
                    { (short)2033, (short)2 },
                    { (short)364, (short)3 },
                    { (short)949, (short)6 },
                    { (short)365, (short)4 },
                    { (short)395, (short)10 },
                    { (short)448, (short)6 },
                    { (short)463, (short)6 },
                    { (short)465, (short)6 },
                    { (short)516, (short)2 },
                    { (short)518, (short)6 },
                    { (short)519, (short)6 },
                    { (short)520, (short)6 },
                    { (short)521, (short)2 },
                    { (short)521, (short)3 },
                    { (short)447, (short)3 },
                    { (short)522, (short)15 },
                    { (short)526, (short)11 },
                    { (short)618, (short)6 },
                    { (short)630, (short)2 },
                    { (short)631, (short)7 },
                    { (short)632, (short)30 },
                    { (short)674, (short)2 },
                    { (short)674, (short)3 },
                    { (short)680, (short)6 },
                    { (short)684, (short)6 },
                    { (short)525, (short)11 },
                    { (short)446, (short)2 },
                    { (short)445, (short)3 },
                    { (short)444, (short)2 },
                    { (short)413, (short)3 },
                    { (short)413, (short)6 },
                    { (short)414, (short)6 },
                    { (short)416, (short)2 },
                    { (short)417, (short)6 },
                    { (short)418, (short)6 },
                    { (short)419, (short)2 },
                    { (short)420, (short)7 },
                    { (short)422, (short)13 },
                    { (short)424, (short)13 },
                    { (short)425, (short)20 },
                    { (short)426, (short)6 }
                });

            migrationBuilder.InsertData(
                table: "filterlists_tags",
                columns: new[] { "FilterListId", "TagId" },
                values: new object[,]
                {
                    { (short)427, (short)7 },
                    { (short)428, (short)6 },
                    { (short)438, (short)15 },
                    { (short)439, (short)3 },
                    { (short)440, (short)3 },
                    { (short)441, (short)2 },
                    { (short)442, (short)7 },
                    { (short)443, (short)2 },
                    { (short)443, (short)3 },
                    { (short)366, (short)6 },
                    { (short)950, (short)6 },
                    { (short)951, (short)6 },
                    { (short)952, (short)6 },
                    { (short)1076, (short)6 },
                    { (short)1077, (short)6 },
                    { (short)1078, (short)6 },
                    { (short)1079, (short)6 },
                    { (short)1080, (short)6 },
                    { (short)1081, (short)6 },
                    { (short)1082, (short)6 },
                    { (short)1083, (short)6 },
                    { (short)1084, (short)6 },
                    { (short)1075, (short)6 },
                    { (short)1085, (short)6 },
                    { (short)1087, (short)6 },
                    { (short)1088, (short)6 },
                    { (short)1089, (short)6 },
                    { (short)1090, (short)6 },
                    { (short)1091, (short)6 },
                    { (short)1092, (short)6 },
                    { (short)1093, (short)6 },
                    { (short)1094, (short)6 },
                    { (short)1095, (short)6 },
                    { (short)1086, (short)6 },
                    { (short)1074, (short)6 },
                    { (short)1073, (short)6 },
                    { (short)1072, (short)6 },
                    { (short)1051, (short)6 },
                    { (short)1052, (short)6 },
                    { (short)1053, (short)6 },
                    { (short)1054, (short)6 },
                    { (short)1055, (short)6 },
                    { (short)1056, (short)6 },
                    { (short)1057, (short)6 },
                    { (short)1058, (short)6 },
                    { (short)1059, (short)6 },
                    { (short)1060, (short)6 },
                    { (short)1061, (short)6 },
                    { (short)1062, (short)6 },
                    { (short)1063, (short)6 },
                    { (short)1064, (short)6 },
                    { (short)1065, (short)6 },
                    { (short)1066, (short)6 },
                    { (short)1067, (short)6 },
                    { (short)1068, (short)6 },
                    { (short)1069, (short)6 },
                    { (short)1070, (short)6 },
                    { (short)1071, (short)6 },
                    { (short)1096, (short)6 },
                    { (short)1050, (short)6 },
                    { (short)1097, (short)6 },
                    { (short)1099, (short)6 },
                    { (short)1125, (short)2 },
                    { (short)1126, (short)8 },
                    { (short)1868, (short)1 },
                    { (short)1128, (short)21 },
                    { (short)1130, (short)6 },
                    { (short)1133, (short)14 },
                    { (short)1135, (short)2 },
                    { (short)1139, (short)2 },
                    { (short)1140, (short)2 },
                    { (short)1124, (short)2 },
                    { (short)1141, (short)6 },
                    { (short)1143, (short)6 },
                    { (short)1144, (short)2 },
                    { (short)1146, (short)2 },
                    { (short)1148, (short)2 },
                    { (short)1149, (short)2 },
                    { (short)1151, (short)2 },
                    { (short)1152, (short)9 },
                    { (short)1153, (short)2 },
                    { (short)1154, (short)4 },
                    { (short)1142, (short)6 },
                    { (short)1123, (short)2 },
                    { (short)1122, (short)2 },
                    { (short)1121, (short)2 },
                    { (short)1100, (short)6 },
                    { (short)1101, (short)6 },
                    { (short)1102, (short)2 },
                    { (short)1103, (short)21 },
                    { (short)1104, (short)4 },
                    { (short)1105, (short)2 },
                    { (short)1106, (short)2 },
                    { (short)1107, (short)2 },
                    { (short)1108, (short)2 },
                    { (short)1109, (short)5 },
                    { (short)1110, (short)2 },
                    { (short)1111, (short)2 },
                    { (short)1112, (short)2 },
                    { (short)1113, (short)2 },
                    { (short)1114, (short)2 },
                    { (short)1115, (short)2 },
                    { (short)1116, (short)2 },
                    { (short)1117, (short)2 },
                    { (short)1118, (short)2 },
                    { (short)1119, (short)2 },
                    { (short)1120, (short)2 },
                    { (short)1098, (short)6 },
                    { (short)1887, (short)3 },
                    { (short)1049, (short)6 },
                    { (short)1047, (short)6 },
                    { (short)978, (short)6 },
                    { (short)979, (short)6 },
                    { (short)980, (short)6 },
                    { (short)981, (short)6 },
                    { (short)982, (short)6 },
                    { (short)983, (short)6 },
                    { (short)984, (short)6 },
                    { (short)985, (short)6 },
                    { (short)986, (short)6 },
                    { (short)977, (short)6 },
                    { (short)987, (short)6 },
                    { (short)989, (short)6 },
                    { (short)990, (short)6 },
                    { (short)991, (short)6 },
                    { (short)992, (short)6 },
                    { (short)993, (short)6 },
                    { (short)994, (short)6 },
                    { (short)995, (short)6 },
                    { (short)996, (short)6 },
                    { (short)997, (short)6 },
                    { (short)988, (short)6 },
                    { (short)976, (short)6 },
                    { (short)975, (short)6 },
                    { (short)974, (short)6 },
                    { (short)953, (short)6 },
                    { (short)954, (short)6 },
                    { (short)955, (short)6 },
                    { (short)956, (short)6 },
                    { (short)957, (short)6 },
                    { (short)958, (short)6 },
                    { (short)959, (short)6 },
                    { (short)960, (short)6 },
                    { (short)961, (short)6 },
                    { (short)962, (short)6 },
                    { (short)963, (short)6 },
                    { (short)964, (short)6 },
                    { (short)965, (short)6 },
                    { (short)966, (short)6 },
                    { (short)967, (short)6 },
                    { (short)968, (short)6 },
                    { (short)969, (short)6 },
                    { (short)970, (short)6 },
                    { (short)971, (short)6 },
                    { (short)972, (short)6 },
                    { (short)973, (short)6 },
                    { (short)998, (short)6 },
                    { (short)1048, (short)6 },
                    { (short)999, (short)6 },
                    { (short)1001, (short)6 },
                    { (short)1027, (short)6 },
                    { (short)1028, (short)6 },
                    { (short)1029, (short)6 },
                    { (short)1030, (short)6 },
                    { (short)1031, (short)6 },
                    { (short)1032, (short)6 },
                    { (short)1033, (short)6 },
                    { (short)1034, (short)6 },
                    { (short)1035, (short)6 },
                    { (short)1026, (short)6 },
                    { (short)1036, (short)6 },
                    { (short)1038, (short)6 },
                    { (short)1039, (short)6 },
                    { (short)1040, (short)6 },
                    { (short)1041, (short)6 },
                    { (short)1042, (short)6 },
                    { (short)1043, (short)6 },
                    { (short)1044, (short)6 },
                    { (short)1045, (short)6 },
                    { (short)1046, (short)6 },
                    { (short)1037, (short)6 },
                    { (short)1025, (short)6 },
                    { (short)1024, (short)6 },
                    { (short)1023, (short)6 },
                    { (short)1002, (short)6 },
                    { (short)1003, (short)6 },
                    { (short)1004, (short)6 },
                    { (short)1005, (short)6 },
                    { (short)1006, (short)6 },
                    { (short)1007, (short)6 },
                    { (short)1008, (short)6 },
                    { (short)1009, (short)6 },
                    { (short)1010, (short)6 },
                    { (short)1011, (short)6 },
                    { (short)1012, (short)6 },
                    { (short)1013, (short)6 },
                    { (short)1014, (short)6 },
                    { (short)1015, (short)6 },
                    { (short)1016, (short)6 },
                    { (short)1017, (short)6 },
                    { (short)1018, (short)6 },
                    { (short)1019, (short)6 },
                    { (short)1020, (short)6 },
                    { (short)1021, (short)6 },
                    { (short)1022, (short)6 },
                    { (short)1000, (short)6 },
                    { (short)1887, (short)2 },
                    { (short)1869, (short)7 },
                    { (short)1869, (short)6 },
                    { (short)109, (short)1 },
                    { (short)109, (short)2 },
                    { (short)109, (short)3 },
                    { (short)109, (short)6 },
                    { (short)109, (short)7 },
                    { (short)109, (short)17 },
                    { (short)109, (short)21 },
                    { (short)110, (short)1 },
                    { (short)110, (short)2 },
                    { (short)108, (short)21 },
                    { (short)110, (short)3 },
                    { (short)110, (short)7 },
                    { (short)110, (short)21 },
                    { (short)111, (short)1 },
                    { (short)111, (short)2 },
                    { (short)111, (short)3 },
                    { (short)111, (short)4 },
                    { (short)111, (short)6 },
                    { (short)112, (short)1 },
                    { (short)112, (short)2 },
                    { (short)110, (short)6 },
                    { (short)108, (short)11 },
                    { (short)108, (short)7 },
                    { (short)108, (short)6 },
                    { (short)105, (short)7 },
                    { (short)105, (short)17 },
                    { (short)105, (short)21 },
                    { (short)106, (short)1 },
                    { (short)106, (short)2 },
                    { (short)106, (short)3 },
                    { (short)106, (short)6 },
                    { (short)106, (short)7 },
                    { (short)106, (short)11 },
                    { (short)106, (short)17 },
                    { (short)106, (short)21 },
                    { (short)107, (short)1 },
                    { (short)107, (short)2 },
                    { (short)107, (short)3 },
                    { (short)107, (short)4 },
                    { (short)107, (short)6 },
                    { (short)107, (short)7 },
                    { (short)107, (short)21 },
                    { (short)108, (short)1 },
                    { (short)108, (short)2 },
                    { (short)108, (short)3 },
                    { (short)112, (short)3 },
                    { (short)105, (short)6 },
                    { (short)112, (short)6 },
                    { (short)112, (short)11 },
                    { (short)282, (short)2 },
                    { (short)308, (short)1 },
                    { (short)309, (short)1 },
                    { (short)309, (short)2 },
                    { (short)309, (short)3 },
                    { (short)309, (short)6 },
                    { (short)316, (short)2 },
                    { (short)317, (short)2 },
                    { (short)317, (short)3 },
                    { (short)276, (short)3 },
                    { (short)318, (short)1 },
                    { (short)325, (short)2 },
                    { (short)329, (short)2 },
                    { (short)330, (short)2 },
                    { (short)334, (short)2 },
                    { (short)335, (short)2 },
                    { (short)336, (short)3 },
                    { (short)336, (short)6 },
                    { (short)337, (short)2 },
                    { (short)338, (short)2 },
                    { (short)320, (short)2 },
                    { (short)276, (short)2 },
                    { (short)252, (short)2 },
                    { (short)226, (short)2 },
                    { (short)115, (short)2 },
                    { (short)115, (short)3 },
                    { (short)137, (short)2 },
                    { (short)138, (short)2 },
                    { (short)173, (short)2 },
                    { (short)173, (short)6 },
                    { (short)176, (short)3 },
                    { (short)177, (short)2 },
                    { (short)179, (short)6 },
                    { (short)185, (short)7 },
                    { (short)186, (short)6 },
                    { (short)187, (short)3 },
                    { (short)188, (short)11 },
                    { (short)189, (short)2 },
                    { (short)190, (short)7 },
                    { (short)191, (short)6 },
                    { (short)192, (short)6 },
                    { (short)212, (short)3 },
                    { (short)225, (short)2 },
                    { (short)225, (short)3 },
                    { (short)225, (short)4 },
                    { (short)112, (short)7 },
                    { (short)339, (short)2 },
                    { (short)105, (short)4 },
                    { (short)105, (short)2 },
                    { (short)54, (short)2 },
                    { (short)55, (short)3 },
                    { (short)55, (short)6 },
                    { (short)57, (short)7 },
                    { (short)58, (short)6 },
                    { (short)60, (short)7 },
                    { (short)64, (short)6 },
                    { (short)65, (short)6 },
                    { (short)73, (short)24 },
                    { (short)53, (short)3 },
                    { (short)74, (short)7 },
                    { (short)78, (short)2 },
                    { (short)78, (short)3 },
                    { (short)78, (short)6 },
                    { (short)78, (short)7 },
                    { (short)78, (short)11 },
                    { (short)78, (short)17 },
                    { (short)79, (short)1 },
                    { (short)79, (short)2 },
                    { (short)79, (short)3 },
                    { (short)78, (short)1 },
                    { (short)53, (short)2 },
                    { (short)49, (short)2 },
                    { (short)48, (short)6 },
                    { (short)1510, (short)3 },
                    { (short)1510, (short)6 },
                    { (short)1494, (short)3 },
                    { (short)1507, (short)2 },
                    { (short)1507, (short)6 },
                    { (short)3, (short)2 },
                    { (short)3, (short)3 },
                    { (short)4, (short)6 },
                    { (short)10, (short)6 },
                    { (short)17, (short)2 },
                    { (short)40, (short)7 },
                    { (short)41, (short)6 },
                    { (short)42, (short)7 },
                    { (short)43, (short)7 },
                    { (short)44, (short)7 },
                    { (short)45, (short)6 },
                    { (short)45, (short)14 },
                    { (short)45, (short)24 },
                    { (short)46, (short)6 },
                    { (short)47, (short)3 },
                    { (short)48, (short)3 },
                    { (short)79, (short)6 },
                    { (short)105, (short)3 },
                    { (short)79, (short)7 },
                    { (short)80, (short)1 },
                    { (short)96, (short)7 },
                    { (short)96, (short)11 },
                    { (short)103, (short)1 },
                    { (short)103, (short)2 },
                    { (short)103, (short)3 },
                    { (short)103, (short)4 },
                    { (short)103, (short)6 },
                    { (short)103, (short)7 },
                    { (short)103, (short)11 },
                    { (short)96, (short)6 },
                    { (short)103, (short)17 },
                    { (short)104, (short)1 },
                    { (short)104, (short)2 },
                    { (short)104, (short)3 },
                    { (short)104, (short)4 },
                    { (short)104, (short)6 },
                    { (short)104, (short)7 },
                    { (short)104, (short)17 },
                    { (short)104, (short)21 },
                    { (short)105, (short)1 },
                    { (short)103, (short)21 },
                    { (short)96, (short)4 },
                    { (short)96, (short)3 },
                    { (short)96, (short)2 },
                    { (short)80, (short)2 },
                    { (short)80, (short)3 },
                    { (short)80, (short)6 },
                    { (short)80, (short)7 },
                    { (short)81, (short)2 },
                    { (short)93, (short)1 },
                    { (short)93, (short)2 },
                    { (short)93, (short)3 },
                    { (short)93, (short)4 },
                    { (short)93, (short)6 },
                    { (short)93, (short)7 },
                    { (short)93, (short)11 },
                    { (short)93, (short)17 },
                    { (short)95, (short)1 },
                    { (short)95, (short)2 },
                    { (short)95, (short)3 },
                    { (short)95, (short)4 },
                    { (short)95, (short)6 },
                    { (short)95, (short)7 },
                    { (short)95, (short)17 },
                    { (short)96, (short)1 },
                    { (short)79, (short)17 },
                    { (short)1155, (short)2 },
                    { (short)347, (short)2 },
                    { (short)349, (short)7 },
                    { (short)1302, (short)2 },
                    { (short)1302, (short)3 },
                    { (short)1302, (short)9 },
                    { (short)1458, (short)2 },
                    { (short)1458, (short)3 },
                    { (short)1470, (short)3 },
                    { (short)1470, (short)6 },
                    { (short)1471, (short)2 },
                    { (short)1475, (short)3 },
                    { (short)1301, (short)19 },
                    { (short)1475, (short)4 },
                    { (short)1476, (short)4 },
                    { (short)1481, (short)3 },
                    { (short)1481, (short)4 },
                    { (short)1495, (short)3 },
                    { (short)1495, (short)6 },
                    { (short)1495, (short)7 },
                    { (short)1518, (short)3 },
                    { (short)1518, (short)6 },
                    { (short)1518, (short)7 },
                    { (short)1476, (short)3 },
                    { (short)1301, (short)14 },
                    { (short)1301, (short)4 },
                    { (short)1301, (short)3 },
                    { (short)811, (short)3 },
                    { (short)811, (short)6 },
                    { (short)817, (short)2 },
                    { (short)817, (short)3 },
                    { (short)817, (short)6 },
                    { (short)817, (short)7 },
                    { (short)827, (short)2 },
                    { (short)845, (short)3 },
                    { (short)866, (short)3 },
                    { (short)866, (short)4 },
                    { (short)866, (short)19 },
                    { (short)867, (short)3 },
                    { (short)867, (short)4 },
                    { (short)867, (short)19 },
                    { (short)1293, (short)14 },
                    { (short)1295, (short)1 },
                    { (short)1295, (short)2 },
                    { (short)1295, (short)3 },
                    { (short)1295, (short)6 },
                    { (short)1298, (short)3 },
                    { (short)1299, (short)3 },
                    { (short)1523, (short)2 },
                    { (short)811, (short)2 },
                    { (short)1523, (short)3 },
                    { (short)1559, (short)21 },
                    { (short)1670, (short)3 },
                    { (short)1701, (short)2 },
                    { (short)1702, (short)2 },
                    { (short)1706, (short)2 },
                    { (short)1706, (short)3 },
                    { (short)1706, (short)6 },
                    { (short)1707, (short)2 },
                    { (short)1708, (short)11 },
                    { (short)1709, (short)4 },
                    { (short)1670, (short)2 },
                    { (short)1713, (short)2 },
                    { (short)1741, (short)11 },
                    { (short)1742, (short)2 },
                    { (short)1819, (short)15 },
                    { (short)1819, (short)19 },
                    { (short)1839, (short)19 },
                    { (short)1844, (short)2 },
                    { (short)1869, (short)1 },
                    { (short)1869, (short)2 },
                    { (short)1869, (short)3 },
                    { (short)1740, (short)4 },
                    { (short)1639, (short)19 },
                    { (short)1639, (short)15 },
                    { (short)1601, (short)6 },
                    { (short)1563, (short)2 },
                    { (short)1566, (short)2 },
                    { (short)1574, (short)2 },
                    { (short)1574, (short)3 },
                    { (short)1574, (short)4 },
                    { (short)1574, (short)8 },
                    { (short)1574, (short)16 },
                    { (short)1574, (short)20 },
                    { (short)1574, (short)29 },
                    { (short)1590, (short)6 },
                    { (short)1598, (short)1 },
                    { (short)1598, (short)2 },
                    { (short)1598, (short)3 },
                    { (short)1598, (short)6 },
                    { (short)1598, (short)7 },
                    { (short)1600, (short)1 },
                    { (short)1600, (short)2 },
                    { (short)1600, (short)3 },
                    { (short)1600, (short)6 },
                    { (short)1600, (short)7 },
                    { (short)1601, (short)2 },
                    { (short)1523, (short)7 },
                    { (short)347, (short)6 },
                    { (short)811, (short)1 },
                    { (short)689, (short)3 },
                    { (short)481, (short)2 },
                    { (short)481, (short)3 },
                    { (short)481, (short)6 },
                    { (short)482, (short)1 },
                    { (short)482, (short)2 },
                    { (short)482, (short)3 },
                    { (short)482, (short)6 },
                    { (short)483, (short)1 },
                    { (short)483, (short)2 },
                    { (short)478, (short)19 },
                    { (short)483, (short)3 },
                    { (short)483, (short)7 },
                    { (short)484, (short)1 },
                    { (short)484, (short)2 },
                    { (short)484, (short)3 },
                    { (short)484, (short)6 },
                    { (short)484, (short)7 },
                    { (short)485, (short)11 },
                    { (short)486, (short)1 },
                    { (short)486, (short)2 },
                    { (short)483, (short)6 },
                    { (short)477, (short)19 },
                    { (short)476, (short)19 },
                    { (short)475, (short)19 },
                    { (short)360, (short)1 },
                    { (short)361, (short)1 },
                    { (short)361, (short)20 },
                    { (short)362, (short)1 },
                    { (short)378, (short)6 },
                    { (short)401, (short)2 },
                    { (short)401, (short)3 },
                    { (short)401, (short)6 },
                    { (short)421, (short)7 },
                    { (short)423, (short)6 },
                    { (short)430, (short)2 },
                    { (short)430, (short)6 },
                    { (short)449, (short)3 },
                    { (short)450, (short)26 },
                    { (short)451, (short)3 },
                    { (short)472, (short)4 },
                    { (short)472, (short)19 },
                    { (short)473, (short)19 },
                    { (short)474, (short)4 },
                    { (short)474, (short)19 },
                    { (short)475, (short)3 },
                    { (short)486, (short)3 },
                    { (short)693, (short)6 },
                    { (short)486, (short)6 },
                    { (short)486, (short)9 },
                    { (short)602, (short)7 },
                    { (short)606, (short)2 },
                    { (short)606, (short)3 },
                    { (short)606, (short)6 },
                    { (short)617, (short)2 },
                    { (short)617, (short)3 },
                    { (short)619, (short)2 },
                    { (short)625, (short)2 },
                    { (short)625, (short)3 },
                    { (short)602, (short)4 },
                    { (short)626, (short)3 },
                    { (short)629, (short)2 },
                    { (short)664, (short)2 },
                    { (short)665, (short)3 },
                    { (short)666, (short)2 },
                    { (short)667, (short)2 },
                    { (short)668, (short)2 },
                    { (short)669, (short)2 },
                    { (short)685, (short)6 },
                    { (short)687, (short)2 },
                    { (short)627, (short)7 },
                    { (short)599, (short)2 },
                    { (short)598, (short)2 },
                    { (short)596, (short)3 },
                    { (short)487, (short)1 },
                    { (short)487, (short)2 },
                    { (short)487, (short)3 },
                    { (short)487, (short)6 },
                    { (short)487, (short)7 },
                    { (short)487, (short)9 },
                    { (short)487, (short)11 },
                    { (short)490, (short)11 },
                    { (short)491, (short)11 },
                    { (short)492, (short)11 },
                    { (short)493, (short)11 },
                    { (short)494, (short)7 },
                    { (short)495, (short)7 },
                    { (short)589, (short)17 },
                    { (short)590, (short)11 },
                    { (short)591, (short)11 },
                    { (short)592, (short)4 },
                    { (short)593, (short)21 },
                    { (short)595, (short)2 },
                    { (short)595, (short)3 },
                    { (short)596, (short)2 },
                    { (short)486, (short)7 },
                    { (short)1156, (short)2 },
                    { (short)1127, (short)2 },
                    { (short)1158, (short)2 },
                    { (short)241, (short)2 },
                    { (short)241, (short)3 },
                    { (short)242, (short)3 },
                    { (short)243, (short)2 },
                    { (short)245, (short)2 },
                    { (short)246, (short)2 },
                    { (short)247, (short)4 },
                    { (short)247, (short)8 },
                    { (short)247, (short)9 },
                    { (short)248, (short)2 },
                    { (short)250, (short)8 },
                    { (short)251, (short)2 },
                    { (short)251, (short)3 },
                    { (short)254, (short)2 },
                    { (short)254, (short)3 },
                    { (short)255, (short)3 },
                    { (short)256, (short)2 },
                    { (short)256, (short)3 },
                    { (short)257, (short)2 },
                    { (short)240, (short)3 },
                    { (short)257, (short)3 },
                    { (short)239, (short)2 },
                    { (short)237, (short)2 },
                    { (short)214, (short)5 },
                    { (short)215, (short)2 },
                    { (short)216, (short)4 },
                    { (short)217, (short)2 },
                    { (short)217, (short)3 },
                    { (short)220, (short)2 },
                    { (short)220, (short)3 },
                    { (short)221, (short)2 },
                    { (short)221, (short)3 },
                    { (short)222, (short)2 },
                    { (short)223, (short)2 },
                    { (short)224, (short)8 },
                    { (short)227, (short)10 },
                    { (short)228, (short)2 },
                    { (short)229, (short)4 },
                    { (short)232, (short)21 },
                    { (short)233, (short)9 },
                    { (short)235, (short)9 },
                    { (short)236, (short)9 },
                    { (short)237, (short)3 },
                    { (short)213, (short)2 },
                    { (short)258, (short)2 },
                    { (short)259, (short)4 },
                    { (short)292, (short)2 },
                    { (short)293, (short)2 },
                    { (short)294, (short)2 },
                    { (short)295, (short)2 },
                    { (short)297, (short)2 },
                    { (short)298, (short)2 },
                    { (short)299, (short)2 },
                    { (short)300, (short)2 },
                    { (short)301, (short)2 },
                    { (short)305, (short)2 },
                    { (short)306, (short)15 },
                    { (short)315, (short)2 },
                    { (short)315, (short)3 },
                    { (short)315, (short)15 },
                    { (short)327, (short)33 },
                    { (short)332, (short)16 },
                    { (short)346, (short)2 },
                    { (short)355, (short)9 },
                    { (short)372, (short)2 },
                    { (short)291, (short)2 },
                    { (short)258, (short)3 },
                    { (short)290, (short)2 },
                    { (short)284, (short)2 },
                    { (short)260, (short)2 },
                    { (short)260, (short)3 },
                    { (short)261, (short)2 },
                    { (short)261, (short)3 },
                    { (short)262, (short)2 },
                    { (short)262, (short)3 },
                    { (short)263, (short)2 },
                    { (short)263, (short)3 },
                    { (short)264, (short)2 },
                    { (short)264, (short)3 },
                    { (short)266, (short)3 },
                    { (short)267, (short)2 },
                    { (short)268, (short)2 },
                    { (short)269, (short)2 },
                    { (short)277, (short)2 },
                    { (short)278, (short)2 },
                    { (short)280, (short)21 },
                    { (short)281, (short)3 },
                    { (short)283, (short)2 },
                    { (short)289, (short)2 },
                    { (short)207, (short)5 },
                    { (short)206, (short)2 },
                    { (short)205, (short)3 },
                    { (short)28, (short)8 },
                    { (short)29, (short)8 },
                    { (short)30, (short)9 },
                    { (short)31, (short)2 },
                    { (short)33, (short)16 },
                    { (short)39, (short)2 },
                    { (short)50, (short)6 },
                    { (short)51, (short)2 },
                    { (short)56, (short)2 },
                    { (short)62, (short)2 },
                    { (short)63, (short)2 },
                    { (short)1157, (short)2 },
                    { (short)68, (short)9 },
                    { (short)69, (short)2 },
                    { (short)70, (short)8 },
                    { (short)71, (short)8 },
                    { (short)72, (short)2 },
                    { (short)72, (short)3 },
                    { (short)94, (short)10 },
                    { (short)18, (short)21 },
                    { (short)97, (short)9 },
                    { (short)18, (short)9 },
                    { (short)13, (short)2 },
                    { (short)2011, (short)24 },
                    { (short)2012, (short)3 },
                    { (short)2013, (short)6 },
                    { (short)2014, (short)17 },
                    { (short)2015, (short)7 },
                    { (short)2016, (short)6 },
                    { (short)2017, (short)11 },
                    { (short)2018, (short)15 },
                    { (short)2026, (short)3 },
                    { (short)2026, (short)4 },
                    { (short)2028, (short)6 },
                    { (short)1, (short)2 },
                    { (short)1, (short)3 },
                    { (short)2, (short)4 },
                    { (short)2, (short)15 },
                    { (short)6, (short)2 },
                    { (short)6, (short)3 },
                    { (short)11, (short)2 },
                    { (short)12, (short)2 },
                    { (short)14, (short)2 },
                    { (short)98, (short)9 },
                    { (short)99, (short)2 },
                    { (short)99, (short)3 },
                    { (short)170, (short)2 },
                    { (short)171, (short)2 },
                    { (short)175, (short)8 },
                    { (short)178, (short)2 },
                    { (short)2031, (short)20 },
                    { (short)181, (short)2 },
                    { (short)184, (short)3 },
                    { (short)184, (short)4 },
                    { (short)197, (short)2 },
                    { (short)198, (short)2 },
                    { (short)199, (short)2 },
                    { (short)200, (short)2 },
                    { (short)201, (short)2 },
                    { (short)202, (short)2 },
                    { (short)202, (short)3 },
                    { (short)203, (short)2 },
                    { (short)203, (short)3 },
                    { (short)204, (short)9 },
                    { (short)205, (short)2 },
                    { (short)152, (short)9 },
                    { (short)150, (short)15 },
                    { (short)148, (short)4 },
                    { (short)148, (short)2 },
                    { (short)100, (short)2 },
                    { (short)101, (short)2 },
                    { (short)114, (short)2 },
                    { (short)114, (short)3 },
                    { (short)116, (short)2 },
                    { (short)117, (short)2 },
                    { (short)118, (short)2 },
                    { (short)119, (short)2 },
                    { (short)131, (short)2 },
                    { (short)373, (short)4 },
                    { (short)132, (short)2 },
                    { (short)133, (short)2 },
                    { (short)134, (short)9 },
                    { (short)135, (short)2 },
                    { (short)135, (short)3 },
                    { (short)136, (short)3 },
                    { (short)140, (short)7 },
                    { (short)142, (short)2 },
                    { (short)146, (short)2 },
                    { (short)147, (short)2 },
                    { (short)132, (short)3 },
                    { (short)374, (short)2 },
                    { (short)376, (short)2 },
                    { (short)376, (short)9 },
                    { (short)1284, (short)9 },
                    { (short)1289, (short)9 },
                    { (short)1289, (short)15 },
                    { (short)1291, (short)25 },
                    { (short)1292, (short)9 },
                    { (short)1294, (short)2 },
                    { (short)1456, (short)4 },
                    { (short)1459, (short)22 },
                    { (short)1461, (short)9 },
                    { (short)1461, (short)15 },
                    { (short)1461, (short)19 },
                    { (short)1462, (short)1 },
                    { (short)1462, (short)3 },
                    { (short)1511, (short)3 },
                    { (short)1529, (short)2 },
                    { (short)1531, (short)2 },
                    { (short)1531, (short)6 },
                    { (short)1532, (short)3 },
                    { (short)1532, (short)6 },
                    { (short)1280, (short)5 },
                    { (short)1532, (short)7 },
                    { (short)1279, (short)3 },
                    { (short)1242, (short)2 },
                    { (short)847, (short)2 },
                    { (short)848, (short)9 },
                    { (short)850, (short)11 },
                    { (short)850, (short)15 },
                    { (short)851, (short)9 },
                    { (short)856, (short)15 },
                    { (short)859, (short)11 },
                    { (short)859, (short)15 },
                    { (short)860, (short)9 },
                    { (short)863, (short)22 },
                    { (short)863, (short)30 },
                    { (short)870, (short)2 },
                    { (short)872, (short)9 },
                    { (short)873, (short)15 },
                    { (short)874, (short)15 },
                    { (short)875, (short)6 },
                    { (short)876, (short)4 },
                    { (short)881, (short)2 },
                    { (short)884, (short)2 },
                    { (short)1247, (short)30 },
                    { (short)1548, (short)2 },
                    { (short)1549, (short)2 },
                    { (short)1552, (short)15 },
                    { (short)1836, (short)6 },
                    { (short)1838, (short)4 },
                    { (short)1843, (short)2 },
                    { (short)1845, (short)2 },
                    { (short)1846, (short)2 },
                    { (short)1847, (short)9 },
                    { (short)1848, (short)2 },
                    { (short)1848, (short)3 },
                    { (short)1848, (short)4 },
                    { (short)1848, (short)9 },
                    { (short)1849, (short)2 },
                    { (short)1850, (short)2 },
                    { (short)1856, (short)4 },
                    { (short)1857, (short)2 },
                    { (short)1859, (short)9 },
                    { (short)1861, (short)10 },
                    { (short)1862, (short)2 },
                    { (short)1863, (short)2 },
                    { (short)1864, (short)2 },
                    { (short)1836, (short)3 },
                    { (short)1836, (short)2 },
                    { (short)1834, (short)32 },
                    { (short)1832, (short)30 },
                    { (short)1554, (short)22 },
                    { (short)1564, (short)21 },
                    { (short)1565, (short)30 },
                    { (short)1567, (short)2 },
                    { (short)1579, (short)2 },
                    { (short)1591, (short)15 },
                    { (short)1591, (short)19 },
                    { (short)1602, (short)2 },
                    { (short)1602, (short)16 },
                    { (short)841, (short)9 },
                    { (short)1602, (short)33 },
                    { (short)1605, (short)30 },
                    { (short)1606, (short)19 },
                    { (short)1637, (short)4 },
                    { (short)1669, (short)3 },
                    { (short)1671, (short)2 },
                    { (short)1672, (short)2 },
                    { (short)1705, (short)2 },
                    { (short)1726, (short)6 },
                    { (short)1832, (short)18 },
                    { (short)1604, (short)9 },
                    { (short)2010, (short)6 },
                    { (short)841, (short)4 },
                    { (short)840, (short)9 },
                    { (short)504, (short)14 },
                    { (short)505, (short)14 },
                    { (short)506, (short)3 },
                    { (short)506, (short)10 },
                    { (short)508, (short)10 },
                    { (short)509, (short)7 },
                    { (short)517, (short)2 },
                    { (short)562, (short)2 },
                    { (short)564, (short)3 },
                    { (short)564, (short)5 },
                    { (short)565, (short)2 },
                    { (short)603, (short)11 },
                    { (short)603, (short)30 },
                    { (short)607, (short)28 },
                    { (short)608, (short)9 },
                    { (short)609, (short)32 },
                    { (short)610, (short)9 },
                    { (short)611, (short)9 },
                    { (short)612, (short)9 },
                    { (short)480, (short)2 },
                    { (short)613, (short)9 },
                    { (short)479, (short)2 },
                    { (short)468, (short)2 },
                    { (short)381, (short)30 },
                    { (short)385, (short)15 },
                    { (short)390, (short)4 },
                    { (short)390, (short)9 },
                    { (short)390, (short)15 },
                    { (short)391, (short)30 },
                    { (short)392, (short)16 },
                    { (short)399, (short)2 },
                    { (short)399, (short)3 },
                    { (short)399, (short)8 },
                    { (short)403, (short)15 },
                    { (short)403, (short)18 },
                    { (short)429, (short)3 },
                    { (short)432, (short)30 },
                    { (short)433, (short)30 },
                    { (short)434, (short)15 },
                    { (short)436, (short)33 },
                    { (short)437, (short)2 },
                    { (short)467, (short)2 },
                    { (short)469, (short)3 },
                    { (short)616, (short)9 },
                    { (short)658, (short)9 },
                    { (short)660, (short)28 },
                    { (short)809, (short)2 },
                    { (short)809, (short)10 },
                    { (short)813, (short)10 },
                    { (short)814, (short)2 },
                    { (short)815, (short)2 },
                    { (short)815, (short)9 },
                    { (short)816, (short)15 },
                    { (short)818, (short)2 },
                    { (short)819, (short)9 },
                    { (short)822, (short)2 },
                    { (short)825, (short)16 },
                    { (short)828, (short)2 },
                    { (short)828, (short)6 },
                    { (short)829, (short)2 },
                    { (short)837, (short)2 },
                    { (short)837, (short)19 },
                    { (short)837, (short)21 },
                    { (short)838, (short)2 },
                    { (short)839, (short)15 },
                    { (short)808, (short)2 },
                    { (short)806, (short)2 },
                    { (short)804, (short)2 },
                    { (short)803, (short)2 },
                    { (short)686, (short)10 },
                    { (short)688, (short)2 },
                    { (short)719, (short)10 },
                    { (short)722, (short)15 },
                    { (short)723, (short)2 },
                    { (short)724, (short)15 },
                    { (short)726, (short)3 },
                    { (short)728, (short)2 },
                    { (short)730, (short)18 },
                    { (short)840, (short)15 },
                    { (short)731, (short)2 },
                    { (short)736, (short)3 },
                    { (short)745, (short)4 },
                    { (short)766, (short)2 },
                    { (short)767, (short)2 },
                    { (short)769, (short)28 },
                    { (short)770, (short)2 },
                    { (short)772, (short)9 },
                    { (short)801, (short)2 },
                    { (short)802, (short)2 },
                    { (short)732, (short)9 },
                    { (short)2009, (short)1 },
                    { (short)66, (short)2 },
                    { (short)2007, (short)4 },
                    { (short)1397, (short)30 },
                    { (short)1399, (short)15 },
                    { (short)1401, (short)15 },
                    { (short)1403, (short)15 },
                    { (short)1405, (short)15 },
                    { (short)1407, (short)15 },
                    { (short)1409, (short)15 },
                    { (short)1411, (short)22 },
                    { (short)1413, (short)15 },
                    { (short)1415, (short)30 },
                    { (short)1417, (short)15 },
                    { (short)1419, (short)15 },
                    { (short)1421, (short)13 },
                    { (short)1423, (short)15 },
                    { (short)1425, (short)11 },
                    { (short)1427, (short)15 },
                    { (short)1429, (short)4 },
                    { (short)1431, (short)6 },
                    { (short)1433, (short)3 },
                    { (short)1435, (short)26 },
                    { (short)1437, (short)23 },
                    { (short)1395, (short)30 },
                    { (short)1439, (short)11 },
                    { (short)1393, (short)11 },
                    { (short)1389, (short)30 },
                    { (short)1347, (short)22 },
                    { (short)1349, (short)4 },
                    { (short)1351, (short)17 }
                });

            migrationBuilder.InsertData(
                table: "filterlists_tags",
                columns: new[] { "FilterListId", "TagId" },
                values: new object[,]
                {
                    { (short)1353, (short)25 },
                    { (short)1355, (short)24 },
                    { (short)1357, (short)15 },
                    { (short)1359, (short)30 },
                    { (short)1361, (short)30 },
                    { (short)1363, (short)15 },
                    { (short)1365, (short)15 },
                    { (short)1367, (short)15 },
                    { (short)1369, (short)15 },
                    { (short)1371, (short)30 },
                    { (short)1373, (short)15 },
                    { (short)1375, (short)15 },
                    { (short)1377, (short)30 },
                    { (short)1379, (short)15 },
                    { (short)1381, (short)15 },
                    { (short)1383, (short)30 },
                    { (short)1385, (short)30 },
                    { (short)1387, (short)30 },
                    { (short)1391, (short)25 },
                    { (short)1345, (short)15 },
                    { (short)1441, (short)24 },
                    { (short)1445, (short)4 },
                    { (short)1508, (short)3 },
                    { (short)1508, (short)6 },
                    { (short)1509, (short)3 },
                    { (short)1509, (short)6 },
                    { (short)1519, (short)3 },
                    { (short)1519, (short)6 },
                    { (short)1519, (short)7 },
                    { (short)1536, (short)2 },
                    { (short)1536, (short)3 },
                    { (short)1561, (short)5 },
                    { (short)1561, (short)14 },
                    { (short)1594, (short)7 },
                    { (short)1595, (short)7 },
                    { (short)1596, (short)1 },
                    { (short)1597, (short)1 },
                    { (short)1597, (short)2 },
                    { (short)1597, (short)3 },
                    { (short)1597, (short)6 },
                    { (short)1597, (short)7 },
                    { (short)1599, (short)1 },
                    { (short)1599, (short)2 },
                    { (short)2008, (short)2 },
                    { (short)1443, (short)3 },
                    { (short)1498, (short)3 },
                    { (short)1496, (short)6 },
                    { (short)1447, (short)4 },
                    { (short)1449, (short)30 },
                    { (short)1451, (short)30 },
                    { (short)1457, (short)7 },
                    { (short)1464, (short)2 },
                    { (short)1464, (short)7 },
                    { (short)1465, (short)2 },
                    { (short)1472, (short)1 },
                    { (short)1473, (short)2 },
                    { (short)1473, (short)3 },
                    { (short)1474, (short)2 },
                    { (short)1474, (short)3 },
                    { (short)1483, (short)3 },
                    { (short)1483, (short)4 },
                    { (short)1483, (short)10 },
                    { (short)1484, (short)24 },
                    { (short)1487, (short)3 },
                    { (short)1490, (short)3 },
                    { (short)1490, (short)6 },
                    { (short)1493, (short)1 },
                    { (short)1496, (short)3 },
                    { (short)1497, (short)3 },
                    { (short)1599, (short)3 },
                    { (short)1343, (short)15 },
                    { (short)1339, (short)15 },
                    { (short)1192, (short)2 },
                    { (short)1193, (short)6 },
                    { (short)1194, (short)2 },
                    { (short)1196, (short)2 },
                    { (short)1197, (short)2 },
                    { (short)1199, (short)2 },
                    { (short)1202, (short)2 },
                    { (short)1203, (short)2 },
                    { (short)1204, (short)2 },
                    { (short)1205, (short)2 },
                    { (short)1206, (short)2 },
                    { (short)1207, (short)2 },
                    { (short)1209, (short)1 },
                    { (short)1209, (short)2 },
                    { (short)1209, (short)3 },
                    { (short)1209, (short)6 },
                    { (short)1209, (short)7 },
                    { (short)1210, (short)7 },
                    { (short)1211, (short)6 },
                    { (short)1212, (short)6 },
                    { (short)1213, (short)2 },
                    { (short)1191, (short)2 },
                    { (short)1214, (short)2 },
                    { (short)1190, (short)2 },
                    { (short)1187, (short)6 },
                    { (short)1159, (short)2 },
                    { (short)1160, (short)7 },
                    { (short)1161, (short)6 },
                    { (short)1162, (short)2 },
                    { (short)1163, (short)7 },
                    { (short)1165, (short)2 },
                    { (short)1166, (short)29 },
                    { (short)1167, (short)2 },
                    { (short)1168, (short)6 },
                    { (short)1169, (short)6 },
                    { (short)1172, (short)2 },
                    { (short)1173, (short)2 },
                    { (short)1174, (short)2 },
                    { (short)1175, (short)2 },
                    { (short)1176, (short)2 },
                    { (short)1179, (short)3 },
                    { (short)1180, (short)2 },
                    { (short)1182, (short)2 },
                    { (short)1183, (short)2 },
                    { (short)1184, (short)8 },
                    { (short)1185, (short)2 },
                    { (short)1189, (short)2 },
                    { (short)1341, (short)15 },
                    { (short)1215, (short)2 },
                    { (short)1217, (short)6 },
                    { (short)1286, (short)6 },
                    { (short)1286, (short)7 },
                    { (short)1300, (short)3 },
                    { (short)1305, (short)2 },
                    { (short)1307, (short)6 },
                    { (short)1309, (short)15 },
                    { (short)1311, (short)3 },
                    { (short)1311, (short)12 },
                    { (short)1313, (short)15 },
                    { (short)1315, (short)15 },
                    { (short)1317, (short)15 },
                    { (short)1319, (short)15 },
                    { (short)1321, (short)4 },
                    { (short)1323, (short)7 },
                    { (short)1325, (short)15 },
                    { (short)1327, (short)15 },
                    { (short)1329, (short)15 },
                    { (short)1331, (short)15 },
                    { (short)1333, (short)15 },
                    { (short)1335, (short)15 },
                    { (short)1337, (short)15 },
                    { (short)1245, (short)6 },
                    { (short)1216, (short)6 },
                    { (short)1244, (short)6 },
                    { (short)1241, (short)9 },
                    { (short)1218, (short)2 },
                    { (short)1220, (short)2 },
                    { (short)1221, (short)3 },
                    { (short)1222, (short)3 },
                    { (short)1223, (short)2 },
                    { (short)1224, (short)2 },
                    { (short)1225, (short)2 },
                    { (short)1226, (short)2 },
                    { (short)1227, (short)3 },
                    { (short)1228, (short)10 },
                    { (short)1229, (short)2 },
                    { (short)1230, (short)2 },
                    { (short)1231, (short)2 },
                    { (short)1232, (short)2 },
                    { (short)1233, (short)26 },
                    { (short)1234, (short)26 },
                    { (short)1235, (short)3 },
                    { (short)1237, (short)7 },
                    { (short)1238, (short)6 },
                    { (short)1239, (short)21 },
                    { (short)1240, (short)1 },
                    { (short)1243, (short)6 },
                    { (short)1599, (short)6 },
                    { (short)1499, (short)3 },
                    { (short)2032, (short)20 },
                    { (short)1916, (short)2 },
                    { (short)1914, (short)3 },
                    { (short)1909, (short)2 },
                    { (short)1908, (short)6 },
                    { (short)1744, (short)6 },
                    { (short)1905, (short)3 },
                    { (short)1599, (short)7 },
                    { (short)1905, (short)2 },
                    { (short)1918, (short)2 },
                    { (short)1745, (short)1 },
                    { (short)1745, (short)3 },
                    { (short)1745, (short)6 },
                    { (short)1745, (short)7 },
                    { (short)1746, (short)1 },
                    { (short)1746, (short)2 },
                    { (short)1746, (short)3 },
                    { (short)1746, (short)6 },
                    { (short)1746, (short)7 },
                    { (short)1745, (short)2 },
                    { (short)1747, (short)11 },
                    { (short)1918, (short)3 },
                    { (short)1923, (short)1 },
                    { (short)1730, (short)3 },
                    { (short)1731, (short)9 },
                    { (short)1732, (short)6 },
                    { (short)1733, (short)3 },
                    { (short)1734, (short)1 },
                    { (short)1734, (short)2 },
                    { (short)1895, (short)2 },
                    { (short)1734, (short)6 },
                    { (short)1919, (short)2 },
                    { (short)1735, (short)1 },
                    { (short)1735, (short)3 },
                    { (short)1735, (short)6 },
                    { (short)1743, (short)2 },
                    { (short)1743, (short)3 },
                    { (short)1743, (short)6 },
                    { (short)1744, (short)1 },
                    { (short)1744, (short)2 },
                    { (short)1744, (short)3 },
                    { (short)1735, (short)2 },
                    { (short)1748, (short)1 },
                    { (short)1748, (short)2 },
                    { (short)1748, (short)3 },
                    { (short)1835, (short)9 },
                    { (short)1870, (short)1 },
                    { (short)1870, (short)2 },
                    { (short)1870, (short)3 },
                    { (short)1870, (short)6 },
                    { (short)1870, (short)7 },
                    { (short)1873, (short)10 },
                    { (short)1881, (short)2 },
                    { (short)1815, (short)15 },
                    { (short)1882, (short)3 },
                    { (short)1884, (short)6 },
                    { (short)1896, (short)2 },
                    { (short)1885, (short)7 },
                    { (short)1886, (short)2 },
                    { (short)1895, (short)6 },
                    { (short)1894, (short)2 },
                    { (short)1894, (short)3 },
                    { (short)1894, (short)6 },
                    { (short)1883, (short)2 },
                    { (short)1814, (short)25 },
                    { (short)1814, (short)21 },
                    { (short)1753, (short)2 },
                    { (short)1748, (short)6 },
                    { (short)1748, (short)7 },
                    { (short)1748, (short)9 },
                    { (short)1749, (short)1 },
                    { (short)1749, (short)2 },
                    { (short)1749, (short)3 },
                    { (short)1904, (short)3 },
                    { (short)1749, (short)6 },
                    { (short)1903, (short)3 },
                    { (short)1898, (short)15 },
                    { (short)1897, (short)6 },
                    { (short)1896, (short)3 },
                    { (short)1749, (short)7 },
                    { (short)1749, (short)9 },
                    { (short)1749, (short)11 },
                    { (short)1750, (short)3 },
                    { (short)1750, (short)6 },
                    { (short)1751, (short)4 },
                    { (short)1752, (short)11 },
                    { (short)1729, (short)2 },
                    { (short)1728, (short)2 },
                    { (short)1734, (short)3 },
                    { (short)1725, (short)6 },
                    { (short)1678, (short)19 },
                    { (short)1679, (short)19 },
                    { (short)1680, (short)19 },
                    { (short)1681, (short)19 },
                    { (short)1682, (short)19 },
                    { (short)1683, (short)19 },
                    { (short)1684, (short)19 },
                    { (short)1685, (short)19 },
                    { (short)1686, (short)19 },
                    { (short)1677, (short)19 },
                    { (short)1687, (short)19 },
                    { (short)1689, (short)19 },
                    { (short)1977, (short)30 },
                    { (short)1975, (short)30 },
                    { (short)1690, (short)19 },
                    { (short)1973, (short)9 },
                    { (short)1944, (short)6 },
                    { (short)1691, (short)19 },
                    { (short)1727, (short)6 },
                    { (short)1692, (short)19 },
                    { (short)1688, (short)19 },
                    { (short)1676, (short)19 },
                    { (short)1675, (short)19 },
                    { (short)1978, (short)30 },
                    { (short)2006, (short)11 },
                    { (short)1603, (short)6 },
                    { (short)2005, (short)1 },
                    { (short)1995, (short)17 },
                    { (short)1607, (short)6 },
                    { (short)1994, (short)23 },
                    { (short)1636, (short)22 },
                    { (short)1645, (short)2 },
                    { (short)1645, (short)3 },
                    { (short)1646, (short)2 },
                    { (short)1646, (short)3 },
                    { (short)1647, (short)6 },
                    { (short)1666, (short)1 },
                    { (short)1667, (short)1 },
                    { (short)1673, (short)19 },
                    { (short)1674, (short)19 },
                    { (short)1993, (short)22 },
                    { (short)1992, (short)22 },
                    { (short)1982, (short)30 },
                    { (short)1981, (short)30 },
                    { (short)1980, (short)16 },
                    { (short)1944, (short)2 },
                    { (short)1693, (short)19 },
                    { (short)1895, (short)3 },
                    { (short)1936, (short)6 },
                    { (short)1925, (short)2 },
                    { (short)1924, (short)2 },
                    { (short)1699, (short)19 },
                    { (short)1700, (short)19 },
                    { (short)1704, (short)2 },
                    { (short)1710, (short)6 },
                    { (short)1711, (short)6 },
                    { (short)1714, (short)6 },
                    { (short)1715, (short)2 },
                    { (short)1716, (short)6 },
                    { (short)1717, (short)6 },
                    { (short)1718, (short)6 },
                    { (short)1719, (short)6 },
                    { (short)1721, (short)3 },
                    { (short)1722, (short)6 },
                    { (short)1723, (short)3 },
                    { (short)1724, (short)6 },
                    { (short)1724, (short)7 },
                    { (short)1725, (short)3 },
                    { (short)1698, (short)19 },
                    { (short)1697, (short)19 },
                    { (short)1928, (short)3 },
                    { (short)1695, (short)19 },
                    { (short)1694, (short)19 },
                    { (short)1935, (short)6 },
                    { (short)1934, (short)3 },
                    { (short)1933, (short)2 },
                    { (short)1932, (short)21 },
                    { (short)1931, (short)2 },
                    { (short)1696, (short)19 }
                });

            migrationBuilder.InsertData(
                table: "forks",
                columns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                values: new object[,]
                {
                    { (short)16, (short)278 },
                    { (short)16, (short)99 },
                    { (short)350, (short)12 },
                    { (short)16, (short)59 },
                    { (short)563, (short)16 },
                    { (short)158, (short)258 },
                    { (short)313, (short)311 },
                    { (short)565, (short)301 },
                    { (short)164, (short)293 },
                    { (short)312, (short)311 },
                    { (short)166, (short)301 },
                    { (short)167, (short)295 },
                    { (short)163, (short)262 }
                });

            migrationBuilder.InsertData(
                table: "merges",
                columns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                values: new object[,]
                {
                    { (short)13, (short)14 },
                    { (short)566, (short)573 },
                    { (short)566, (short)585 },
                    { (short)11, (short)12 },
                    { (short)566, (short)570 },
                    { (short)566, (short)574 },
                    { (short)566, (short)583 },
                    { (short)309, (short)340 },
                    { (short)13, (short)12 },
                    { (short)566, (short)575 },
                    { (short)566, (short)569 },
                    { (short)566, (short)586 },
                    { (short)274, (short)275 },
                    { (short)371, (short)232 },
                    { (short)309, (short)324 },
                    { (short)309, (short)138 },
                    { (short)309, (short)177 },
                    { (short)309, (short)179 },
                    { (short)309, (short)226 },
                    { (short)309, (short)276 },
                    { (short)309, (short)282 },
                    { (short)309, (short)316 },
                    { (short)375, (short)19 },
                    { (short)309, (short)317 },
                    { (short)309, (short)32 },
                    { (short)309, (short)325 },
                    { (short)309, (short)81 },
                    { (short)309, (short)329 },
                    { (short)168, (short)157 },
                    { (short)168, (short)159 },
                    { (short)168, (short)162 },
                    { (short)168, (short)166 },
                    { (short)168, (short)242 },
                    { (short)168, (short)301 },
                    { (short)375, (short)183 },
                    { (short)265, (short)564 },
                    { (short)13, (short)301 },
                    { (short)11, (short)301 },
                    { (short)271, (short)338 },
                    { (short)375, (short)38 },
                    { (short)309, (short)99 },
                    { (short)309, (short)80 },
                    { (short)309, (short)47 },
                    { (short)331, (short)199 },
                    { (short)331, (short)330 },
                    { (short)331, (short)332 },
                    { (short)331, (short)333 },
                    { (short)309, (short)170 },
                    { (short)371, (short)110 },
                    { (short)309, (short)206 },
                    { (short)375, (short)2 },
                    { (short)375, (short)18 },
                    { (short)375, (short)27 },
                    { (short)375, (short)70 },
                    { (short)309, (short)54 },
                    { (short)375, (short)71 },
                    { (short)375, (short)99 },
                    { (short)375, (short)148 },
                    { (short)375, (short)184 },
                    { (short)375, (short)214 },
                    { (short)375, (short)232 },
                    { (short)375, (short)247 },
                    { (short)375, (short)307 },
                    { (short)266, (short)564 },
                    { (short)255, (short)564 },
                    { (short)309, (short)255 },
                    { (short)309, (short)17 },
                    { (short)375, (short)97 },
                    { (short)375, (short)279 }
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "dependents",
                keyColumns: new[] { "DependentFilterListId", "DependencyFilterListId" },
                keyValues: new object[] { (short)344, (short)301 });

            migrationBuilder.DeleteData(
                table: "dependents",
                keyColumns: new[] { "DependentFilterListId", "DependencyFilterListId" },
                keyValues: new object[] { (short)344, (short)479 });

            migrationBuilder.DeleteData(
                table: "dependents",
                keyColumns: new[] { "DependentFilterListId", "DependencyFilterListId" },
                keyValues: new object[] { (short)819, (short)97 });

            migrationBuilder.DeleteData(
                table: "dependents",
                keyColumns: new[] { "DependentFilterListId", "DependencyFilterListId" },
                keyValues: new object[] { (short)852, (short)97 });

            migrationBuilder.DeleteData(
                table: "dependents",
                keyColumns: new[] { "DependentFilterListId", "DependencyFilterListId" },
                keyValues: new object[] { (short)853, (short)97 });

            migrationBuilder.DeleteData(
                table: "dependents",
                keyColumns: new[] { "DependentFilterListId", "DependencyFilterListId" },
                keyValues: new object[] { (short)1816, (short)60 });

            migrationBuilder.DeleteData(
                table: "dependents",
                keyColumns: new[] { "DependentFilterListId", "DependencyFilterListId" },
                keyValues: new object[] { (short)1817, (short)347 });

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1879);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1880);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1917);

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)6, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)11, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)11, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)12, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)12, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)13, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)13, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)14, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)16, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)20, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)20, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)20, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)20, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)20, (short)160 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)30, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)31, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)39, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)49, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)51, (short)168 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)53, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)56, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)59, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)60, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)61, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)62, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)63, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)69, (short)160 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)72, (short)177 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)84, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)99, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)100, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)101, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)113, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)114, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)116, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)117, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)118, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)119, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)131, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)132, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)133, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)134, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)136, (short)76 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)141, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)143, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)144, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)145, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)146, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)147, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)150, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)151, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)156, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)158, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)158, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)161, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)163, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)164, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)166, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)167, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)171, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)171, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)178, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)181, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)183, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)197, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)197, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)198, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)198, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)199, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)200, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)201, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)202, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)203, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)204, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)205, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)206, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)215, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)216, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)217, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)220, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)221, (short)112 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)222, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)223, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)224, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)225, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)228, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)232, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)237, (short)112 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)240, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)245, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)246, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)246, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)248, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)251, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)251, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)252, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)253, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)254, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)256, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)257, (short)83 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)258, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)258, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)260, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)261, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)262, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)263, (short)183 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)264, (short)175 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)267, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)268, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)269, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)277, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)278, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)281, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)283, (short)113 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)284, (short)113 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)289, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)290, (short)183 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)291, (short)183 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)292, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)293, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)294, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)295, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)297, (short)75 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)297, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)298, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)299, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)300, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)305, (short)75 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)305, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)315, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)316, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)329, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)330, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)330, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)331, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)331, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)332, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)333, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)334, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)335, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)336, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)337, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)338, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)339, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)340, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)341, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)342, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)343, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)344, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)345, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)346, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)347, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)349, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)350, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)369, (short)75 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)369, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)370, (short)75 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)370, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)388, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)390, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)399, (short)83 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)416, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)422, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)422, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)429, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)429, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)430, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)430, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)435, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)437, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)479, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)480, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)508, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)562, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)563, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)569, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)570, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)573, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)574, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)575, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)583, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)585, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)586, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)593, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)598, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)599, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)600, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)601, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)602, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)607, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)608, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)609, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)610, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)611, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)612, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)613, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)614, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)616, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)663, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)670, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)670, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)680, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)680, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)688, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)689, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)703, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)720, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)721, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)726, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)728, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)731, (short)83 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)731, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)733, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)734, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)743, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)744, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)745, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)746, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)747, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)756, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)758, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)759, (short)183 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)766, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)767, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)767, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)769, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)770, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)773, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)775, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)776, (short)113 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)777, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)779, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)780, (short)183 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)781, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)782, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)783, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)784, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)786, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)786, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)787, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)788, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)789, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)790, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)791, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)793, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)793, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)794, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)795, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)795, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)796, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)798, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)798, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)799, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)800, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)800, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)801, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)802, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)803, (short)160 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)804, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)805, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)806, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)807, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)808, (short)177 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)809, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)814, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)815, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)815, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)817, (short)83 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)818, (short)85 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)818, (short)144 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)818, (short)175 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)822, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)827, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)827, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)828, (short)107 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)829, (short)74 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)829, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)836, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)839, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)839, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)846, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)847, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)868, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)869, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)870, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)871, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)872, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)873, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)874, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)875, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)876, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)877, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)878, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)879, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)882, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)884, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)885, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)886, (short)83 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)887, (short)120 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)888, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)889, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)890, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)891, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)892, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)894, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)895, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)897, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)898, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)899, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)901, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)902, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)905, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)906, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)907, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)909, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)910, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)911, (short)71 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)912, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)913, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)914, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)915, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)916, (short)113 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)917, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)920, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)921, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)922, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)923, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)924, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)925, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)926, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)927, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)928, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)930, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)931, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)932, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)933, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)934, (short)71 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)935, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)937, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)938, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)940, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)941, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)942, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)943, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)944, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)945, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)946, (short)112 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)948, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)949, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)951, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)952, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)953, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)954, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)955, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)956, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)957, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)959, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)960, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)961, (short)168 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)963, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)964, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)965, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)966, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)967, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)968, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)969, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)970, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)971, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)972, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)974, (short)177 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)975, (short)160 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)976, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)977, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)978, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)979, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)980, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)981, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)982, (short)183 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)983, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)984, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)985, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)986, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)987, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)989, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)990, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)991, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)994, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)995, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)996, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)997, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)998, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1002, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1005, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1007, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1009, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1010, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1011, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1013, (short)71 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1014, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1015, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1016, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1017, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1020, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1021, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1022, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1023, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1024, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1025, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1026, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1027, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1028, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1029, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1030, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1031, (short)55 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1032, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1033, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1034, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1035, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1036, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1038, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1039, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1040, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1041, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1042, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1043, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1044, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1046, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1047, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1048, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1049, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1050, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1052, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1053, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1054, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1055, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1056, (short)71 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1058, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1060, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1064, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1065, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1066, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1067, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1069, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1070, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1071, (short)83 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1073, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1075, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1077, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1080, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1082, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1083, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1084, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1086, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1087, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1088, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1090, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1091, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1092, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1093, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1096, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1097, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1098, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1099, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1100, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1101, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1102, (short)113 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1104, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1105, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1106, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1107, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1108, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1111, (short)112 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1112, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1113, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1114, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1115, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1117, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1118, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1123, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1124, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1128, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1143, (short)75 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1143, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1144, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1146, (short)159 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1148, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1148, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1149, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1153, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1154, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1156, (short)168 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1159, (short)177 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1160, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1162, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1164, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1165, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1167, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1173, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1173, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1180, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1189, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1190, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1191, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1192, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1194, (short)76 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1197, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1214, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1218, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1220, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1239, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1242, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1242, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1279, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1280, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1281, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1283, (short)120 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1284, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1286, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1286, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1294, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1298, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1299, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1483, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1528, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1529, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1536, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1540, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1543, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1544, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1545, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1546, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1547, (short)175 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1548, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1548, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1549, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1554, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1554, (short)55 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1555, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1562, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1563, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1566, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1568, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1569, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1570, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1573, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1574, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1581, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1581, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1581, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1581, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1581, (short)160 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1582, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1582, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1582, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1582, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1582, (short)160 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1583, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1583, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1583, (short)160 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1584, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1584, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1585, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1585, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1593, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1593, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1593, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1593, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1593, (short)160 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1602, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1625, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1627, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1638, (short)179 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1642, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1656, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1658, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1666, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1667, (short)163 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1669, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1670, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1671, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1672, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1702, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1703, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1704, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1705, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1706, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1707, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1708, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1709, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1712, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1713, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1725, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1725, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1725, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1739, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1799, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1816, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1817, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1840, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1840, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1841, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1841, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1842, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1842, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1846, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1848, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1849, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1850, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1852, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1853, (short)87 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1855, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1857, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1858, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1859, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1860, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1861, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1862, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1863, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1864, (short)74 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1876, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1876, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1877, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1877, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1878, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1878, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1886, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1888, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1889, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1890, (short)167 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1897, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1915, (short)154 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1918, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1918, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1929, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1938, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1947, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1948, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1949, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1961, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_languages",
                keyColumns: new[] { "FilterListId", "LanguageId" },
                keyValues: new object[] { (short)1962, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)2, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)3, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)4, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)5, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)6, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)10, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)11, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)11, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)11, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)11, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)12, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)12, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)12, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)13, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)13, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)13, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)14, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)14, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)16, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)17, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)18, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)19, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)20, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)27, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)30, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)32, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)39, (short)102 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)40, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)41, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)42, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)43, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)44, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)45, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)46, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)47, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)48, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)55, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)56, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)56, (short)102 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)57, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)58, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)60, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)61, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)71, (short)136 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)73, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)74, (short)89 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)78, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)79, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)80, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)81, (short)85 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)83, (short)63 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)84, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)87, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)88, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)89, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)90, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)91, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)93, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)95, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)96, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)97, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)98, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)102, (short)94 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)103, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)104, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)105, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)106, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)107, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)108, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)109, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)110, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)111, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)112, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)115, (short)129 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)116, (short)96 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)117, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)117, (short)96 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)118, (short)96 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)131, (short)92 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)132, (short)92 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)133, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)133, (short)92 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)134, (short)92 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)135, (short)129 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)136, (short)68 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)137, (short)93 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)150, (short)92 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)155, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)156, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)157, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)158, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)159, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)160, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)161, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)162, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)163, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)164, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)165, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)166, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)167, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)168, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)169, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)170, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)173, (short)86 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)177, (short)78 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)184, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)185, (short)86 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)186, (short)86 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)187, (short)86 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)188, (short)86 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)189, (short)86 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)190, (short)85 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)191, (short)85 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)192, (short)85 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)197, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)199, (short)133 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)200, (short)133 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)201, (short)133 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)202, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)203, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)204, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)205, (short)95 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)207, (short)47 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)212, (short)85 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)214, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)216, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)223, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)224, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)227, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)229, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)239, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)240, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)241, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)242, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)243, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)244, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)247, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)248, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)248, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)249, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)250, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)254, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)255, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)256, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)257, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)258, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)259, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)260, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)261, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)262, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)263, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)264, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)265, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)266, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)267, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)269, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)270, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)271, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)272, (short)45 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)274, (short)45 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)275, (short)45 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)283, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)283, (short)100 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)284, (short)100 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)285, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)286, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)287, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)288, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)289, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)290, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)290, (short)97 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)291, (short)97 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)292, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)293, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)294, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)295, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)297, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)297, (short)52 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)299, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)299, (short)98 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)300, (short)98 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)301, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)302, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)303, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)304, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)305, (short)52 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)306, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)307, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)308, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)309, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)311, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)312, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)313, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)315, (short)28 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)316, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)317, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)318, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)319, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)320, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)321, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)322, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)323, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)324, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)325, (short)35 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)327, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)329, (short)37 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)330, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)331, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)332, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)333, (short)39 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)334, (short)40 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)335, (short)41 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)336, (short)42 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)337, (short)42 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)338, (short)42 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)339, (short)43 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)340, (short)43 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)341, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)342, (short)70 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)343, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)344, (short)70 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)345, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)346, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)347, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)348, (short)44 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)349, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)350, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)352, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)353, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)354, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)355, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)356, (short)48 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)357, (short)49 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)358, (short)49 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)359, (short)49 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)360, (short)49 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)361, (short)49 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)362, (short)49 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)363, (short)49 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)364, (short)50 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)365, (short)50 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)366, (short)50 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)367, (short)51 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)368, (short)51 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)369, (short)52 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)370, (short)52 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)372, (short)53 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)373, (short)53 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)374, (short)53 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)375, (short)54 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)376, (short)55 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)377, (short)56 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)378, (short)56 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)379, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)380, (short)58 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)381, (short)59 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)385, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)388, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)390, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)391, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)392, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)393, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)395, (short)62 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)396, (short)63 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)397, (short)63 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)398, (short)63 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)399, (short)64 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)400, (short)69 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)401, (short)69 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)403, (short)64 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)405, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)410, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)412, (short)66 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)413, (short)66 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)414, (short)66 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)415, (short)66 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)416, (short)66 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)419, (short)125 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)420, (short)125 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)426, (short)124 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)429, (short)68 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)430, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)431, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)432, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)433, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)434, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)436, (short)64 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)437, (short)71 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)443, (short)80 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)447, (short)127 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)448, (short)127 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)449, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)450, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)451, (short)105 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)467, (short)128 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)468, (short)128 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)469, (short)128 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)472, (short)90 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)473, (short)90 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)474, (short)90 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)475, (short)90 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)476, (short)90 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)477, (short)90 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)478, (short)90 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)479, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)481, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)482, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)483, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)484, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)485, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)486, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)487, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)504, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)505, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)506, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)507, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)508, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)509, (short)72 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)510, (short)73 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)512, (short)75 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)513, (short)76 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)514, (short)77 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)515, (short)78 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)516, (short)78 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)517, (short)78 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)518, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)519, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)520, (short)79 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)521, (short)80 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)522, (short)80 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)525, (short)81 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)526, (short)81 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)564, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)565, (short)82 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)566, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)569, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)570, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)573, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)574, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)575, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)583, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)585, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)586, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)589, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)590, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)591, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)592, (short)137 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)595, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)596, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)601, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)602, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)603, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)604, (short)115 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)606, (short)83 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)607, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)608, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)609, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)610, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)611, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)612, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)613, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)614, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)616, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)617, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)658, (short)94 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)659, (short)94 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)660, (short)94 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)661, (short)94 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)670, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)672, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)673, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)674, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)675, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)676, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)677, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)680, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)681, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)685, (short)88 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)686, (short)82 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)729, (short)134 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)730, (short)134 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)734, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)756, (short)102 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)759, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)762, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)763, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)764, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)765, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)773, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)774, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)775, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)775, (short)99 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)776, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)776, (short)100 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)777, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)777, (short)102 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)778, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)779, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)780, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)780, (short)97 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)781, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)781, (short)98 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)782, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)783, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)783, (short)96 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)784, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)785, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)786, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)786, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)786, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)787, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)787, (short)92 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)788, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)788, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)789, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)790, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)792, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)794, (short)98 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)796, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)797, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)798, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)798, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)798, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)798, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)799, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)800, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)805, (short)92 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)806, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)810, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)811, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)812, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)816, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)817, (short)64 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)819, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)820, (short)57 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)842, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)843, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)844, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)845, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)846, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)847, (short)106 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)848, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)850, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)851, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)852, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)853, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)855, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)856, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)857, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)859, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)861, (short)107 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)862, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)863, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)866, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)867, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)868, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)869, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)870, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)871, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)872, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)873, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)874, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)875, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)876, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)877, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)878, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)879, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)881, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)882, (short)108 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)884, (short)134 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)885, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)886, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)887, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)888, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)889, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)890, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)891, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)892, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)893, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)894, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)895, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)896, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)897, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)898, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)899, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)900, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)901, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)902, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)903, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)904, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)905, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)906, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)907, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)908, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)909, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)910, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)911, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)912, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)913, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)914, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)915, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)916, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)917, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)918, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)919, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)920, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)921, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)922, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)923, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)924, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)925, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)926, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)927, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)928, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)929, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)930, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)931, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)932, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)933, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)934, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)935, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)936, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)937, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)938, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)939, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)940, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)941, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)942, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)943, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)944, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)945, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)946, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)947, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)948, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)949, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)950, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)951, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)952, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)953, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)954, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)955, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)956, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)957, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)958, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)959, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)960, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)961, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)962, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)963, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)964, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)965, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)966, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)967, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)968, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)969, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)970, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)971, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)972, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)973, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)974, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)975, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)976, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)977, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)978, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)979, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)980, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)981, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)982, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)983, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)984, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)985, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)986, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)987, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)988, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)989, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)990, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)991, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)992, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)993, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)994, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)995, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)996, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)997, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)998, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)999, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1000, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1001, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1002, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1003, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1004, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1005, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1006, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1007, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1008, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1009, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1010, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1011, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1012, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1013, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1014, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1015, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1016, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1017, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1018, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1019, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1020, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1021, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1022, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1023, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1024, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1025, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1026, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1027, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1028, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1029, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1030, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1031, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1032, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1033, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1034, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1035, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1036, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1037, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1038, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1039, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1040, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1041, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1042, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1043, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1044, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1045, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1046, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1047, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1048, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1049, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1050, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1051, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1052, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1053, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1054, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1055, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1056, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1057, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1058, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1059, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1060, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1061, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1062, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1063, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1064, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1065, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1066, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1067, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1068, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1069, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1070, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1071, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1072, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1073, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1074, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1075, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1076, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1077, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1078, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1079, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1080, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1081, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1082, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1083, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1084, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1085, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1086, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1087, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1088, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1089, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1090, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1091, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1092, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1093, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1094, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1095, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1096, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1097, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1098, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1099, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1100, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1101, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1102, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1103, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1104, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1105, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1106, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1107, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1108, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1109, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1110, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1111, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1112, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1113, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1114, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1115, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1116, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1117, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1118, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1119, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1120, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1121, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1122, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1123, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1124, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1125, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1126, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1127, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1128, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1130, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1133, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1135, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1139, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1140, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1141, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1142, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1143, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1144, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1146, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1148, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1149, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1151, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1152, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1153, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1154, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1155, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1156, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1157, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1158, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1159, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1160, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1161, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1162, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1165, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1166, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1167, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1168, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1169, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1172, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1173, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1174, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1175, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1176, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1179, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1180, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1182, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1183, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1184, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1185, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1187, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1189, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1190, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1191, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1192, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1193, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1194, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1196, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1197, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1199, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1202, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1203, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1204, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1205, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1206, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1207, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1209, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1210, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1211, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1212, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1213, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1214, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1215, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1216, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1217, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1218, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1220, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1221, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1222, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1223, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1224, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1225, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1226, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1227, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1228, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1229, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1230, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1231, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1232, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1233, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1234, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1235, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1237, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1238, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1239, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1240, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1241, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1242, (short)110 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1243, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1244, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1245, (short)109 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1247, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1279, (short)112 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1280, (short)112 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1281, (short)112 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1282, (short)113 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1284, (short)134 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1285, (short)134 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1288, (short)63 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1289, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1290, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1291, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1292, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1293, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1294, (short)134 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1295, (short)117 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1296, (short)117 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1297, (short)94 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1298, (short)114 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1299, (short)114 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1300, (short)115 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1301, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1302, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1303, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1304, (short)38 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1305, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1306, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1307, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1308, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1309, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1310, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1311, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1312, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1313, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1314, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1315, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1316, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1317, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1318, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1319, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1320, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1321, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1322, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1323, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1324, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1325, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1326, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1327, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1328, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1329, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1330, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1331, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1332, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1333, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1334, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1335, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1336, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1337, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1338, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1339, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1340, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1341, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1342, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1343, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1344, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1345, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1346, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1347, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1348, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1349, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1350, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1351, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1352, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1353, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1354, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1355, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1356, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1357, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1358, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1359, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1360, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1361, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1362, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1363, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1364, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1365, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1366, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1367, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1368, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1369, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1370, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1371, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1372, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1373, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1374, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1375, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1376, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1377, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1378, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1379, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1380, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1381, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1382, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1383, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1384, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1385, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1386, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1387, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1388, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1389, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1390, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1391, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1392, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1393, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1394, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1395, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1396, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1397, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1398, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1399, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1400, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1401, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1402, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1403, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1404, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1405, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1406, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1407, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1408, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1409, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1410, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1411, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1412, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1413, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1414, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1415, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1416, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1417, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1418, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1419, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1420, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1421, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1422, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1423, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1424, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1425, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1426, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1427, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1428, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1429, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1430, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1431, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1432, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1433, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1434, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1435, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1436, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1437, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1438, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1439, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1440, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1441, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1442, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1443, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1444, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1445, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1446, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1447, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1448, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1449, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1450, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1451, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1452, (short)116 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1454, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1455, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1456, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1458, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1459, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1460, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1461, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1463, (short)135 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1464, (short)135 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1465, (short)135 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1470, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1472, (short)118 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1473, (short)118 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1474, (short)118 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1475, (short)119 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1476, (short)119 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1477, (short)119 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1478, (short)119 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1479, (short)119 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1480, (short)118 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1483, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1485, (short)120 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1486, (short)120 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1490, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1492, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1498, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1499, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1502, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1503, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1504, (short)122 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1505, (short)123 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1506, (short)123 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1507, (short)124 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1508, (short)125 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1509, (short)125 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1510, (short)125 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1511, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1517, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1518, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1519, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1520, (short)121 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1523, (short)126 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1524, (short)126 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1525, (short)126 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1526, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1527, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1528, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1529, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1531, (short)128 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1532, (short)128 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1534, (short)129 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1535, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1536, (short)130 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1537, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1538, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1539, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1540, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1541, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1542, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1543, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1544, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1548, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1549, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1550, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1551, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1552, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1554, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1556, (short)131 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1558, (short)107 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1562, (short)132 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1564, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1565, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1567, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1568, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1569, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1570, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1574, (short)132 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1575, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1576, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1579, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1581, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1582, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1583, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1584, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1585, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1586, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1587, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1588, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1589, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1590, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1591, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1592, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1593, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1602, (short)138 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1604, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1605, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1606, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1635, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1636, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1637, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1639, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1736, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1737, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1738, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1740, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1741, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1742, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1743, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1744, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1745, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1746, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1747, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1748, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1749, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1750, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1751, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1752, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1753, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1754, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1755, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1756, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1757, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1758, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1759, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1760, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1761, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1762, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1763, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1764, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1765, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1766, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1767, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1768, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1769, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1770, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1771, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1772, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1773, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1774, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1775, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1776, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1777, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1778, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1779, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1780, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1781, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1782, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1783, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1784, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1785, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1786, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1787, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1788, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1789, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1790, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1791, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1792, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1793, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1794, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1795, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1796, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1797, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1798, (short)84 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1799, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1814, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1815, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1816, (short)34 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1817, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1818, (short)140 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1819, (short)139 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1832, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1833, (short)141 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1834, (short)142 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1835, (short)143 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1836, (short)144 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1838, (short)144 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1839, (short)144 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1840, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1841, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1842, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1876, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1877, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1878, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1901, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1929, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1930, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1950, (short)91 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1951, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1952, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1964, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1965, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1966, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1967, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1968, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1969, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1970, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1971, (short)46 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1972, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1973, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1974, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1975, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1976, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1977, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1978, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1979, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1980, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1981, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1982, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1983, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1984, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1987, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1988, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1989, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1990, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)1991, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)2019, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)2020, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_maintainers",
                keyColumns: new[] { "FilterListId", "MaintainerId" },
                keyValues: new object[] { (short)2021, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)3, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)3, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)4, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)5, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)6, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)6, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)10, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)11, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)12, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)13, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)14, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)16, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)16, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)17, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)18, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)18, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)19, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)20, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)20, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)20, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)20, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)20, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)27, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)28, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)29, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)30, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)31, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)32, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)32, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)33, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)34, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)36, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)38, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)39, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)40, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)41, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)42, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)43, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)44, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)45, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)45, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)45, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)46, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)47, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)48, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)48, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)49, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)50, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)51, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)52, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)53, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)53, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)54, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)55, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)55, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)56, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)57, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)58, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)59, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)60, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)61, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)62, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)63, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)64, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)65, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)66, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)67, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)68, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)69, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)70, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)71, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)72, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)72, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)73, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)74, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)78, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)78, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)78, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)78, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)78, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)78, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)78, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)79, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)79, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)79, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)79, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)79, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)79, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)80, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)80, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)80, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)80, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)80, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)81, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)82, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)83, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)84, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)85, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)86, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)87, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)88, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)89, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)90, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)91, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)93, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)93, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)93, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)93, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)93, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)93, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)93, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)93, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)94, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)95, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)95, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)95, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)95, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)95, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)95, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)95, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)96, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)96, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)96, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)96, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)96, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)96, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)96, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)97, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)98, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)99, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)99, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)100, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)101, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)102, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)103, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)104, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)104, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)104, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)104, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)104, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)104, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)104, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)104, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)105, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)105, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)105, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)105, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)105, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)105, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)105, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)105, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)106, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)106, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)106, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)106, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)106, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)106, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)106, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)106, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)107, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)107, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)107, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)107, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)107, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)107, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)107, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)108, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)108, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)108, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)108, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)108, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)108, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)108, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)109, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)109, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)109, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)109, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)109, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)109, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)109, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)110, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)110, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)110, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)110, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)110, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)110, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)111, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)111, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)111, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)111, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)111, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)112, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)112, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)112, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)112, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)112, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)112, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)113, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)113, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)114, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)114, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)115, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)115, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)116, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)117, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)118, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)119, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)131, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)132, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)132, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)133, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)134, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)135, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)135, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)136, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)137, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)138, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)139, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)140, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)141, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)142, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)143, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)144, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)145, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)146, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)147, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)148, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)148, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)150, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)151, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)152, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)155, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)156, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)157, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)158, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)159, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)160, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)161, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)162, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)163, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)164, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)165, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)166, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)167, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)168, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)168, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)169, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)169, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)170, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)171, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)173, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)173, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)175, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)176, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)177, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)178, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)179, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)181, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)183, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)184, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)184, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)185, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)186, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)187, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)188, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)189, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)190, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)191, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)192, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)197, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)198, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)199, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)200, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)201, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)202, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)202, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)203, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)203, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)204, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)205, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)205, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)206, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)207, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)212, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)213, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)214, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)215, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)216, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)217, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)217, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)220, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)220, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)221, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)221, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)222, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)223, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)224, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)225, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)225, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)225, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)226, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)227, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)228, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)229, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)232, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)233, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)234, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)235, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)236, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)237, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)237, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)238, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)239, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)240, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)241, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)241, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)242, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)243, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)244, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)245, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)246, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)247, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)247, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)247, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)248, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)249, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)250, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)251, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)251, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)252, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)253, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)254, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)254, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)255, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)256, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)256, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)257, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)257, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)258, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)258, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)259, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)260, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)260, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)261, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)261, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)262, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)262, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)263, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)263, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)264, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)264, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)265, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)266, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)267, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)268, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)269, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)270, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)271, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)272, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)274, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)275, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)276, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)276, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)277, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)278, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)279, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)279, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)280, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)281, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)282, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)283, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)284, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)285, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)286, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)287, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)288, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)289, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)290, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)291, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)292, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)293, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)294, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)295, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)297, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)298, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)299, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)300, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)301, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)302, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)303, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)303, (short)23 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)304, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)305, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)306, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)307, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)308, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)309, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)309, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)309, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)309, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)311, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)312, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)313, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)315, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)315, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)315, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)316, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)317, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)317, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)318, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)319, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)320, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)321, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)322, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)323, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)324, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)325, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)327, (short)33 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)329, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)330, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)331, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)331, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)332, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)333, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)334, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)335, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)336, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)336, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)337, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)338, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)339, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)340, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)341, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)342, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)343, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)344, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)345, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)346, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)347, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)347, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)348, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)349, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)350, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)352, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)353, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)354, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)355, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)356, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)357, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)358, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)358, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)359, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)360, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)361, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)361, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)362, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)363, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)364, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)364, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)365, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)366, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)367, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)368, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)369, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)370, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)371, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)371, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)372, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)373, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)374, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)375, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)375, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)376, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)376, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)377, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)378, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)379, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)380, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)381, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)382, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)382, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)383, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)385, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)388, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)388, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)388, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)388, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)390, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)390, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)390, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)391, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)392, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)393, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)393, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)395, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)396, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)397, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)398, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)399, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)399, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)399, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)400, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)400, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)400, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)401, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)401, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)401, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)403, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)403, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)405, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)405, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)410, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)412, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)413, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)413, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)414, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)415, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)416, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)417, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)418, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)419, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)420, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)421, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)422, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)423, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)424, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)425, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)426, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)427, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)428, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)429, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)430, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)430, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)431, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)432, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)433, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)434, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)435, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)436, (short)33 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)437, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)438, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)439, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)440, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)441, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)442, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)443, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)443, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)444, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)445, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)446, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)447, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)448, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)449, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)450, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)451, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)463, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)465, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)467, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)468, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)469, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)470, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)471, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)472, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)472, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)473, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)474, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)474, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)475, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)475, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)476, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)477, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)478, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)479, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)480, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)481, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)481, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)481, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)482, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)482, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)482, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)482, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)483, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)483, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)483, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)483, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)483, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)484, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)484, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)484, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)484, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)484, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)485, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)486, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)486, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)486, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)486, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)486, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)486, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)487, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)487, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)487, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)487, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)487, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)487, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)487, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)490, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)491, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)492, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)493, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)494, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)495, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)496, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)504, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)505, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)506, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)506, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)507, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)508, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)509, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)510, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)510, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)512, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)513, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)513, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)514, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)514, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)515, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)516, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)517, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)518, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)519, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)520, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)521, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)521, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)522, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)525, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)526, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)562, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)563, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)564, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)564, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)565, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)566, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)569, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)570, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)573, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)574, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)575, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)583, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)585, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)586, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)589, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)590, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)591, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)592, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)593, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)595, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)595, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)596, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)596, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)598, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)599, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)600, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)601, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)601, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)602, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)602, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)603, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)603, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)604, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)605, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)606, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)606, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)606, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)607, (short)28 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)608, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)609, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)610, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)611, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)612, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)613, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)614, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)616, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)617, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)617, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)618, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)619, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)625, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)625, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)626, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)627, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)628, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)628, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)629, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)630, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)631, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)632, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)658, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)659, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)660, (short)28 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)661, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)661, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)663, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)664, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)665, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)666, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)667, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)668, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)669, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)670, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)671, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)672, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)672, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)673, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)673, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)674, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)674, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)675, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)675, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)676, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)676, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)677, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)677, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)678, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)679, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)680, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)681, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)682, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)683, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)684, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)685, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)686, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)687, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)688, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)689, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)690, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)691, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)692, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)692, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)693, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)694, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)696, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)696, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)696, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)697, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)697, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)697, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)698, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)699, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)700, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)703, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)704, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)705, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)706, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)707, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)708, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)709, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)710, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)711, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)712, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)713, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)715, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)716, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)717, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)718, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)719, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)720, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)721, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)722, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)723, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)724, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)726, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)728, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)729, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)730, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)731, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)732, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)733, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)734, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)734, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)735, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)736, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)743, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)744, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)745, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)746, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)747, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)748, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)749, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)750, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)751, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)752, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)753, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)754, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)755, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)756, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)757, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)758, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)759, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)760, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)761, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)762, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)763, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)764, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)765, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)766, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)767, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)769, (short)28 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)770, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)772, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)773, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)774, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)775, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)776, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)777, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)778, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)779, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)780, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)781, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)782, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)783, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)784, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)785, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)786, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)787, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)788, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)789, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)790, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)791, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)792, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)793, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)794, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)795, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)796, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)797, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)798, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)799, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)800, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)801, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)802, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)803, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)804, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)805, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)806, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)807, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)808, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)809, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)809, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)810, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)810, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)810, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)810, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)811, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)811, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)811, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)811, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)812, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)812, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)812, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)812, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)813, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)814, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)815, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)815, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)816, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)817, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)817, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)817, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)817, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)818, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)819, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)820, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)821, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)822, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)823, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)824, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)825, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)826, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)827, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)828, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)828, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)829, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)830, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)831, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)832, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)833, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)834, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)835, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)836, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)837, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)837, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)837, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)838, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)839, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)840, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)840, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)841, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)841, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)842, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)842, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)843, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)843, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)843, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)844, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)844, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)845, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)846, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)846, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)847, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)848, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)850, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)850, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)851, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)852, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)853, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)855, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)856, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)857, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)857, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)858, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)859, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)859, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)860, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)861, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)862, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)862, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)863, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)863, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)866, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)866, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)866, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)867, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)867, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)867, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)868, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)869, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)870, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)871, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)872, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)873, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)874, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)875, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)876, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)877, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)878, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)879, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)881, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)882, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)884, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)885, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)886, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)887, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)888, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)889, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)890, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)891, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)892, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)893, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)894, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)895, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)896, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)897, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)898, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)899, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)900, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)901, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)902, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)903, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)904, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)905, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)906, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)907, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)908, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)909, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)910, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)911, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)912, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)913, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)914, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)915, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)916, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)917, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)918, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)919, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)920, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)921, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)922, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)923, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)924, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)925, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)926, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)927, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)928, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)929, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)930, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)931, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)932, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)933, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)934, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)935, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)936, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)937, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)938, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)939, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)940, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)941, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)942, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)943, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)944, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)945, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)946, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)947, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)948, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)949, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)950, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)951, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)952, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)953, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)954, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)955, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)956, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)957, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)958, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)959, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)960, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)961, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)962, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)963, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)964, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)965, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)966, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)967, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)968, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)969, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)970, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)971, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)972, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)973, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)974, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)975, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)976, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)977, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)978, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)979, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)980, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)981, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)982, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)983, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)984, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)985, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)986, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)987, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)988, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)989, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)990, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)991, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)992, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)993, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)994, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)995, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)996, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)997, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)998, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)999, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1000, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1001, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1002, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1003, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1004, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1005, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1006, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1007, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1008, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1009, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1010, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1011, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1012, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1013, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1014, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1015, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1016, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1017, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1018, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1019, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1020, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1021, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1022, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1023, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1024, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1025, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1026, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1027, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1028, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1029, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1030, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1031, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1032, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1033, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1034, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1035, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1036, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1037, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1038, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1039, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1040, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1041, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1042, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1043, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1044, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1045, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1046, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1047, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1048, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1049, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1050, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1051, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1052, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1053, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1054, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1055, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1056, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1057, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1058, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1059, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1060, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1061, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1062, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1063, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1064, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1065, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1066, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1067, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1068, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1069, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1070, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1071, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1072, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1073, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1074, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1075, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1076, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1077, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1078, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1079, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1080, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1081, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1082, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1083, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1084, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1085, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1086, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1087, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1088, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1089, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1090, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1091, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1092, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1093, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1094, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1095, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1096, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1097, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1098, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1099, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1100, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1101, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1102, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1103, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1104, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1105, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1106, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1107, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1108, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1109, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1110, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1111, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1112, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1113, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1114, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1115, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1116, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1117, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1118, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1119, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1120, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1121, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1122, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1123, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1124, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1125, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1126, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1127, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1128, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1130, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1133, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1135, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1139, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1140, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1141, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1142, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1143, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1144, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1146, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1148, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1149, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1151, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1152, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1153, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1154, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1155, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1156, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1157, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1158, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1159, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1160, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1161, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1162, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1163, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1164, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1165, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1166, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1167, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1168, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1169, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1172, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1173, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1174, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1175, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1176, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1179, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1180, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1182, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1183, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1184, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1185, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1187, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1189, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1190, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1191, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1192, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1193, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1194, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1196, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1197, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1199, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1202, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1203, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1204, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1205, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1206, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1207, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1209, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1209, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1209, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1209, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1209, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1210, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1211, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1212, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1213, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1214, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1215, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1216, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1217, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1218, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1220, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1221, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1222, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1223, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1224, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1225, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1226, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1227, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1228, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1229, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1230, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1231, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1232, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1233, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1234, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1235, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1237, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1238, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1239, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1240, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1241, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1242, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1243, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1244, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1245, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1247, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1278, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1278, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1279, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1280, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1281, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1282, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1283, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1283, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1284, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1285, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1286, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1286, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1288, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1289, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1289, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1290, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1290, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1290, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1291, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1292, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1293, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1294, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1295, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1295, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1295, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1295, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1296, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1297, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1298, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1299, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1300, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1301, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1301, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1301, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1301, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1302, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1302, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1302, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1303, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1304, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1305, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1306, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1307, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1308, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1309, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1310, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1311, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1311, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1312, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1312, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1313, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1314, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1315, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1316, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1317, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1318, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1319, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1320, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1321, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1322, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1323, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1324, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1325, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1326, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1327, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1328, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1329, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1330, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1331, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1332, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1333, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1334, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1335, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1336, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1337, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1338, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1339, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1340, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1341, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1342, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1343, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1344, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1345, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1346, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1347, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1348, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1349, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1350, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1351, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1352, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1353, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1354, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1355, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1356, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1357, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1358, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1359, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1360, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1361, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1362, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1363, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1364, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1365, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1366, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1367, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1368, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1369, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1370, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1371, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1372, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1373, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1374, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1375, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1376, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1377, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1378, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1379, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1380, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1381, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1382, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1383, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1384, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1385, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1386, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1387, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1388, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1389, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1390, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1391, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1392, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1393, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1394, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1395, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1396, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1397, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1398, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1399, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1400, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1401, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1402, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1403, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1404, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1405, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1406, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1407, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1408, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1409, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1410, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1411, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1412, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1413, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1414, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1415, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1416, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1417, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1418, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1419, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1420, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1421, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1422, (short)13 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1423, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1424, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1425, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1426, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1427, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1428, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1429, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1430, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1431, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1432, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1433, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1434, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1435, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1436, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1437, (short)23 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1438, (short)23 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1439, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1440, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1441, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1442, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1443, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1444, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1445, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1446, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1447, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1448, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1449, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1450, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1451, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1452, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1454, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1455, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1456, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1457, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1458, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1458, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1459, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1460, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1460, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1460, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1460, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1461, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1461, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1461, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1462, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1462, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1463, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1463, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1463, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1463, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1464, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1464, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1465, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1466, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1467, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1468, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1469, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1470, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1470, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1471, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1472, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1473, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1473, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1474, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1474, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1475, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1475, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1476, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1476, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1477, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1477, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1478, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1479, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1479, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1480, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1481, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1481, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1483, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1483, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1483, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1484, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1485, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1486, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1487, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1490, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1490, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1492, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1493, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1494, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1495, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1495, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1495, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1496, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1496, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1497, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1498, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1499, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1500, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1501, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1501, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1502, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1502, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1503, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1503, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1504, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1504, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1505, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1506, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1506, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1507, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1507, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1508, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1508, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1509, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1509, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1510, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1510, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1511, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1512, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1513, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1517, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1518, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1518, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1518, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1519, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1519, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1519, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1520, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1521, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1521, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1523, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1523, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1523, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1524, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1525, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1526, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1526, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1527, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1527, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1528, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1529, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1530, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1531, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1531, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1532, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1532, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1532, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1533, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1534, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1534, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1535, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1536, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1536, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1537, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1538, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1539, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1540, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1541, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1542, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1543, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1544, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1545, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1546, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1547, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1548, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1549, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1550, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1551, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1552, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1554, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1555, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1556, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1557, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1557, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1558, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1559, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1560, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1561, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1561, (short)14 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1562, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1562, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1562, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1562, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1562, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1562, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1562, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1563, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1564, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1565, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1566, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1567, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1568, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1569, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1570, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1573, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1574, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1574, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1574, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1574, (short)8 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1574, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1574, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1574, (short)29 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1575, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1575, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1576, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1576, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1577, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1577, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1578, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1579, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1581, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1581, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1581, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1581, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1581, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1582, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1582, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1582, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1582, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1582, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1583, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1583, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1584, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1584, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1585, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1585, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1586, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1587, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1588, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1589, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1590, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1591, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1591, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1592, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1593, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1593, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1593, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1593, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1594, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1595, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1596, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1597, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1597, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1597, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1597, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1597, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1598, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1598, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1598, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1598, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1598, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1599, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1599, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1599, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1599, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1599, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1600, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1600, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1600, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1600, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1600, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1601, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1601, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1602, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1602, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1602, (short)33 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1603, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1604, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1605, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1606, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1607, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1608, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1608, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1608, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1608, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1608, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1609, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1610, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1610, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1610, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1610, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1610, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1610, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1610, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1610, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1611, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1611, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1611, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1611, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1611, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1611, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1611, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1611, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1612, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1612, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1612, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1612, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1612, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1612, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1612, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1613, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1613, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1613, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1613, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1613, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1613, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1613, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1613, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1614, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1614, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1614, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1614, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1614, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1614, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1614, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1615, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1615, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1615, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1615, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1615, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1615, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1615, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1616, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1616, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1616, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1616, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1616, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1616, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1617, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1617, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1617, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1617, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1617, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1617, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1617, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1617, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1618, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1618, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1618, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1618, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1618, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1618, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1618, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1619, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1619, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1619, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1619, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1619, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1619, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1619, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1620, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1620, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1620, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1620, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1620, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1620, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1621, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1621, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1621, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1621, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1621, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1621, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1621, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1622, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1622, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1622, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1622, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1622, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1622, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1623, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1623, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1623, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1623, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1623, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1624, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1624, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1625, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1625, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1626, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1627, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1628, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1629, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1630, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1630, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1631, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1631, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1632, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1632, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1633, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1633, (short)26 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1634, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1635, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1636, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1637, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1638, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1639, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1639, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1640, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1640, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1641, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1642, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1643, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1644, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1645, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1645, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1646, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1646, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1647, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1648, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1649, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1650, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1651, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1652, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1653, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1654, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1655, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1656, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1657, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1658, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1659, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1660, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1661, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1662, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1663, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1664, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1665, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1666, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1667, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1668, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1669, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1670, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1670, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1671, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1672, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1673, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1674, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1675, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1676, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1677, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1678, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1679, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1680, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1681, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1682, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1683, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1684, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1685, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1686, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1687, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1688, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1689, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1690, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1691, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1692, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1693, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1694, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1695, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1696, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1697, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1698, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1699, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1700, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1701, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1702, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1703, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1704, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1705, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1706, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1706, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1706, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1707, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1708, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1709, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1710, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1711, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1712, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1712, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1713, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1714, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1715, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1716, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1717, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1718, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1719, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1720, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1720, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1721, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1722, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1723, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1724, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1724, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1725, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1725, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1726, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1727, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1728, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1729, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1730, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1731, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1732, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1733, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1734, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1734, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1734, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1734, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1735, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1735, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1735, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1735, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1736, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1737, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1738, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1739, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1740, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1741, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1742, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1743, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1743, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1743, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1744, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1744, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1744, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1744, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1745, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1745, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1745, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1745, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1745, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1746, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1746, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1746, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1746, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1746, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1747, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1748, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1748, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1748, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1748, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1748, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1748, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1749, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1749, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1749, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1749, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1749, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1749, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1749, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1750, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1750, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1751, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1752, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1753, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1754, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1754, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1754, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1755, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1755, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1755, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1755, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1756, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1756, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1756, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1756, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1756, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1757, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1757, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1757, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1757, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1757, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1758, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1758, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1758, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1758, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1758, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1758, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1758, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1759, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1759, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1759, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1759, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1759, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1759, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1760, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1760, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1760, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1760, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1760, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1760, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1760, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1761, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1761, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1762, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1763, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1764, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1765, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1765, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1765, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1766, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1766, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1766, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1766, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1767, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1767, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1767, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1767, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1767, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1768, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1768, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1768, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1768, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1768, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1769, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1770, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1770, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1770, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1770, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1770, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1770, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1771, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1771, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1771, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1771, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1771, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1771, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1771, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1772, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1772, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1773, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1774, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1775, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1776, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1776, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1776, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1777, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1777, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1777, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1777, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1778, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1778, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1778, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1778, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1778, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1779, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1779, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1779, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1779, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1779, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1780, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1781, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1781, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1781, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1781, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1781, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1781, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1782, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1782, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1782, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1782, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1782, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1782, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1782, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1783, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1783, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1784, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1785, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1786, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1787, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1787, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1787, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1788, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1788, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1788, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1788, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1789, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1789, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1789, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1789, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1789, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1790, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1790, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1790, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1790, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1790, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1791, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1792, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1792, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1792, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1792, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1792, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1792, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1793, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1793, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1793, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1793, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1793, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1793, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1793, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1794, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1794, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1795, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1796, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1797, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1798, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1799, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1800, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1800, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1800, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1801, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1801, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1802, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1803, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1803, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1804, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1805, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1805, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1806, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1807, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1808, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1809, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1810, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1811, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1812, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1813, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1814, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1814, (short)25 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1815, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1816, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1817, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1817, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1818, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1818, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1819, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1819, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1822, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1823, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1824, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1825, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1826, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1827, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1828, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1829, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1830, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1831, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1831, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1832, (short)18 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1832, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1833, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1834, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1835, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1836, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1836, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1836, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1838, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1839, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1840, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1841, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1842, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1843, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1844, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1845, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1846, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1847, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1848, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1848, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1848, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1848, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1849, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1850, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1852, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1853, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1854, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1855, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1856, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1857, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1858, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1859, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1860, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1861, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1862, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1863, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1864, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1865, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1866, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1867, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1868, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1868, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1868, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1868, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1868, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1869, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1869, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1869, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1869, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1869, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1870, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1870, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1870, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1870, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1870, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1871, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1871, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1871, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1871, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1871, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1872, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1872, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1872, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1872, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1872, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1873, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1874, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1876, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1876, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1877, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1877, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1878, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1878, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1881, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1882, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1883, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1884, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1885, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1886, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1887, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1887, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1887, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1888, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1888, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1889, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1890, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1891, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1892, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1892, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1892, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1893, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1894, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1894, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1894, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1895, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1895, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1895, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1896, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1896, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1897, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1898, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1899, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1900, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1901, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1902, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1903, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1904, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1905, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1905, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1906, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1906, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1906, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1907, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1908, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1909, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1910, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1911, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1912, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1913, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1914, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1915, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1915, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1916, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1918, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1918, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1919, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1920, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1921, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1921, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1922, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1922, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1923, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1924, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1925, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1926, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1927, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1928, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1929, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1930, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1930, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1931, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1932, (short)21 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1933, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1934, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1935, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1936, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1937, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1938, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1939, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1939, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1940, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1941, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1941, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1942, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1942, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1943, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1943, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1944, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1944, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1945, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1945, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1946, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1946, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1947, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1948, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1949, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1950, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1951, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1952, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1953, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1953, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1953, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1953, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1954, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1954, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1954, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1954, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1955, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1955, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1955, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1955, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1956, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1957, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1957, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1958, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1958, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1959, (short)12 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1960, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1961, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1962, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1963, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1963, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1963, (short)10 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1964, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1965, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1966, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1966, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1967, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1967, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1968, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1969, (short)32 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1970, (short)33 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1971, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1972, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1973, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1974, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1975, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1976, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1977, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1978, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1979, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1980, (short)16 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1981, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1982, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1983, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1983, (short)30 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1984, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1985, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1985, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1986, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1986, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1986, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1987, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1988, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1989, (short)19 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1990, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1991, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1992, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1993, (short)22 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1994, (short)23 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1995, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1996, (short)5 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1997, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1998, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)1999, (short)27 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2000, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2000, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2001, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2001, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2001, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2001, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2002, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2002, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2002, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2002, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2003, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2003, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2003, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2003, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2004, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2005, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2006, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2007, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2008, (short)2 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2009, (short)1 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2010, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2011, (short)24 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2012, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2013, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2014, (short)17 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2015, (short)7 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2016, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2017, (short)11 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2018, (short)15 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2019, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2020, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2021, (short)9 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2022, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2023, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2024, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2025, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2026, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2026, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2027, (short)3 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2027, (short)4 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2028, (short)6 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2029, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2030, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2031, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2032, (short)20 });

            migrationBuilder.DeleteData(
                table: "filterlists_tags",
                keyColumns: new[] { "FilterListId", "TagId" },
                keyValues: new object[] { (short)2033, (short)2 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)16, (short)59 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)16, (short)99 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)16, (short)278 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)158, (short)258 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)163, (short)262 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)164, (short)293 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)166, (short)301 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)167, (short)295 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)312, (short)311 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)313, (short)311 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)350, (short)12 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)563, (short)16 });

            migrationBuilder.DeleteData(
                table: "forks",
                keyColumns: new[] { "ForkFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)565, (short)301 });

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)1);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)2);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)3);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)4);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)5);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)6);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)7);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)8);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)9);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)12);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)14);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)15);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)16);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)19);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)20);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)21);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)22);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)23);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)26);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)28);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)30);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)32);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)33);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)34);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)35);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)36);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)37);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)38);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)39);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)40);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)41);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)42);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)45);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)47);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)49);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)50);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)51);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)52);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)53);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)54);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)56);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)57);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)59);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)60);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)61);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)62);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)63);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)64);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)65);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)66);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)67);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)68);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)69);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)70);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)72);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)73);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)77);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)78);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)80);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)81);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)82);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)86);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)88);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)89);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)90);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)91);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)92);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)93);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)94);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)96);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)97);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)98);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)100);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)101);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)102);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)103);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)109);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)111);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)114);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)115);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)116);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)117);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)118);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)119);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)121);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)123);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)124);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)125);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)126);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)127);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)128);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)129);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)130);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)131);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)132);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)133);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)134);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)135);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)138);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)140);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)142);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)143);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)145);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)146);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)147);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)148);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)149);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)150);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)151);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)152);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)153);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)155);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)156);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)157);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)158);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)161);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)162);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)164);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)165);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)166);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)169);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)170);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)171);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)172);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)173);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)174);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)176);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)178);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)180);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)181);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)182);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)184);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)17);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)36);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)37);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)41);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)42);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)16);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)17);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)23);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)27);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)33);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)36);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)87);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)101);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)103);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)104);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)111);

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)11, (short)12 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)11, (short)301 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)13, (short)12 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)13, (short)14 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)13, (short)301 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)168, (short)157 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)168, (short)159 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)168, (short)162 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)168, (short)166 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)168, (short)242 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)168, (short)301 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)255, (short)564 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)265, (short)564 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)266, (short)564 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)271, (short)338 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)274, (short)275 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)17 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)32 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)47 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)54 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)80 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)81 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)99 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)138 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)170 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)177 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)179 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)206 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)226 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)255 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)276 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)282 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)316 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)317 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)324 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)325 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)329 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)309, (short)340 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)331, (short)199 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)331, (short)330 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)331, (short)332 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)331, (short)333 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)371, (short)110 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)371, (short)232 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)2 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)18 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)19 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)27 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)38 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)70 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)71 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)97 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)99 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)148 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)183 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)184 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)214 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)232 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)247 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)279 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)375, (short)307 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)566, (short)569 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)566, (short)570 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)566, (short)573 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)566, (short)574 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)566, (short)575 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)566, (short)583 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)566, (short)585 });

            migrationBuilder.DeleteData(
                table: "merges",
                keyColumns: new[] { "MergeFilterListId", "UpstreamFilterListId" },
                keyValues: new object[] { (short)566, (short)586 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)4 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)7 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)11 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)12 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)14 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)22 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)25 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)26 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)27 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)28 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)1, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)3 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)4 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)8 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)14 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)17 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)19 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)25 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)26 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)27 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)28 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)2, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)2 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)3 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)6 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)24 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)3, (short)40 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)4, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)4, (short)3 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)4, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)4, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)6, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)6, (short)3 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)6, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)6, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)7, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)7, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)7, (short)25 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)7, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)8, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)8, (short)3 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)8, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)8, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)9, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)9, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)9, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)9, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)9, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)9, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)10, (short)16 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)11, (short)10 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)12, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)13, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)13, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)13, (short)13 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)13, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)14, (short)7 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)14, (short)11 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)14, (short)12 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)14, (short)14 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)14, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)15, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)16, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)16, (short)3 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)16, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)16, (short)19 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)16, (short)26 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)16, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)16, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)17, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)17, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)17, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)18, (short)20 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)19, (short)21 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)20, (short)23 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)21, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)21, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)21, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)22, (short)4 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)22, (short)26 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)22, (short)28 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)23, (short)33 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)24, (short)29 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)25, (short)30 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)26, (short)30 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)27, (short)34 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)2 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)3 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)6 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)24 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)28, (short)40 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)29, (short)35 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)29, (short)36 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)29, (short)37 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)30, (short)14 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)31, (short)38 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)32, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)32, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)32, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)32, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)32, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)32, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)33, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)33, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)33, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)33, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)33, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)33, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)34, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)34, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)4 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)7 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)11 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)12 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)14 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)22 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)25 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)26 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)27 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)28 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)35, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)36, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)36, (short)7 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)36, (short)11 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)36, (short)12 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)36, (short)14 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)36, (short)22 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)36, (short)27 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)37, (short)7 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)37, (short)11 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)37, (short)12 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)37, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)38, (short)2 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)38, (short)6 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)38, (short)40 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)39, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)39, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)39, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)39, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)39, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)39, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)40, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)40, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)40, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)40, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)40, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)40, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)41, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)41, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)42, (short)1 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)42, (short)5 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)42, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)42, (short)31 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)42, (short)32 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)42, (short)39 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)43, (short)18 });

            migrationBuilder.DeleteData(
                table: "software_syntaxes",
                keyColumns: new[] { "SyntaxId", "SoftwareId" },
                keyValues: new object[] { (short)43, (short)31 });

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)3);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)4);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)5);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)6);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)10);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)11);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)12);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)13);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)14);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)16);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)17);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)18);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)19);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)20);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)27);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)28);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)29);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)30);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)31);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)32);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)33);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)34);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)36);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)38);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)39);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)40);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)41);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)42);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)43);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)44);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)45);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)46);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)47);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)48);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)49);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)50);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)51);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)52);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)53);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)54);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)55);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)56);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)57);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)58);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)59);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)60);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)61);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)62);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)63);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)64);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)65);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)66);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)67);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)68);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)69);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)70);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)71);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)72);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)73);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)74);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)78);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)79);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)80);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)81);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)82);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)83);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)84);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)85);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)86);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)87);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)88);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)89);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)90);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)91);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)93);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)94);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)95);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)96);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)97);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)98);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)99);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)100);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)101);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)102);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)103);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)104);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)105);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)106);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)107);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)108);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)109);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)110);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)111);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)112);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)113);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)114);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)115);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)116);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)117);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)118);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)119);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)131);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)132);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)133);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)134);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)135);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)136);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)137);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)138);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)139);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)140);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)141);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)142);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)143);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)144);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)145);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)146);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)147);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)148);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)150);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)151);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)152);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)155);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)156);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)157);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)158);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)159);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)160);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)161);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)162);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)163);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)164);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)165);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)166);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)167);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)168);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)169);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)170);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)171);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)173);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)175);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)176);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)177);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)178);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)179);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)181);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)183);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)184);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)185);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)186);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)187);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)188);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)189);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)190);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)191);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)192);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)197);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)198);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)199);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)200);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)201);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)202);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)203);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)204);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)205);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)206);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)207);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)212);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)213);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)214);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)215);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)216);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)217);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)220);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)221);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)222);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)223);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)224);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)225);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)226);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)227);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)228);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)229);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)232);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)233);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)234);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)235);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)236);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)237);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)238);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)239);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)240);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)241);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)242);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)243);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)244);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)245);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)246);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)247);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)248);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)249);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)250);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)251);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)252);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)253);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)254);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)255);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)256);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)257);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)258);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)259);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)260);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)261);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)262);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)263);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)264);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)265);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)266);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)267);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)268);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)269);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)270);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)271);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)272);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)274);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)275);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)276);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)277);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)278);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)279);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)280);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)281);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)282);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)283);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)284);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)285);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)286);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)287);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)288);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)289);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)290);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)291);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)292);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)293);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)294);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)295);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)297);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)298);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)299);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)300);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)301);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)302);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)303);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)304);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)305);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)306);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)307);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)308);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)309);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)311);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)312);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)313);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)315);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)316);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)317);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)318);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)319);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)320);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)321);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)322);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)323);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)324);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)325);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)327);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)329);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)330);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)331);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)332);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)333);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)334);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)335);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)336);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)337);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)338);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)339);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)340);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)341);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)342);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)343);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)344);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)345);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)346);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)347);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)348);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)349);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)350);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)352);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)353);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)354);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)355);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)356);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)357);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)358);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)359);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)360);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)361);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)362);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)363);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)364);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)365);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)366);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)367);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)368);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)369);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)370);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)371);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)372);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)373);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)374);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)375);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)376);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)377);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)378);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)379);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)380);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)381);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)382);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)383);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)385);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)388);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)390);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)391);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)392);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)393);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)395);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)396);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)397);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)398);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)399);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)400);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)401);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)403);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)405);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)410);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)412);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)413);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)414);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)415);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)416);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)417);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)418);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)419);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)420);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)421);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)422);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)423);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)424);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)425);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)426);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)427);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)428);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)429);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)430);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)431);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)432);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)433);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)434);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)435);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)436);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)437);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)438);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)439);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)440);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)441);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)442);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)443);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)444);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)445);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)446);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)447);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)448);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)449);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)450);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)451);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)463);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)465);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)467);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)468);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)469);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)470);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)471);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)472);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)473);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)474);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)475);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)476);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)477);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)478);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)479);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)480);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)481);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)482);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)483);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)484);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)485);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)486);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)487);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)490);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)491);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)492);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)493);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)494);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)495);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)496);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)504);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)505);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)506);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)507);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)508);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)509);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)510);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)512);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)513);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)514);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)515);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)516);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)517);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)518);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)519);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)520);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)521);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)522);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)525);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)526);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)562);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)563);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)564);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)565);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)566);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)569);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)570);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)573);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)574);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)575);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)583);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)585);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)586);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)589);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)590);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)591);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)592);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)593);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)595);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)596);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)598);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)599);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)600);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)601);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)602);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)603);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)604);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)605);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)606);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)607);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)608);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)609);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)610);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)611);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)612);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)613);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)614);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)616);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)617);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)618);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)619);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)625);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)626);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)627);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)628);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)629);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)630);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)631);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)632);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)658);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)659);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)660);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)661);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)663);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)664);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)665);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)666);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)667);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)668);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)669);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)670);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)671);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)672);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)673);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)674);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)675);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)676);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)677);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)678);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)679);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)680);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)681);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)682);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)683);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)684);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)685);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)686);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)687);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)688);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)689);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)690);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)691);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)692);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)693);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)694);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)696);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)697);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)698);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)699);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)700);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)703);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)704);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)705);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)706);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)707);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)708);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)709);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)710);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)711);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)712);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)713);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)715);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)716);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)717);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)718);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)719);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)720);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)721);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)722);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)723);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)724);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)726);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)728);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)729);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)730);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)731);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)732);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)733);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)734);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)735);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)736);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)743);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)744);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)745);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)746);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)747);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)748);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)749);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)750);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)751);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)752);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)753);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)754);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)755);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)756);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)757);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)758);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)759);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)760);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)761);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)762);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)763);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)764);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)765);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)766);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)767);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)769);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)770);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)772);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)773);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)774);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)775);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)776);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)777);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)778);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)779);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)780);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)781);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)782);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)783);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)784);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)785);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)786);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)787);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)788);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)789);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)790);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)791);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)792);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)793);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)794);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)795);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)796);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)797);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)798);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)799);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)800);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)801);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)802);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)803);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)804);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)805);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)806);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)807);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)808);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)809);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)810);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)811);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)812);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)813);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)814);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)815);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)816);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)817);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)818);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)819);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)820);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)821);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)822);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)823);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)824);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)825);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)826);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)827);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)828);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)829);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)830);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)831);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)832);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)833);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)834);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)835);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)836);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)837);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)838);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)839);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)840);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)841);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)842);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)843);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)844);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)845);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)846);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)847);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)848);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)850);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)851);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)852);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)853);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)855);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)856);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)857);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)858);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)859);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)860);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)861);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)862);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)863);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)866);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)867);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)868);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)869);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)870);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)871);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)872);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)873);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)874);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)875);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)876);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)877);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)878);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)879);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)881);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)882);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)884);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)885);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)886);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)887);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)888);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)889);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)890);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)891);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)892);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)893);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)894);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)895);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)896);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)897);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)898);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)899);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)900);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)901);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)902);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)903);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)904);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)905);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)906);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)907);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)908);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)909);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)910);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)911);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)912);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)913);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)914);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)915);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)916);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)917);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)918);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)919);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)920);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)921);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)922);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)923);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)924);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)925);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)926);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)927);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)928);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)929);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)930);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)931);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)932);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)933);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)934);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)935);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)936);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)937);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)938);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)939);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)940);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)941);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)942);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)943);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)944);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)945);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)946);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)947);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)948);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)949);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)950);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)951);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)952);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)953);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)954);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)955);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)956);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)957);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)958);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)959);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)960);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)961);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)962);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)963);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)964);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)965);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)966);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)967);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)968);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)969);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)970);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)971);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)972);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)973);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)974);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)975);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)976);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)977);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)978);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)979);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)980);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)981);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)982);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)983);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)984);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)985);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)986);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)987);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)988);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)989);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)990);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)991);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)992);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)993);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)994);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)995);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)996);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)997);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)998);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)999);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1000);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1001);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1002);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1003);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1004);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1005);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1006);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1007);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1008);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1009);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1010);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1011);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1012);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1013);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1014);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1015);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1016);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1017);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1018);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1019);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1020);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1021);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1022);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1023);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1024);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1025);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1026);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1027);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1028);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1029);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1030);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1031);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1032);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1033);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1034);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1035);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1036);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1037);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1038);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1039);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1040);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1041);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1042);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1043);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1044);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1045);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1046);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1047);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1048);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1049);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1050);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1051);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1052);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1053);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1054);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1055);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1056);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1057);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1058);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1059);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1060);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1061);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1062);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1063);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1064);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1065);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1066);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1067);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1068);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1069);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1070);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1071);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1072);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1073);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1074);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1075);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1076);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1077);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1078);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1079);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1080);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1081);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1082);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1083);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1084);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1085);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1086);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1087);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1088);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1089);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1090);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1091);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1092);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1093);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1094);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1095);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1096);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1097);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1098);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1099);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1100);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1101);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1102);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1103);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1104);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1105);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1106);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1107);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1108);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1109);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1110);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1111);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1112);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1113);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1114);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1115);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1116);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1117);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1118);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1119);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1120);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1121);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1122);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1123);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1124);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1125);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1126);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1127);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1128);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1130);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1133);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1135);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1139);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1140);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1141);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1142);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1143);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1144);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1146);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1148);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1149);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1151);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1152);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1153);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1154);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1155);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1156);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1157);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1158);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1159);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1160);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1161);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1162);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1163);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1164);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1165);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1166);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1167);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1168);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1169);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1172);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1173);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1174);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1175);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1176);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1179);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1180);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1182);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1183);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1184);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1185);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1187);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1189);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1190);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1191);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1192);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1193);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1194);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1196);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1197);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1199);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1202);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1203);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1204);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1205);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1206);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1207);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1209);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1210);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1211);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1212);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1213);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1214);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1215);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1216);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1217);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1218);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1220);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1221);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1222);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1223);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1224);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1225);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1226);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1227);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1228);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1229);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1230);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1231);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1232);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1233);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1234);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1235);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1237);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1238);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1239);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1240);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1241);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1242);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1243);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1244);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1245);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1247);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1278);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1279);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1280);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1281);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1282);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1283);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1284);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1285);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1286);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1288);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1289);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1290);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1291);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1292);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1293);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1294);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1295);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1296);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1297);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1298);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1299);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1300);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1301);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1302);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1303);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1304);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1305);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1306);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1307);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1308);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1309);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1310);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1311);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1312);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1313);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1314);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1315);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1316);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1317);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1318);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1319);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1320);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1321);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1322);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1323);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1324);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1325);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1326);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1327);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1328);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1329);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1330);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1331);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1332);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1333);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1334);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1335);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1336);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1337);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1338);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1339);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1340);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1341);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1342);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1343);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1344);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1345);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1346);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1347);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1348);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1349);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1350);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1351);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1352);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1353);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1354);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1355);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1356);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1357);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1358);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1359);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1360);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1361);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1362);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1363);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1364);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1365);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1366);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1367);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1368);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1369);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1370);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1371);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1372);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1373);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1374);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1375);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1376);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1377);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1378);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1379);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1380);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1381);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1382);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1383);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1384);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1385);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1386);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1387);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1388);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1389);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1390);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1391);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1392);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1393);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1394);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1395);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1396);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1397);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1398);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1399);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1400);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1401);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1402);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1403);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1404);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1405);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1406);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1407);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1408);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1409);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1410);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1411);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1412);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1413);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1414);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1415);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1416);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1417);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1418);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1419);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1420);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1421);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1422);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1423);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1424);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1425);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1426);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1427);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1428);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1429);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1430);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1431);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1432);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1433);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1434);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1435);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1436);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1437);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1438);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1439);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1440);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1441);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1442);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1443);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1444);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1445);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1446);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1447);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1448);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1449);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1450);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1451);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1452);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1454);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1455);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1456);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1457);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1458);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1459);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1460);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1461);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1462);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1463);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1464);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1465);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1466);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1467);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1468);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1469);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1470);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1471);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1472);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1473);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1474);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1475);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1476);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1477);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1478);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1479);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1480);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1481);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1483);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1484);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1485);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1486);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1487);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1490);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1492);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1493);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1494);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1495);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1496);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1497);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1498);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1499);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1500);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1501);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1502);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1503);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1504);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1505);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1506);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1507);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1508);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1509);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1510);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1511);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1512);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1513);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1517);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1518);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1519);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1520);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1521);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1523);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1524);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1525);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1526);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1527);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1528);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1529);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1530);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1531);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1532);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1533);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1534);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1535);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1536);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1537);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1538);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1539);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1540);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1541);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1542);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1543);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1544);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1545);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1546);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1547);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1548);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1549);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1550);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1551);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1552);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1554);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1555);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1556);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1557);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1558);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1559);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1560);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1561);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1562);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1563);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1564);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1565);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1566);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1567);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1568);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1569);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1570);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1573);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1574);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1575);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1576);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1577);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1578);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1579);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1581);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1582);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1583);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1584);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1585);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1586);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1587);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1588);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1589);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1590);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1591);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1592);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1593);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1594);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1595);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1596);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1597);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1598);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1599);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1600);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1601);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1602);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1603);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1604);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1605);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1606);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1607);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1608);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1609);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1610);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1611);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1612);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1613);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1614);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1615);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1616);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1617);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1618);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1619);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1620);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1621);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1622);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1623);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1624);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1625);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1626);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1627);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1628);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1629);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1630);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1631);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1632);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1633);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1634);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1635);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1636);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1637);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1638);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1639);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1640);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1641);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1642);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1643);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1644);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1645);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1646);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1647);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1648);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1649);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1650);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1651);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1652);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1653);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1654);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1655);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1656);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1657);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1658);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1659);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1660);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1661);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1662);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1663);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1664);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1665);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1666);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1667);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1668);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1669);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1670);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1671);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1672);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1673);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1674);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1675);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1676);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1677);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1678);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1679);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1680);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1681);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1682);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1683);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1684);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1685);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1686);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1687);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1688);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1689);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1690);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1691);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1692);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1693);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1694);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1695);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1696);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1697);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1698);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1699);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1700);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1701);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1702);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1703);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1704);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1705);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1706);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1707);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1708);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1709);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1710);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1711);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1712);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1713);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1714);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1715);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1716);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1717);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1718);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1719);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1720);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1721);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1722);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1723);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1724);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1725);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1726);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1727);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1728);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1729);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1730);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1731);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1732);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1733);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1734);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1735);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1736);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1737);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1738);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1739);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1740);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1741);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1742);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1743);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1744);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1745);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1746);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1747);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1748);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1749);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1750);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1751);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1752);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1753);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1754);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1755);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1756);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1757);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1758);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1759);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1760);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1761);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1762);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1763);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1764);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1765);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1766);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1767);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1768);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1769);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1770);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1771);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1772);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1773);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1774);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1775);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1776);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1777);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1778);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1779);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1780);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1781);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1782);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1783);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1784);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1785);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1786);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1787);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1788);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1789);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1790);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1791);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1792);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1793);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1794);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1795);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1796);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1797);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1798);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1799);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1800);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1801);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1802);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1803);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1804);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1805);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1806);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1807);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1808);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1809);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1810);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1811);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1812);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1813);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1814);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1815);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1816);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1817);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1818);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1819);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1822);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1823);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1824);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1825);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1826);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1827);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1828);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1829);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1830);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1831);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1832);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1833);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1834);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1835);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1836);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1838);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1839);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1840);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1841);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1842);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1843);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1844);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1845);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1846);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1847);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1848);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1849);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1850);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1852);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1853);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1854);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1855);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1856);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1857);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1858);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1859);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1860);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1861);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1862);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1863);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1864);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1865);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1866);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1867);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1868);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1869);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1870);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1871);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1872);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1873);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1874);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1876);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1877);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1878);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1881);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1882);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1883);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1884);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1885);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1886);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1887);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1888);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1889);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1890);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1891);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1892);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1893);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1894);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1895);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1896);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1897);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1898);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1899);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1900);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1901);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1902);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1903);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1904);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1905);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1906);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1907);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1908);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1909);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1910);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1911);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1912);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1913);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1914);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1915);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1916);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1918);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1919);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1920);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1921);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1922);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1923);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1924);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1925);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1926);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1927);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1928);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1929);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1930);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1931);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1932);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1933);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1934);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1935);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1936);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1937);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1938);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1939);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1940);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1941);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1942);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1943);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1944);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1945);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1946);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1947);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1948);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1949);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1950);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1951);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1952);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1953);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1954);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1955);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1956);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1957);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1958);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1959);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1960);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1961);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1962);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1963);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1964);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1965);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1966);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1967);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1968);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1969);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1970);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1971);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1972);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1973);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1974);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1975);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1976);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1977);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1978);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1979);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1980);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1981);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1982);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1983);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1984);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1985);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1986);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1987);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1988);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1989);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1990);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1991);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1992);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1993);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1994);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1995);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1996);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1997);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1998);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)1999);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2000);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2001);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2002);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2003);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2004);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2005);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2006);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2007);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2008);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2009);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2010);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2011);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2012);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2013);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2014);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2015);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2016);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2017);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2018);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2019);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2020);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2021);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2022);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2023);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2024);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2025);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2026);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2027);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2028);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2029);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2030);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2031);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2032);

            migrationBuilder.DeleteData(
                table: "filterlists",
                keyColumn: "Id",
                keyValue: (short)2033);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)10);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)11);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)13);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)17);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)18);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)25);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)27);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)29);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)31);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)44);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)46);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)48);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)55);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)58);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)71);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)74);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)75);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)76);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)79);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)83);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)84);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)85);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)87);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)95);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)99);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)105);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)106);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)107);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)108);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)110);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)112);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)113);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)120);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)122);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)137);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)139);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)141);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)144);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)154);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)159);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)160);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)163);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)167);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)168);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)175);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)177);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)179);

            migrationBuilder.DeleteData(
                table: "languages",
                keyColumn: "Id",
                keyValue: (short)183);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)2);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)3);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)4);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)5);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)6);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)7);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)8);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)10);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)11);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)12);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)13);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)14);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)15);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)18);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)19);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)20);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)21);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)22);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)24);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)25);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)26);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)28);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)29);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)30);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)31);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)32);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)34);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)35);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)37);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)38);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)39);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)40);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)41);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)42);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)43);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)44);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)45);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)46);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)47);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)48);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)49);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)50);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)51);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)52);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)53);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)54);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)55);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)56);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)57);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)58);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)59);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)62);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)63);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)64);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)66);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)68);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)69);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)70);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)71);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)72);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)73);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)75);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)76);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)77);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)78);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)79);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)80);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)81);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)82);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)83);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)84);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)85);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)86);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)88);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)89);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)90);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)91);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)92);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)93);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)94);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)95);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)96);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)97);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)98);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)99);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)100);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)102);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)105);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)106);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)107);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)108);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)109);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)110);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)112);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)113);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)114);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)115);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)116);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)117);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)118);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)119);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)120);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)121);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)122);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)123);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)124);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)125);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)126);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)127);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)128);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)129);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)130);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)131);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)132);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)133);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)134);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)135);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)136);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)137);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)138);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)139);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)140);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)141);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)142);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)143);

            migrationBuilder.DeleteData(
                table: "maintainers",
                keyColumn: "Id",
                keyValue: (short)144);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)1);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)2);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)3);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)4);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)5);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)6);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)7);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)8);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)10);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)11);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)12);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)13);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)14);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)16);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)17);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)18);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)19);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)20);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)21);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)22);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)23);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)24);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)25);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)26);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)27);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)28);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)29);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)30);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)31);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)32);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)33);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)34);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)35);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)36);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)37);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)38);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)39);

            migrationBuilder.DeleteData(
                table: "software",
                keyColumn: "Id",
                keyValue: (short)40);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)22);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)39);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)40);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)42);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)43);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)1);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)2);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)3);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)4);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)5);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)6);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)7);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)8);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)9);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)10);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)11);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)12);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)13);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)14);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)15);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)16);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)17);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)18);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)19);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)20);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)21);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)22);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)23);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)24);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)25);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)26);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)27);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)28);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)29);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)30);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)31);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)32);

            migrationBuilder.DeleteData(
                table: "tags",
                keyColumn: "Id",
                keyValue: (short)33);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)1);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)2);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)3);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)4);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)5);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)6);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)7);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)8);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)9);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)10);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)11);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)12);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)13);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)14);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)15);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)16);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)18);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)19);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)20);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)21);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)22);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)23);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)24);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)25);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)26);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)27);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)28);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)29);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)30);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)31);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)32);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)33);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)34);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)35);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)38);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)39);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)40);

            migrationBuilder.DeleteData(
                table: "licenses",
                keyColumn: "Id",
                keyValue: (short)43);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)1);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)2);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)3);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)4);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)6);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)7);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)8);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)9);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)10);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)11);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)12);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)13);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)14);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)15);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)16);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)17);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)18);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)19);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)20);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)21);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)23);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)24);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)25);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)26);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)27);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)28);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)29);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)30);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)31);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)32);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)33);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)34);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)35);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)36);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)37);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)38);

            migrationBuilder.DeleteData(
                table: "syntaxes",
                keyColumn: "Id",
                keyValue: (short)41);
        }
    }
}
