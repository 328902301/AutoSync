# by yanel


[General]
# IPv6 支持
ipv6 = false
# 跳过某个域名或者IP段
skip-proxy = 192.168.0.0/16,172.16.0.0/12,127.0.0.0/8,100.64.0.0/10,17.0.0.0/8,10.0.0.0/8,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS 服务器，如果只在中国大陆境内使用，推荐删除 1.0.0.1 和 8.8.8.8
dns-server = system,1.0.0.1,8.8.8.8,114.114.114.114,119.29.29.29,223.5.5.5
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socket5-port = 7221
# 网络测试 URL
proxy-test-url = http://www.gstatic.com/generate_204
# > 测速超时 (s)
test-timeout = 5
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
interface-mode = auto
# 解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/backend/dist/sub-store-parser.loon.min.js
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger="default":rule,"cellular":rule,"ASUS":direct,"TPLINK":proxy 

[Proxy]
# 内置 DIRECT、REJECT 策略
# 内置 PROXY 指向本地节点或者订阅节点中的任何一个（有本地节点默认指向第一个本地节点，当没有本地节点但有订阅节点时，指向第一个订阅的第一个节点，本地节点和订阅节点都不存在时指向DIRECT）

#ss
#ss1 = Shadowsocks,example.com,443,aes-128-gcm,"password",fast-open=false,udp=true
#ss2 = Shadowsocks,example2.com,443,chacha20,"password",fast-open=true,udp=true
#ss+simple obfs
#ssObfs1 = Shadowsocks,example.com,80,aes-128-gcm,"password",obfs-name=http,obfs-host=www.micsoft.com,fast-open=true,udp=true
#ssObfs2 = Shadowsocks,example.com,443,aes-128-gcm,"password",obfs-name=tls,obfs-host=www.micsoft.com,fast-open=true,udp=true

#ssr
# 节点名称 = 协议，服务器地址，端口，加密方式，密码，obfs-name，{obfs-params}，protocol-name，{protocols-param}
#ssr1 = ShadowsocksR,example.com,443,aes-256-cfb,"password",orig,{},http_simple,{download.windows.com},fast-open=false,udp=true
#ssr2 = ShadowsocksR,example.com,10076,aes-128-cfb,"password",auth_chain_a,{9555:loon},http_post,{download.windows.com},fast-open=false,udp=true
#ssr3 = ShadowsocksR,example.com,10076,chacha20,"password",auth_aes128_md5,{9555:loon},tls1.2_ticket_auth,{download.windows.com},fast-open=false,udp=true
#ssr4 = ShadowsocksR,example.com,10076,chacha20-ietf,"password",auth_aes128_sha1,{9555:loon},plain,{},fast-open=false,udp=true

#http
#http1 = http,example.com,80
#http2 = http,example.com,80,username,"password"

#https
#https1 = https,example.com,443
#https2 = https,example.com,443,username,"password"
#https3 = https,example.com,443,username,"password",skip-cert-verify:true,tls-name:example.com

#vmess+tcp
# 节点名称 = 协议，服务器地址，端口，加密方式，UUID，传输方式:(tcp/ws),path：websocket握手header中的path，host：websocket握手header中的path，over-tls:是否tls，tls-name：tls名字，skip-cert-verify：是否跳过证书校验（默认否）
#vmess1 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+tcp+tls
#vmess2 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#vmess+ws
#vmess3 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+wss
#vmess4 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true

#trojan
#trojan1 = trojan,example.com,443,"password",skip-cert-verify:false,tls-name:example.com
#trojan2 = trojan,example.com,443,"password",skip-cert-verify:true,tls-name:example.com

[Remote Proxy]
# 订阅节点，格式：别名 = 订阅 URL
网易云 = https://raw.githubusercontent.com/nameking77/Qx/main/music/wyy.txt,parser-enable = true,udp=false,fast-open=false,vmess-aead=true
机场1 = 订阅链接,udp=false,fast-open=false,vmess-aead=true

[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# 根据自己机场及想用的节点进行删改，如想过滤 “香港 IPLC”，请修改 FilterKey 为 “.*香港 IPLC”
香港 = NameRegex, FilterKey = "(?i)(港|HK|Hong)"
台湾 = NameRegex, FilterKey = "(?i)(台|TW|Tai)"
日本 = NameRegex, FilterKey = "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"
韩国 = NameRegex, FilterKey = "(?i)(KR|Korea|KOR|首尔|韩|韓)"
美国 = NameRegex, FilterKey = "(?i)(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)"
新加坡 = NameRegex, FilterKey = "(?i)(新加坡|坡|狮城|SG|Singapore)"
网易解锁 = NameRegex, FilterKey = "(?i)(unblock|music|Music|云音乐|🎧)"

[Proxy Group]
# 节点选项
#PROXY = select,Auto,1,2,3,4,Subs
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 广告模式
#Advertising = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
#Final = select,PROXY,DIRECT
#自定义
手动切换 = select,优选节点,奈云,奇点,ikuuu,2046,crushs,牛油果,xstarts,移不动,快枪手,香港节点,台湾节点,日本节点,美国节点,新加坡节点,韩国节点,winx402,神奇19,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Select.png
优选节点 = url-test,奈云,奇点,ikuuu,2046,crushs,牛油果,xstarts,移不动,快枪手,url = http://www.gstatic.com/generate_204,interval = 84600,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Speedtest.png
国外网站 = select,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Streaming.png
国内网站 = select,DIRECT,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/StreamingSE.png
YouTube = select,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/YouTube.png
TioTok = select,手动切换,优选节点,日本节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/TikTok.png
Twitter = select,手动切换,优选节点,香港节点,台湾节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Twitter.png
Telegram = select,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Telegram.png
Instagram = select,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Instagram.png
Facebook = select,手动切换,优选节点,香港节点,台湾节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Facebook.png
NetEase Music = select,DIRECT,网易解锁,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/NetEase_Music.png
BiliBili = select,DIRECT,手动切换,优选节点,香港节点,台湾节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/BiliBili.png
Apple = select,DIRECT,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Apple.png
Google = select,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Google_Suite/Google.png
Microsoft = select,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Microsoft.png
漏网之鱼 = select,手动切换,优选节点,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Snapfish.png
AdBlock = select,REJECT,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Reject.png
香港节点 = url-test,香港,url = http://www.gstatic.com/generate_204,interval = 84600,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Hong_Kong.png
台湾节点 = url-test,台湾,url = http://www.gstatic.com/generate_204,interval = 84600,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Taiwan.png
狮城节点 = url-test,新加坡,url = http://www.gstatic.com/generate_204,interval = 84600,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Singapore.png
韩国节点 = url-test,韩国,url = http://www.gstatic.com/generate_204,interval = 84600,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/South_Korea.png
日本节点 = url-test,日本,url = http://www.gstatic.com/generate_204,interval = 84600,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Japan.png
美国节点 = url-test,url = http://www.gstatic.com/generate_204,interval = 84600,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/United_States.png

[Rule]
# 本地规则
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve
DOMAIN-KEYWORD,announce,DIRECT
DOMAIN-KEYWORD,torrent,DIRECT
DOMAIN-KEYWORD,tracker,DIRECT
DOMAIN-SUFFIX,smtp,DIRECT
URL-REGEX,(Subject|HELO|SMTP),DIRECT
DOMAIN-SUFFIX,local,DIRECT
IP-CIDR,10.0.0.0/8,DIRECT,no-resolve
IP-CIDR,17.0.0.0/8,DIRECT,no-resolve
IP-CIDR,100.64.0.0/10,DIRECT,no-resolve
IP-CIDR,127.0.0.0/8,DIRECT,no-resolve
IP-CIDR,172.16.0.0/12,DIRECT,no-resolve
IP-CIDR,192.168.0.0/16,DIRECT,no-resolve
GEOIP,CN,DIRECT
FINAL,漏网之鱼

[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/BiliBili/BiliBili.list, policy=BiliBili, tag=bilibili, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, policy=YouTube, tag=油管, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Facebook/Facebook.list, policy=Facebook, tag=脸书, parser-enable=true, enabled=true
https://raw.githubusercontent.com/Semporia/Quantumult-X/master/Filter/TikTok.list, policy=TioTok, tag=tiktok, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=Telegram, tag=电报, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Twitter/Twitter.list, policy=Twitter, tag=推特, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Instagram/Instagram.list, policy=Instagram, tag=ins, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=Apple, tag=苹果, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list, policy=Google, tag=谷歌, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Microsoft/Microsoft.list, policy=Microsoft, tag=微软, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/NetEaseMusic/NetEaseMusic.list, policy=NetEase Music, tag=网易云, parser-enable=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list, policy=国内网站, tag=国内, parser-enable=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Privacy.list, policy=AdBlock, tag=隐私, parser-enable=true, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/Surge/AdRule.list, policy=AdBlock, tag=开屏去广告, parser-enable=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/AdvertisingPlus.list, policy=AdBlock, tag=去广告精简, parser-enable=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list, policy=AdBlock, tag=去广告, parser-enable=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Hijacking.list, policy=AdBlock, tag=运营拦截, parser-enable=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list, policy=国外网站, tag=国外, parser-enable=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list, policy=国内网站, tag=国内, parser-enable=true, enabled=true
# 订阅规则、策略
# PROXY
#https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list,policy=PROXY,enabled=false

[Rewrite]
# 重写规则
enable = true
# Redirect Google Search Service
#^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)

[Host]
# 可以指定以下四种模式：
# 1. 指定域名使用对应的IP地址
# 2. 将域名指向另一个域名
# 3. 指定域名请求 DNS 时使用特定的 DNS 服务器，格式如下：
## google.com = server:8.8.8.8
## *.baidu.com = server:https://example.com/dns-query
## *.testflight.apple.com = server:8.8.4.4
# 4. 指定具体的 SSID 环境下使用特定的 DNS 服务器，格式如下：
## ssid:Stick = server:system
*.taobao.com = server:223.5.5.5
*.tmall.com = server:223.5.5.5
*.alipay.com = server:223.5.5.5
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.jd.com = server:119.28.28.28
*.qq.com = server:119.28.28.28
*.tencent.com = server:119.28.28.28
*.weixin.com = server:119.28.28.28
hdslb.com = server:119.29.29.29
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29

[Script]
enable = true
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本
# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true
# 解析
http-response ^https?:\/\/(raw|gist)\.githubusercontent.com/.*\.js$ script-path=https://raw.githubusercontent.com/Peng-YM/ScriptConverter/master/js-converter.js, requires-body=true, timeout=10, tag=js-converter.js


[Plugin]
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true
https://raw.githubusercontent.com/luxysiv/Blockads/master/iOS/youtubeads.plugin, policy=REJECT, tag=youtube去广告, enabled=true
https://raw.githubusercontent.com/Semporia/TikTok-Unlock/master/Loon/TikTokTW.plugin, policy=TioTok, tag=TikTokTW, enabled=true
https://raw.githubusercontent.com/DualSubs/DualSubs/main/plugin/DualSubs.YouTube.plugin, policy=YouTube, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=手动切换, tag=BoxJs, enabled=true
https://raw.githubusercontent.com/Peng-YM/Loon-Gallery/master/loon-gallery.plugin, policy=手动切换, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Block/YouTubeAds.plugin, policy=REJECT, tag=YouTube去广告, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Block/Bilibili.plugin, policy=REJECT, tag=Bilibili 去广告, enabled=true
https://raw.githubusercontent.com/GeQ1an/Rules/master/Loon/Rewrite/Rewrite.plugin, policy=REJECT, tag=Stick Rules for Rewrite, enabled=true

[MITM]
# 请在正式使用前将其他已信任证书的 P12 及密码填入下方，并删掉 ca-p12 和 ca-passphrase 前的井号
# 或者前往设置界面生成、安装并信任新证书
hostname = setting.youtube.com:443,%APPEND%,*.youtube.com, raw.githubusercontent.com, gist.githubusercontent.com
enable = true
skip-server-cert-verify = true
