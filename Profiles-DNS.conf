# —————————————————————————————————————
// 以 “;” 或 “#” 或 “//” 开头的行为注释行。
// ⚠️注意⚠️: 以下内容中，带“//” “#” “;”的都是注释符号，去掉前面的符号，该行才有效
# —————————————————————————————————————
# 在「其他设置」里「GeoLite2」的「来源」填写使用下面链接，并开启「自动更新」
# https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb



[general]
//general 模块内为一些通用的设置参数项
# —————————————————————————————————————
# Quantumult X 会对 server_check_url 指定的网址进行相应测试，以确认节点的可用性
# 你同样可以在 server_local/remote 中，为节点、订阅单独指定server_check_url参数
# 如您为节点单独指定了 url，则所有相关延迟测试中，均会采用此 url 地址
# 用于节点延迟测试
network_check_url = http://www.gstatic.com/generate_204
server_check_url= http://www.gstatic.com/generate_204

# 服务器测试超时时间 (毫秒)
# 节点延迟测试超时参数，需小于 5000 毫秒才生效
server_check_timeout = 2000

# —————————————————————————————————————
# 用于设置图标显示
profile_img_url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/Softly.png

# —————————————————————————————————————
# 用于Check节点IP地址(以下geo_location_checker任选一个即可)
geo_location_checker=disabled

# 优化本地Geo检查器
# 使用方式：
# 编辑配置，[general]下替换掉geo_location_checker= 所在行代码
# 显示中文：
;geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/I-am-R-E/Functional-Store-Hub/Master/GeoLocationChecker/QuantumultX/IP-API.js
# 显示英文：
# geo_location_checker=http://ip-api.com/json/, https://raw.githubusercontent.com/I-am-R-E/Functional-Store-Hub/Master/GeoLocationChecker/QuantumultX/IP-API.js
# 点击任意节点左上角会出现：
# [国旗] [地区] [时区] [ASN] [IP]
# 长按节点，点击 查询节点信息 弹出更多节点信息内容
# 脚本特点：
# 优化左上角显示内容：只显示中文、去除重复信息、添加构造出的国旗、去除接口返回过于复杂的regionName、繁体转换为简体
# 优化面板信息：同上且优化了排版，保留有价值的内容

# 默认配置
# geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js

# 备用配置
# geo_location_checker=http://api.live.bilibili.com/ip_service/v1/ip_service/get_ip_addr? , https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/IP_bili_cn.js
# geo_location_checker=http://ifconfig.co/json, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IPConfig.js
# geo_location_checker= http://extreme-ip-lookup.com/json/, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IPCheck.js
# geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/I-am-R-E/Functional-Store-Hub/Master/GeoLocationChecker/QuantumultX/IP-API.js

# —————————————————————————————————————
# 资源解析器，自定义各类远程资源的转换、如节点、规则、filter、复写、rewrite等
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js

# —————————————————————————————————————
# 下列表中内容将不经过QuantumultX的处理
excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32

# —————————————————————————————————————
# UDP 白名单，留空则默认所有为端口。不在udp白名单列表中的端口，将被丢弃处理（返回 ICMP  “端口不可达” 信息）。
udp_whitelist=1-442, 444-65535

# —————————————————————————————————————
# 运行模式模块，running_mode_trigger 设置，即根据网络自动切换 分流/直连/全局代理 等模式。
;running-mode-trigger 模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活。
# running_mode_trigger=filter, filter, asus-5g:all_direct, asus:all_proxy
; 上述写法，前两个 filter 先后表示 在 [数据蜂窝网络] 跟 [一般 Wi-Fi] 下，走 filter(分流)模式，后面则表示在 asus-5g 下切换为全局直连[all_direct]，asus 切换为全局代理[all_proxy]
; 如需使用，相应 SSID 换成你自己 Wi-Fi 名即可

;ssid_suspended_list，让 Quantumult X 在特定 Wi-Fi 网络下暂停工作(仅 task 模块会继续工作)，多个Wi-Fi用“,”连接
;ssid_suspended_list=Asus, Shawn-Wifi

# —————————————————————————————————————
# dns_exclusion_list中的域名将不使用fake-ip方式, 多个域名用“, ”连接。其它域名则全部采用 fake-ip及远程解析的模式
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com

[dns]
prefer-doh3
# > Modify Contents
# Firebase Cloud Messaging
address = /talk.google.com/108.177.125.188
address = /mtalk.google.com/108.177.125.188
address = /alt1-mtalk.google.com/3.3.3.3
address = /alt2-mtalk.google.com/3.3.3.3
address = /alt3-mtalk.google.com/74.125.200.188
address = /alt4-mtalk.google.com/74.125.200.188
address = /alt5-mtalk.google.com/3.3.3.3
address = /alt6-mtalk.google.com/3.3.3.3
address = /alt7-mtalk.google.com/74.125.200.188
address = /alt8-mtalk.google.com/3.3.3.3
# Google CDN
doh-server = /blog.google/https://doh.pub/dns-query
doh-server = /googletraveladservices.com/https://doh.pub/dns-query
doh-server = /dl.google.com/https://doh.pub/dns-query
doh-server = /dl.l.google.com/https://doh.pub/dns-query
doh-server = /clientservices.googleapis.com/https://doh.pub/dns-query
doh-server = /update.googleapis.com/https://doh.pub/dns-query
doh-server = /translate.googleapis.com/https://doh.pub/dns-query
doh-server = /fonts.googleapis.com/https://doh.pub/dns-query
doh-server = /fonts.gstatic.com/https://doh.pub/dns-query

# > Router Admin Panel
# Ubiquiti Unifi Network App
server = /*.id.ui.direct/system
# Ubiquiti Unifi Portal
# server = /unifi.ui.com/system
# Ubiquiti Unifi OS
server = /unifi.local/system
# Ubiquiti Unifi Controller
# server = /network.unifi.ui.com/system
# Ubiquiti Amplifi Router
server = /amplifi.lan/system
# Synology Router
server = /router.synology.com/system
# Razer Sila Router
server = /sila.razer.com/system
# Asus Router
server = /router.asus.com/system
# Netgear Router
server = /routerlogin.net/system
# Netgear Obri Router
server = /orbilogin.com/system
# Linksys Router
server = /www.LinksysSmartWiFi.com/system
server = /LinksysSmartWiFi.com/system
server = /myrouter.local/system
# Aurba Router
server = /instant.arubanetworks.com/system
server = /setmeup.arubanetworks.com/system
# 小米 Mi WiFi Router
server = /www.miwifi.com/system
server = /miwifi.com/system
# 华为 Huawei Router
server = /mediarouter.home/system
# TP-Link Router
server = /tplogin.cn/system
server = /tplinklogin.net/system
server = /tplinkwifi.net/system
# 水星 MERCURY Router
server = /melogin.cn/system
# 迅捷 FAST Router
server = /falogin.cn/system
# 腾达 Tenda Router
server = /tendawifi.com/system
# 磊科 Netcore Router
server = /leike.cc/system
# 中兴 ZTE Router
server = /zte.home/system
# 斐讯 PHICOMM Router
server = /p.to/system
server = /phicomm.me/system
# 极路由 HiWiFi Router
server = /hiwifi.com/system
# 迅雷路由
server = /peiluyou.com/system

# > Apple
doh-server = /networking.apple/https://doh.dns.apple.com/dns-query
# Apple.com
# doh-server = /*.apple.com/https://doh.dns.apple.com/dns-query
# iCloud.com
doh-server = /*.icloud.com/https://doh.dns.apple.com/dns-query

# > Alphabet
doh-server = /*.google/https://dns.google/dns-query
doh-server = /*.google.com/https://dns.google/dns-query
doh-server = /*.google.com.??/https://dns.google/dns-query
# Google sites
# doh-server = /*.goog/https://dns.google/dns-query
# Google 静态资源
doh-server = /*.gstatic.com/https://dns.google/dns-query
# Google Photos
doh-server = /*.ggpht.com/https://dns.google/dns-query
# Google 用户上传数据
doh-server = /*.googleusercontent.com/https://dns.google/dns-query
# Google APIs
# doh-server = /*.googleapis.com/https://dns.google/dns-query
# Google backbone
doh-server = /*.1e100.net/https://dns.google/dns-query
# Youtube sites
doh-server = /*.youtube/https://dns.google/dns-query
# Youtube
doh-server = /*.youtube.com/https://dns.google/dns-query
# Youtube 图片
doh-server = /*.ytimg.com/https://dns.google/dns-query
# Youtube Video
doh-server = /*.googlevideo.com/https://dns.google/dns-query
# Google Video Thumbnails
doh-server = /*.gvt?.com/https://dns.google/dns-query
# reCaptcha
doh-server = /*.recaptcha.net/https://dns.google/dns-query
# Gmail
doh-server = /*.gmail.com/https://dns.google/dns-query
# Google Source
doh-server = /*.googlesource.com/https://dns.google/dns-query
# Google AD Services
doh-server = /*.googleadservices.com/https://dns.google/dns-query
# DoubleClick
doh-server = /*.doubleclick.net/https://dns.google/dns-query
# AdSense
doh-server = /*.adsense.com/https://dns.google/dns-query
# AdSense Custom Search Ads
doh-server = /*.adsensecustomsearchads.com/https://dns.google/dns-query
# AdSense for mobile apps
doh-server = /*.adsenseformobileapps.com/https://dns.google/dns-query
# Google shortened URLs
doh-server = /*.gle/https://dns.google/dns-query
# Google URL Shortener
doh-server = /goo.gl/https://dns.google/dns-query

# > Cloudflare
doh-server = /*.cloudflare.com/https://cloudflare-dns.com/dns-query
# Cloudflare Stream
doh-server = /*.cloudflarestream.com/https://cloudflare-dns.com/dns-query
# Cloudflare Client
doh-server = /*.cloudflareclient.com/https://cloudflare-dns.com/dns-query
# Cloudflare Web Analytics
doh-server = /*.cloudflareinsights.com/https://cloudflare-dns.com/dns-query
# Cloudflare 1.1.1.1
doh-server = /*.every1dns.net/https://cloudflare-dns.com/dns-query
# Cloudflare SSL Certificate
# doh-server = /*.cloudflaressl.com/https://cloudflare-dns.com/dns-query
# Cloudflare DNS
doh-server = /*.cloudflare-dns.com/https://cloudflare-dns.com/dns-query
# CloudFlare Workers
doh-server = /*.workers.dev/https://cloudflare-dns.com/dns-query

# > 阿里巴巴
doh-server = /*.alibaba.cn/https://dns.alidns.com/dns-query
doh-server = /*.alibaba.com.cn/https://dns.alidns.com/dns-query
# Alibaba 中国
doh-server = /*.china.alibaba.com/https://dns.alidns.com/dns-query
# 1688
doh-server = /*.1688.com/https://dns.alidns.com/dns-query
# 淘宝
doh-server = /*.taobao.com/https://dns.alidns.com/dns-query
# 淘宝 缓存
doh-server = /*.tbcache.com/https://dns.alidns.com/dns-query
# 天猫
doh-server = /*.tmall.com/https://dns.alidns.com/dns-query
# 阿里 CDN
doh-server = /*.alicdn.com/https://dns.alidns.com/dns-query
# 阿里云盘
doh-server = /*.aliyundrive.com/https://dns.alidns.com/dns-query
# 阿里云
doh-server = /*.aliyun.*/https://dns.alidns.com/dns-query
# 阿里云 CDN
doh-server = /*.aliyuncdn.*/https://dns.alidns.com/dns-query
# 阿里云 DDoS防护
doh-server = /*.aliyunddos????.com/https://dns.alidns.com/dns-query
# 阿里云API服务
doh-server = /*.aliyuncs.com/https://dns.alidns.com/dns-query
# 阿里云Web应用防火墙
doh-server = /*.aliyundunwaf.com/https://dns.alidns.com/dns-query
# 云引擎应用平台
doh-server = /*.aliapp.com/https://dns.alidns.com/dns-query
# 上云平台
doh-server = /*.aliapp.org/https://dns.alidns.com/dns-query
# 阿里用户上传资料
doh-server = /*.alibabausercontent.com/https://dns.alidns.com/dns-query
# mmstat 数据统计 广告追踪
doh-server = /*.mmstat.com/https://dns.alidns.com/dns-query
# 淘宝短网址
doh-server = /tb.cn/https://dns.alidns.com/dns-query

# > 蚂蚁集团
doh-server = /*.alipay.com/https://dns.alidns.com/dns-query
doh-server = /*.alipay.com.cn/https://dns.alidns.com/dns-query
# 支付宝 HTTP DNS
doh-server = /*.alipaydns.com/https://dns.alidns.com/dns-query
# 支付宝 商家资源
doh-server = /*.alipayeshop.com/https://dns.alidns.com/dns-query
# 支付宝 Mdap
doh-server = /*.alipaylog.com/https://dns.alidns.com/dns-query
# 支付宝 静态资源
doh-server = /*.alipayobjects.com/https://dns.alidns.com/dns-query
# 支付宝 开放技术生态体系
doh-server = /*.alipay-eco.com/https://dns.alidns.com/dns-query

# > 腾讯
doh-server = /*.tencent.com/https://doh.pub/dns-query
# 腾讯云
doh-server = /*.qcloud.com/https://doh.pub/dns-query
# 腾讯云CDN
doh-server = /*.qcloudcdn.cn/https://doh.pub/dns-query
doh-server = /*.qcloudcdn.com/https://doh.pub/dns-query
# 腾讯云对象储存
doh-server = /*.qcloudcos.com/https://doh.pub/dns-query
# 腾讯云静态资源
doh-server = /*.qcloudimg.com/https://doh.pub/dns-query
# 腾讯云超级管家
doh-server = /*.qcloudcjgj.com/https://doh.pub/dns-query
# 腾讯云网站管家
doh-server = /*.qcloudwzgj.com/https://doh.pub/dns-query
# 腾讯云主页管家
doh-server = /*.qcloudzygj.com/https://doh.pub/dns-query
# 腾讯开放云
doh-server = /*.myqcloud.com/https://doh.pub/dns-query
# 腾讯云
doh-server = /*.tencent-cloud.net/https://doh.pub/dns-query
# 腾讯云aiot解决方案
doh-server = /*.tencentcloud-aiot.com/https://doh.pub/dns-query
# 腾讯云API
doh-server = /*.tencentcloudapi.com/https://doh.pub/dns-query
# 腾讯云容器镜像服务TCR
doh-server = /*.tencentcloudcr.com/https://doh.pub/dns-query
# 腾讯云云市场
doh-server = /*.tencentcloudmarket.com/https://doh.pub/dns-query
# QQ
doh-server = /*.qq.com/https://doh.pub/dns-query
# 腾讯头像
doh-server = /*.qlogo.cn/https://doh.pub/dns-query
# 腾讯图片
doh-server = /*.qpic.cn/https://doh.pub/dns-query
# 微信
doh-server = /*.weixin.qq.com/https://doh.pub/dns-query
doh-server = /*.wx.qq.com/https://doh.pub/dns-query
doh-server = /*.weixin.com/https://doh.pub/dns-query
# 微信公众平台
doh-server = /*.weixinbridge.com/https://doh.pub/dns-query
# WeChat
doh-server = /*.wechat.com/https://doh.pub/dns-query
# 微信小程序
doh-server = /*.servicewechat.com/https://doh.pub/dns-query
# 微云
doh-server = /*.weiyun.com/https://doh.pub/dns-query
# 腾讯 图片 静态资源
doh-server = /*.gtimg.cn/https://doh.pub/dns-query
doh-server = /*.idqqimg.com/https://doh.pub/dns-query
# 腾讯 静态资源 CDN
doh-server = /*.cdn-go.cn/https://doh.pub/dns-query
# 腾讯云 智能云解析DNS
doh-server = /*.smtcdns.com/https://doh.pub/dns-query
doh-server = /*.smtcdns.net/https://doh.pub/dns-query
# 腾讯短网址
doh-server = /url.cn/https://doh.pub/dns-query

# > 百度
server = /*.baidu/180.76.76.76
server = /*.baidu.com/180.76.76.76
# 百度 静态资源
server = /*.bdimg.com/180.76.76.76
server = /*.bdstatic.com/180.76.76.76
# 百度网盘
server = /*.baidupcs.*/180.76.76.76
# 百度云CDN
server = /*.baiduyuncdn.*/180.76.76.76
# 百度云DNS
server = /*.baiduyundns.*/180.76.76.76
# 百度云 DNS
server = /*.bdydns.*/180.76.76.76
# 百度云 CDN
server = /*.bdycdn.*/180.76.76.76
# 百度云 域名
server = /*.bdysite.com/180.76.76.76
server = /*.bdysites.com/180.76.76.76
# 百度智能云
server = /*.baidubce.*/180.76.76.76
# 百度智能云 DNS
server = /*.bcedns.*/180.76.76.76
# 百度智能云 对象存储BOS
server = /*.bcebos.com/180.76.76.76
# 百度智能云 播放器服务
server = /*.bcevod.com/180.76.76.76
# 百度智能云 图片服务
server = /*.bceimg.com/180.76.76.76
# 百度智能云 主机
server = /*.bcehost.com/180.76.76.76
server = /*.bcehosts.com/180.76.76.76
# 百度短网址
server = /dwz.cn/180.76.76.76

# > 360
# 360安全中心
doh-server = /*.360.cn/https://doh.360.cn/dns-query
# 360安全卫士
doh-server = /*.360safe.com/https://doh.360.cn/dns-query
# 360快资讯
doh-server = /*.360kuai.com/https://doh.360.cn/dns-query
# 360搜索
doh-server = /*.so.com/https://doh.360.cn/dns-query
# 360网页快照服务
doh-server = /*.360webcache.com/https://doh.360.cn/dns-query
# 奇虎api
doh-server = /*.qihuapi.com/https://doh.360.cn/dns-query
# 360图床
doh-server = /*.qhimg.com/https://doh.360.cn/dns-query
doh-server = /*.qhimgs.com/https://doh.360.cn/dns-query
doh-server = /*.qhimgs?.com/https://doh.360.cn/dns-query
# 360
doh-server = /*.qhmsg.com/https://doh.360.cn/dns-query
# 奇虎静态资源
doh-server = /*.qhres.com/https://doh.360.cn/dns-query
doh-server = /*.qhres?.com/https://doh.360.cn/dns-query
# 导航静态文件
doh-server = /*.dhrest.com/https://doh.360.cn/dns-query
# 360
doh-server = /*.qhupdate.com/https://doh.360.cn/dns-query
# 360安全云盘
doh-server = /*.yunpan.cn/https://doh.360.cn/dns-query
doh-server = /*.yunpan.com.cn/https://doh.360.cn/dns-query
doh-server = /*.yunpan.com/https://doh.360.cn/dns-query
# 360短网址
doh-server = /urlqh.cn/https://doh.360.cn/dns-query

# > BiliBili
server = /*.bilibili.com/system
# BiliBili API
server = /*.biliapi.com/system
server = /*.biliapi.net/system
# BiliBili CDN
server = /*.bilicdn?.com/system
# BiliBili 静态资源
server = /*.hdslb.com/system
server = /*.hdslb.net/system
# BiliBili 视频
server = /cn-hk-eq-bcache-??.bilivideo.com/system
# BiliBili upos视频服务器（akamai）
server = /upos-hz-mirrorakam.akamaized.net/system
# BiliBili upos视频服务器（asia-abroad.com）
server = /upos-sz-mirrorasiaov.bilibilivideo.com/system
# BiliBili upos视频服务器（阿里云）
doh-server = /upos-sz-mirrorali.bilivideo.com/https://dns.alidns.com/dns-query
doh-server = /upos-sz-mirrorali?.bilivideo.com/https://dns.alidns.com/dns-query
doh-server = /upos-sz-mirrorali??.bilivideo.com/https://dns.alidns.com/dns-query
# BiliBili upos视频服务器（百度云）
server = /upos-sz-mirrorbos.bilivideo.com/180.76.76.76
# BiliBili upos视频服务器（腾讯云）
doh-server = /upos-sz-mirrorcos.bilivideo.com/https://doh.pub/dns-query
doh-server = /upos-sz-mirrorcos?.bilivideo.com/https://doh.pub/dns-query
doh-server = /upos-sz-mirrorcos??.bilivideo.com/https://doh.pub/dns-query
# BiliBili upos视频服务器（华为云）
server = /upos-sz-mirrorhw.bilivideo.com/system
server = /upos-sz-mirrorhw?.bilivideo.com/system
# BiliBili upos视频服务器（金山云）
server = /upos-sz-mirrorks3.bilivideo.com/system
server = /upos-sz-mirrorks3?.bilivideo.com/system
# BiliBili upos视频服务器（七牛云）
server = /upos-sz-mirrorkodo.bilivideo.com/system
server = /upos-sz-mirrorkodo?.bilivideo.com/system
# BiliBili upos视频服务器（网宿）
server = /upos-sz-mirrorwcs.bilivideo.com/system
server = /upos-sz-mirrorwcs?.bilivideo.com/system
# BiliBili upos视频服务器（迅雷）
server = /upos-sz-mirrorxycdn.bilivideo.com/system
# BiliBili upos视频服务器（百度云）
server = /upos-sz-upcdnbd??.bilivideo.com/180.76.76.76
# BiliBili upos视频服务器
server = /upos-sz-upcdnhw.bilivideo.com/system
# BiliBili upos视频服务器（腾讯云）
doh-server = /upos-sz-upcdntx.bilivideo.com/https://doh.pub/dns-query
# BiliBili upos视频服务器
server = /upos-sz-upcdnws.bilivideo.com/system
server = /upos-tf-all-js.bilivideo.com/system
# BiliBili mCDN视频服务器
server = /*.mcdn.bilivideo.com/system
# BiliBili 视频
server = /*.bilivideo.com/system
server = /*.bilivideo.cn/system
# BiliBili短网址
server = /acg.tv/system

# > 京东
server = /*.jd.com/system
# 京东 静态资源
server = /*.360buyimg.com/system
# 京东云
server = /*.jdcloud.com/system
# 京东云 缓存和存储
server = /*.jcloudstatic.com/system
# 京东云 静态资源
server = /*.jcloudstatic.net/system
# 京东云 全局负载均衡
server = /*.jdgslb.com/system
# 京东短网址
server = /3.cn/system

# > iQDNS
doh-server = /*.iqdns.xyz/https://a.passcloud.xyz/dns-query
doh-server = /*.iqdnsio.co/https://a.passcloud.xyz/dns-query
doh-server = /*.iqiq.io/https://a.passcloud.xyz/dns-query
doh-server = /*.passcloud.xyz/https://a.passcloud.xyz/dns-query
# iQZone
doh-server = /uuu.glass/https://a.passcloud.xyz/dns-query
doh-server = /*.uuu.glass/https://a.passcloud.xyz/dns-query
doh-server = /*.uuuglass.co/https://a.passcloud.xyz/dns-query
doh-server = /*.leoddns.cn/https://a.passcloud.xyz/dns-query
doh-server = /*.gov-ddns.cn/https://a.passcloud.xyz/dns-query
doh-server = /*.daliddns.cn/https://a.passcloud.xyz/dns-query
doh-server = /*.xn--mes98khzje07c.xyz/https://a.passcloud.xyz/dns-query
doh-server = /*.9218561.xyz/https://a.passcloud.xyz/dns-query
doh-server = /*.211129.xyz/https://a.passcloud.xyz/dns-query
doh-server = /*.gia.wiki/https://a.passcloud.xyz/dns-query
doh-server = /*.checkmails.xyz/https://a.passcloud.xyz/dns-query
doh-server = /*.iqyun.zone/https://a.passcloud.xyz/dns-query
doh-server = /*.ddns-pop.cyou/https://a.passcloud.xyz/dns-query

# > 🇨🇳 CN
# CNNIC SDNS
# 中国政府网
# server = /*.gov.cn/1.2.4.8
# server = /*.政务/1.2.4.8

# > 🇭🇰 HK
# PCCW Enterprises Limited
# server = /*.pccw.com/dns1.pccw.com
# 1O1O
# server = /*.1010.com.hk/dns1.pccw.com
# csl.
# server = /*.hkcsl.com/dns1.pccw.com
# The CLUB by HKT
# server = /*.theclub.com.hk/dns1.pccw.com
# now.com
# server = /*.now.com/dns2.pccw.com
# Now E
# server = /*.nowe.com/dns2.pccw.com
# Now TV
# server = /*.now-tv.com/dns2.pccw.com
# MOOV
# server = /*.moov.hk/dns3.pccw.com
# viu
# server = /*.viu.com/dns3.pccw.com
# viu tv
# server = /*.viu.tv/dns3.pccw.com
# Hong Kong Cable Television Limited
# server = /*.hkcable.com.hk/dns1.hkcable.com.hk
# i-CABLE
# server = /*.i-cable.com/dns2.hkcable.com.hk
# CABLE TV Service
# server = /*.cabletv.com.hk/dns2.hkcable.com.hk
# KDDI Hong Kong Limited
# server = /*.hk.kddi.com/apple.kdd.net.hk

# > 🇹🇼 TW
# 中华电信
doh-server = /*.cht.com.tw/https://dns.hinet.net/dns-query
# 中华电信HiNet
doh-server = /*.hinet.net/https://dns.hinet.net/dns-query
# 中华电信emome
doh-server = /*.emome.net/https://dns.hinet.net/dns-query
# So-net Entertainment Taiwan
# server = /*.so-net.net.tw/ns1.so-net.net.tw
# server = /*.so-net.tw/ns1.so-net.net.tw
# Taiwan Network Information Center
doh-server = /*.tw/https://dns.twnic.tw/dns-query
doh-server = /*.taipei/https://dns.twnic.tw/dns-query

# > 🇺🇸 US
# Hurricane Electric
doh-server = /*.he.net/https://ordns.he.net/dns-query



[policy]
// 策略组
// 用于分发分流规则传递过来的网络请求
# direct直连, proxy代理, reject拒绝
# static静态策略，按照设置选择节点
# available第一个节点不可用时往下检测到可用节点
# round-robin会从第一个到最后一个顺序使用节点
# dest-hash相同域名走相同节点，最大程度保证你访问同样的网站使用同样的节点
# url-latency-benchmark选用延迟最低节点
# —————————————————————————————————————
#server-tag-regex 以及 resource-tag-regex 参数用于正则筛选来建立策略组
#具体可参见教程部分: https://shrtm.nu/DAFP
# —————————————————————————————————————
#以下是quantumultX的3普通种策略组类型写法，也可以用正则参数 server-tag-regex 或者 resource-tag-regex 来筛选
;static=policy-name-1, Sample-A, Sample-B, Sample-C
;available=policy-name-2, Sample-A, Sample-B, Sample-C
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C
;url-latency-benchmark=policy-name-4, Sample-A, Sample-B, Sample-C
;dest-hash=policy-name-5, Sample-A, Sample-B, Sample-C
#下面是ssid策略组示范
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C
# —————————————————————————————————————
# "tag" 跟 "enabled" 为可选参数，分别表示 “标签”及“开启状态”, true 为开启，false 关闭.
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;
# —————————————————————————————————————
# SpeedTest
static=SpeedTest, direct, proxy, reject, 手动选择, 延迟最低, 节点可用, 负载均衡, 香港节点, 日本节点, 美国节点, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/icon/wukong.png
# 节点策略，选择区域节点
static=节点策略, direct, proxy, reject, 延迟最低, 节点可用, 负载均衡, 香港节点, 日本节点, 美国节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Rocket.png
# 节点可用 会选择第一个可用节点
available=节点可用, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Available.png
# 负载均衡,会从第一个到最后一个顺序使用节点
round-robin=负载分担, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png
# 负载均衡,相同域名走相同节点
dest-hash=负载均衡, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Touhou.png
# 延迟最低,自动选择延迟最低的节点
url-latency-benchmark=延迟最低, server-tag-regex=^((?!(网易|网易云|网易云音乐|音乐|云音乐|加群|套餐|重置|分享|网址|邀请|公众号|Netease|Music|𝐌𝐮𝐬𝐢𝐜|Unbolck|music|🎵|🎶|🎧)).)*$, check-interval=600, tolerance=100, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png
# 节点按照国家分类
# url-latency-benchmark=国内线路, server-tag-regex=(?=.*(中国|国内|大陆|CH|CN|ch|cn|🇨🇳|(?i)China))^((?!(香|台|澳|日|韩|新|美|迪|🇭🇰|🇰🇷|🏴‍☠️)).)*$, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/CN.png
url-latency-benchmark=香港节点, server-tag-regex=(?=.*(港|HK|🇭🇰|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
url-latency-benchmark=日本节点, server-tag-regex=(?=.*(日|JP|🇯🇵|(?i)Japan))^((?!(港|台|韩|新|美|利亚)).)*$, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
url-latency-benchmark=美国节点, server-tag-regex=(?=.*(美|US|🇺🇸|(?i)States|American))^((?!(港|台|日|韩|新)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
url-latency-benchmark=台湾节点, server-tag-regex=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
url-latency-benchmark=狮城节点, server-tag-regex=(?=.*(新|狮|獅|SG|🇸🇬|(?i)Singapore))^((?!(港|台|日|韩|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
url-latency-benchmark=越南节点, server-tag-regex=(?=.*(越|VN|(?i) Việt Nam|Hà|Hồ|🇻🇳))^((?!(台|日|韩|新|美)).)*$, check-interval=600, tolerance=0, alive-checking=false, img-url= https://raw.githubusercontent.com/Orz-3/mini/master/Color/VN.png
url-latency-benchmark=国际节点, server-tag-regex=(?=.*)^((?!(港|HK|日|JP|台|TW|越|VN|新|SG|美|US|🇨🇳|🇭🇰|🇺🇸|🇯🇵|🇻🇳|🇸🇬)).)*$, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/UN.png
# 手动选择
static=手动选择, server-tag-regex=^((?!网易).)*$, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available_1.png
# 广告拦截 拦截广告
static=广告拦截, direct, reject, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png
# TikTok
static=TikTok换区, 节点策略, 延迟最低, 手动选择, 香港节点, 日本节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png
# 国际社交 Telegram Twitter TikTok
static=国际社交, 节点策略, 手动选择, 香港节点, 日本节点, 美国节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png
# 国际媒体 Youtube
static=国际媒体, 节点策略, 手动选择, 香港节点, 日本节点, 美国节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
# 全球加速 加速全球
static=全球加速, 节点策略, 香港节点, 日本节点, 美国节点, img-url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/img/dragonball/1.PNG
# Apple服务 苹果相关选择直连
static=Apple服务, direct, 节点策略, 香港节点, 日本节点, 美国节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png
# 国内服务 国内网站
static=国内服务, direct, 节点策略, 香港节点, 日本节点, 美国节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png
# 不在上述规则中(远程以及本地)的剩余请求，将走final 指定的节点/策略，这里即是 → 黑白名单, 请根据自己的需求来选择直连或节点、策略
static=黑白名单, direct, 节点策略, 手动选择, 香港节点, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png



[server_local]





[server_remote]


https://raw.githubusercontent.com/gjwj666/jichang/main/Telescope, tag=test, update-interval=172800, opt-parser=true, enabled=true

# —————————————————————————————————————
#远程服务器订阅模块，可直接订阅SSR，SS链接，以及Quantumult X格式的vmess/trojan/https订阅
#其它格式可用 opt-parser 参数开启解析器导入使用
#支持本地/iCloud的节点文件/片段，位于Quantumult X/Profiles路径下


[filter_local]

# Siri搜索建议
host,lookup-api.apple.com.edgekey.net,节点策略
host,e16991.b.akamaiedge.net,节点策略
# 银行
host-suffix, 95599.cn, 国内服务
host-suffix, abchina.com, 国内服务
host-suffix, bscabank.com, 国内服务
host-suffix, openaboc.cn, 国内服务
host-suffix, openaboc.com, 国内服务
host-suffix, openaboc.com.cn, 国内服务
# local
ip-cidr, 10.0.0.0/8, 国内服务
ip-cidr, 127.0.0.0/8, 国内服务
ip-cidr, 172.16.0.0/12, 国内服务
ip-cidr, 192.168.0.0/16, 国内服务
ip-cidr, 224.0.0.0/24, 国内服务
ip-cidr, 182.254.116.0/24, 国内服务
ip6-cidr, fe80::/10, 国内服务

# GeoIP China
geoip, cn, 国内服务
# 不在上述规则中(远程以及本地)的剩余请求，将走final 指定的节点/策略，这里即是 → 黑白名单, 请根据自己的需求来选择直连或节点、策略
final, 黑白名单
# —————————————————————————————————————
# 本地分流规则(相同规则下，本地规则将覆盖远程规则，优先生效)
# HOST等同于DOMAIN ：匹配请求的域名
;例如：HOST，instagram.com，Proxy 匹配instagram.com的域名，走代理。
# HOST-SUFFIX 等同于 DOMAIN-SUFFIX ：匹配请求的域名后缀
;例如：HOST-SUFFIX，image.instagram.com，Proxy 匹配域名后缀为：image.instagram.com的域名，走代理。
# HOST-KEYWORD 等同于 DOMAIN-KEYWORD：匹配域名中包含的关键字。
;例如：DOMAIN-KEYWORD， instagram， Proxy 匹配包含 instagram 关键词的域名，走代理。
# IP-CIDR：匹配处在给定域内的 IP。
;例如 IP-CIDR， 17.0.0.0/8， Proxy 匹配IP域17.0.0.0/8 走代理。
# GEOIP： 匹配给定地理区域内的 IP。
;例如 GEOIP， CN， DIRECT 匹配中国IP走直连。
# USER-AGENT：特殊字符串头匹配（可以理解为应用名）。
;例如：USER-AGENT，QQ*，DIRETC 匹配应用名包含QQ关键字的应用，走直连。
//ipv6 规则
;ip6-cidr, 2001:4860:4860::8888/32, direct
//强制分流走蜂窝网络
;host-suffix, googleapis.com, proxy, force-cellular
//让分流走蜂窝网络跟 Wi-Fi 中的优选结果
;host-suffix, googleapis.com, proxy, multi-interface
//让分流走蜂窝网络跟 Wi-Fi 中的负载均衡，提供更大带宽出入接口
;host-suffix, googleapis.com, proxy, multi-interface-balance
//指定分流走特定网络接口
;host-suffix, googleapis.com, proxy, via-interface=pdp_ip0

// %TUN% 参数，回传给 Quantumult X 接口，可用于曲线实现代理链功能
;host-suffix, example.com, ServerA, via-interface=%TUN%
;ip-cidr, ServerA's IP Range, ServerB


[filter_remote]

// 远程分流规则订阅
// 将网络请求进行分流，网络请求的走向由匹配到的策略组决定
// 部分规则有先后顺序要求，调整顺序可能失效
# 隐私保护评论不会显示定位
# 规则修正
#（应为direct，为方便策略，设置成了国内服务策略）
# 国内隐藏ip
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/anti-ip-attribution.list, tag=国内隐藏ip, force-policy=节点策略, update-interval=172800, opt-parser=true, enabled=false
# SpeedTest
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Speedtest.list, tag=SpeedTest, force-policy=SpeedTest, update-interval=172800, opt-parser=false, enabled=true
# 规则修正
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Unbreak.list, tag=规则修正, force-policy=国内服务, update-interval=86400, opt-parser=true, enabled=true
# 自用去广告
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/AdRule.list, tag=自用广告屏蔽, force-policy=广告拦截, update-interval=172800, opt-parser=false, enabled=true
# 广告拦截
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/BanAD.list, tag=广告拦截, force-policy=广告拦截, update-interval=172800, opt-parser=true, enabled=true
# 运营劫持
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Hijacking.list, tag=运营劫持, force-policy=广告拦截, update-interval=86400, opt-parser=true, enabled=true
# 反运营劫持
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Anti-hijacking.list, tag=反劫持, force-policy=广告拦截, update-interval=86400, opt-parser=true, enabled=true
# 隐私保护
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Privacy.list, tag=隐私保护, force-policy=广告拦截, update-interval=86400, opt-parser=true, enabled=true
# 国际社交 Telegram
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Telegram.list, tag=Telegram, force-policy=国际社交, update-interval=172800, opt-parser=true, enabled=true
# 国际社交 Twitter
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Twitter.list, tag=Twitter, force-policy=国际社交, update-interval=172800, opt-parser=true, enabled=true
# TikTok
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/TikTok.list, tag=海外抖音TikTok, force-policy=TikTok换区, update-interval=86400, opt-parser=true, enabled=true
# 国际媒体
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/GlobalMedia.list, tag=国际媒体, force-policy=国际媒体, update-interval=86400, opt-parser=true, enabled=true
# 流媒体HK
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Region/HK.list, tag=流媒体HK, force-policy=香港节点, update-interval=86400, opt-parser=true, enabled=true
# 流媒体TW
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Region/TW.list, tag=流媒体TW, force-policy=台湾节点, update-interval=86400, opt-parser=true, enabled=true
# 流媒体JP
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Region/JP.list, tag=流媒体JP, force-policy=日本节点, update-interval=86400, opt-parser=true, enabled=true
# 流媒体US
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Region/US.list, tag=流媒体US, force-policy=美国节点, update-interval=86400, opt-parser=true, enabled=true
# 全球加速
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Global.list, tag=全球加速, force-policy=全球加速, update-interval=86400, opt-parser=true, enabled=true
# 谷歌
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Google.list, tag=Google服务, force-policy=全球加速, update-interval=172800, opt-parser=false, enabled=true
# Apple服务
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/Apple.list, tag=Apple服务, force-policy=Apple服务, update-interval=86400, opt-parser=true, enabled=true
# 国内视频
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/ChinaMedia.list, tag=国内视频, force-policy=国内服务, update-interval=86400, opt-parser=true, enabled=true
# 国内网站
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/China.list, tag=国内网站, force-policy=国内服务, update-interval=86400, opt-parser=true, enabled=true
# 国内ASN
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/ChinaASN.list, tag=国内ASN, force-policy=国内服务, update-interval=172800, opt-parser=true, inserted-resource=true, enabled=true
# 国内服务
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/ChinaIPv4.txt#type=rule, tag=ChinaIPv4, force-policy=国内服务, update-interval=86400, opt-parser=true, enabled=true
# 国内服务
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rule/ChinaIPv6.txt#type=rule, tag=ChinaIPv6, force-policy=国内服务, update-interval=86400, opt-parser=true, enabled=true



// 本地重写规则
[rewrite_local]

# Boxjs
# https?:\/\/boxjs\.(com|net) url script-analyze-echo-response https://raw.githubusercontents.com/chavyleung/scripts/master/box/chavy.boxjs.js

// 远程重写规则
[rewrite_remote]
# 软件解锁
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/Crack/Collections.conf, tag=自用解锁, update-interval=172800, opt-parser=true, enabled=true
# 豆瓣添加快捷搜索播放源
https://raw.githubusercontent.com/I-am-R-E/QuantumultX/main/DouBan.conf, tag=豆瓣添加快捷搜索播放源, update-interval=172800, opt-parser=false, enabled=false
# 京东比价
https://raw.githubusercontent.com/ioshkj/quantumultX/main/jd_price.conf, tag=京东比价, update-interval=172800, opt-parser=true, enabled=true
# 软件增强
https://raw.githubusercontent.com/zZPiglet/Task/master/UnblockURLinWeChat.conf, tag=微信解锁被屏蔽的URL

# 去广告
https://gitlab.com/ddgksf2013/Cuttlefish/-/raw/master/Html/WebAdBlock.conf, tag=影视网站去广告, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/Crack/AppAd.conf, tag=自用App去广告, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/Crack/YoutubeAds.conf, tag=youtube去广告, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rewrite/alidrive.js, tag=阿里云优化首页, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/rewrite/aliyun.js, tag=Fileball挂载阿里云, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/Crack/StartAd.conf, tag=去开屏和应用广告, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/Crack/BanAD.conf, tag=去广告重写, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/Softlyx/QuantumultX/main/Crack/General.conf, tag=神机重定向, update-interval=172800, opt-parser=false, enabled=true
# 网页优化
# Boxjs支持
# http_backend如果有问题，可以添加下面重写内容
# https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJS商店版
https://github.com/chavyleung/scripts/raw/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=Boxjs, update-interval=172800, opt-parser=false, enabled=true
# Sub Store
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/QX.snippet, tag=Sub-Store, update-interval=172800, opt-parser=false, enabled=true



[task_local]
# 疫情动态,具体设置脚本里有写
30 10 * * ? https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/nCov.js, tag=疫情动态, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/COVID-19.png, enabled=true
# NASA每日一图,具体设置脚本里有写
2 8 * * ? https://raw.githubusercontent.com/evilbutcher/Quantumult_X/master/check_in/nasa/nasapic.js, tag=NASA每日一图, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/NASA.png, enabled=false
# 每日环球视野
1 8 * * ? https://raw.githubusercontent.com/evilbutcher/Quantumult_X/master/check_in/idaily/idaily.js, tag=iDaily每日环球视野, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/iDaily.png, enabled=true
# 清理DNS缓存
0 0/6 * * ? https://raw.githubusercontent.com/unknowntokyo/surge-list/master/X/dns-clear-cache.js, tag=清理DNS缓存, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/clean.png, enabled=true
# 汇率
0 8 * * ? https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/exchange.js, tag=汇率监控, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/exchangerate.png, enabled=true
// 彩云天气
;https://github.com/chiupam/tutorial/blob/master/caiyun/README.md
;https://github.com/Peng-YM/QuanX
0 7-22 * * ? https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/caiyun.js, tag=彩云天气, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/caiyun.png, enabled=true
# 网易云解锁查询
event-interaction https://raw.githubusercontent.com/I-am-R-E/QuantumultX/main/TaskLocal/NeteaseMusicUnlockCheck.js, tag=查询网易云音乐解锁, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/wymusic.png, enabled=true
# 送中查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/switch-check-google.js, tag=送中查询, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/szcx.png, enabled=true
# 流媒体解锁查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体解锁查询, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/Media.png, enabled=true
# GeoIP查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/geo_location.js, tag=GeoIP 查询, img-url=https://raw.githubusercontent.com/Softlyx/QuantumultX/main/img/dingwei.png, enabled=true
# 单根节点流量查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/traffic-check.js, tag=策略流量查询, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png, enabled=true
#>>>>>>>>>>>Boxjs备份/还原
5 10 * * * https://raw.githubusercontent.com/dompling/Script/master/gist/restore.js, tag=Gist恢复, img-url=https://raw.githubusercontents.com/chxm1023/script/main/icon/box.png, enabled=false
0 10 * * * https://raw.githubusercontent.com/dompling/Script/master/gist/backup.js, tag=Gist备份, img-url=https://raw.githubusercontents.com/chxm1023/script/main/icon/box.png, enabled=false
# —————————————————————————————————————
# UI交互查询脚本示范，在首页长按 节点/策略组 唤出
;event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag = 流媒体 - 解锁查询，img-url=checkmark.seal.system, enabled=true
# —————————————————————————————————————
# 网络切换/变化时 触发的脚本类型
;event-network sample-taks.js


[http_backend]
# Boxjs设置，改为使用http backend方式，访问地址改为http://127.0.0.1:9999，更新配置后请长按风车-更新，然后重启代理
#https://raw.githubusercontent.com/chavyleung/scripts/master/box/chavy.boxjs.js, tag=BoxJs, path=^/, img-url=https://raw.githubusercontent.com/Orz-3/task/master/box.png, enabled=true
# Boxjs设置，改为使用http backend方式，访问地址改为http://127.0.0.1:9999，更新配置后请长按风车-更新，然后重启代理
#https://raw.githubusercontents.com/chavyleung/scripts/master/box/chavy.boxjs.js, tag=BoxJs, path=^/, img-url=https://raw.githubusercontent.com/Orz-3/task/master/box.png, enabled=true


[mitm]
// 中间人攻击
//（Man-in-the-MiddleAttack，简称“MITM攻击”）
skip_validating_cert = true
force_sni_domain_name = false
hostname = -api-mifit-cn2.huami.com,-huami.com

######################################
passphrase = 
p12 = 
