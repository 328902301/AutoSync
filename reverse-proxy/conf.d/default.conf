server {
  listen 443 default_server ssl http2;
  server_name filterlists.com;
  include server-includes/*;
  ssl_certificate /etc/nginx/cert/filterlists_cert.pem;
  ssl_certificate_key /etc/nginx/cert/filterlists_key.pem;
  
  location ^~ /api/archival/ {
    rewrite    ^/api/archival/(.*)$ /$1 break;
    proxy_pass http://archival-api:80;
    include    location-includes/*;
    add_header Content-Security-Policy "default-src 'none'; connect-src 'self';" always;
  }

  location ^~ /api/directory/ {
    rewrite    ^/api/directory/(.*)$ /$1 break;
    proxy_pass http://directory-api:80;
    include    location-includes/*;
    add_header Content-Security-Policy "default-src 'none'; connect-src 'self';" always;
  }

  location ^~ /api/ {
    rewrite    ^/api/(.*)$ /$1 break;
    proxy_pass http://api-docs:8080;
    include    location-includes/*;
    add_header Content-Security-Policy "default-src 'none'; script-src 'self' 'unsafe-inline'; connect-src 'self'; img-src 'self' validator.swagger.io data:; style-src 'self' 'unsafe-inline';" always;
  }

  location / {
    proxy_pass http://web:80;
    include    location-includes/*;
    add_header Content-Security-Policy "default-src 'none'; script-src 'self' 'unsafe-inline'; connect-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline';" always;
  }
}

# Redirect http to https
server {
  listen 80 default_server;
  server_name filterlists.com;
  include server-includes/*;
  return 301 https://filterlists.com$request_uri;
}

# Redirect www to non-www
server {
  listen 80;
  listen 443 ssl http2;
  server_name www.filterlists.com;
  include server-includes/*;
  ssl_certificate /etc/nginx/cert/filterlists_cert.pem;
  ssl_certificate_key /etc/nginx/cert/filterlists_key.pem;  
  return 301 https://filterlists.com$request_uri;
}