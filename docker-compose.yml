version: "3.7"

services:
  reverse-proxy:
    image: nginx:alpine
    restart: always
    networks:
      - reverse-proxy
    depends_on:
      - directory-api
    volumes:
      - ./reverse-proxy/svr-includes:/etc/nginx/svr-includes:ro

  archival-api:
    image: ghcr.io/collinbarrett/filterlists-archival-api
    restart: always
    networks:
      - archival
    depends_on:
      - archival-scheduling-db
      - directory-api
    volumes:
      - archival-application-insights:/app/application-insights
    environment:
      ApplicationInsights__InstrumentationKey: ${ARCHIVAL_APPLICATION_INSIGHTS_INSTRUMENTATION_KEY}
      ConnectionStrings__SchedulingConnection: ${ARCHIVAL_REDIS_CONNECTION_STRING}

  archival-scheduling-db:
    image: redis:alpine
    restart: always
    networks:
      - archival
    volumes:
      - archival-scheduling-db:/data
    entrypoint: ["redis-server", "--appendonly", "yes"]

  directory-api:
    image: ghcr.io/collinbarrett/filterlists-directory-api
    restart: always
    networks:
      - reverse-proxy
      - directory
    depends_on:
      - directory-db
    volumes:
      - directory-application-insights:/app/application-insights
    environment:
      ApplicationInsights__InstrumentationKey: ${DIRECTORY_APPLICATION_INSIGHTS_INSTRUMENTATION_KEY}
      ConnectionStrings__DirectoryConnection: ${DIRECTORY_CONNECTION_STRING}

  directory-db:
    image: postgres:alpine
    restart: always
    networks:
      - directory
    volumes:
      - directory-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DIRECTORY_DB_USER}
      POSTGRES_PASSWORD: ${DIRECTORY_DB_PASSWORD}
      POSTGRES_DB: ${DIRECTORY_DB_DATABASE}

networks:
  reverse-proxy:
  archival:
  directory:

volumes:
  archival-application-insights:
  archival-scheduling-db:
  directory-application-insights:
  directory-db:
