using System.Collections.Generic;
using System.Text;
using FilterLists.Agent.Features.Urls.Models.ValidationResults;
using MediatR;

namespace FilterLists.Agent.Features.Urls
{
    public static class BuildGitHubIssueBody
    {
        public class Command : IRequest<string>
        {
            public Command(IEnumerable<DataFileUrlValidationResults> dataFileUrlValidationResults)
            {
                DataFileUrlValidationResults = dataFileUrlValidationResults;
            }

            public IEnumerable<DataFileUrlValidationResults> DataFileUrlValidationResults { get; }
        }

        public class Handler : RequestHandler<Command, string>
        {
            private const string IssueHeader =
                "<p>This issue is auto-generated by the [FilterLists.Agent](https://github.com/collinbarrett/FilterLists/tree/master/src/FilterLists.Agent). If it is still open at 9am UTC daily, it is updated around that time.</p><p>We rely on the help of the community to ensure that the FilterLists site data remains up-to-date. The URLs listed below have been automatically flagged and may [need to be updated](https://github.com/collinbarrett/FilterLists/tree/master/data). Please consider submitting a PR against this issue updating some or all of the URLs accordingly.</p><p>Thanks for your contributions!</p>";

            protected override string Handle(Command request)
            {
                var body = new StringBuilder();
                body.Append(IssueHeader);
                foreach (var fileReults in request.DataFileUrlValidationResults)
                {
                    body.Append($"<h1>{fileReults.DataFileName}</h1>");
                    body.Append("<ul>");
                    foreach (var result in fileReults.Results)
                    {
                        body.Append($"<li>[{result.Url.AbsolutePath}]({result.Url.AbsolutePath})");
                        body.Append("<ul>");
                        foreach (var message in result.Messages)
                            body.Append($"<li>{message}</li>");
                        body.Append("</ul>");
                        body.Append("</li>");
                    }

                    body.Append("</ul>");
                }

                return body.ToString();
            }
        }
    }
}