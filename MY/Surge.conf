[General]
http-api = Tartarus@0.0.0.0:6166

# > 增强版 Wi-Fi 助理
# (在 Wi-Fi 网络不佳时尝试使用数据网络建立连接，请仅当使用不限量的数据流量时开启)
wifi-assist = false

# > Internet 测试 URL
internet-test-url = http://wifi.vivo.com.cn/generate_204
# > 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
# > 测试超时（秒）
test-timeout = 5

# > TLS 引擎
tls-provider = openssl

# > IPv6 支持（默认关闭）
ipv6 = false

# > 允许 Wi-Fi 访问 (仅 iOS，若允许远程访问将「false」改为「true」)
allow-wifi-access = false
wifi-access-http-port = 6152
wifi-access-socks5-port = 6153
# > 允许 Wi-Fi 访问 (仅 macOS，若允许远程访问将「127.0.0.1」改为「0.0.0.0」)
http-listen = 127.0.0.1:6152
socks5-listen = 127.0.0.1:6153

# > 兼容模式 (仅 iOS)
# compatibility-mode = 0
# > 跳过代理
skip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, localhost, *.local, passenger.t3go.cn
# > 排除简单主机名
exclude-simple-hostnames = true

# > Network framwork
network-framework = false

# > DNS 服务器 (如无必要不建议使用 DNS over HTTPS)
dns-server = 119.29.29.29,system
# > 从 /etc/hosts 读取 DNS 记录
read-etc-hosts = true

# 高级设置

# > 日志级别
loglevel = notify

# > 当遇到 REJECT 策略时返回错误页
show-error-page-for-reject = true

# > Always Real IP Hosts
always-real-ip = msftconnecttest.com, msftncsi.com, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.battlenet.com.cn, *.battlenet.com, *.blzstatic.cn, *.battle.net

# > TCP Force HTTP Hosts
force-http-engine-hosts = *.ott.cibntv.net, 123.59.31.1,119.18.193.135, 122.14.246.33, 175.102.178.52, 116.253.24.*, 175.6.26.*, 220.169.153.*

# > VIF Excluded Routes
tun-excluded-routes = 239.255.255.250/32

[Replica]
# 0 为关闭，1 为开启
# > 隐藏 Apple 请求
hide-apple-request = 0
# > 隐藏崩溃追踪器请求
hide-crash-reporter-request = 1
# > 隐藏 UDP 会话
hide-udp = 0
# > 关键词过滤器
# none（关闭关键词过滤器） / whitelist（blacklist（仅记录包含关键字的请求）） / blacklist（仅记录不包含关键字的请求） / pattern（匹配通配符的请求）
# keyword-filter-type = none
# > 关键词
# keyword-filter = (null)

[Host]
*.taobao.com = server:223.5.5.5
*.tmall.com = server:223.5.5.5
*.jd.com = server:119.28.28.28
*.qq.com = server:119.28.28.28
*.tencent.com = server:119.28.28.28
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.weixin.com = server:119.28.28.28
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29
*.bilibili.com = server:119.29.29.29
*testflight.apple.com = server:8.8.4.4
mtalk.google.com = 108.177.125.188
dl.google.com = server:119.29.29.29
dl.l.google.com = server:119.29.29.29

[Proxy]
{{ getSurgeNodes(nodeList) }}

[Proxy Group]
FINAL = select, DIRECT, PROXY,
PROXY = select, HK, SG, JP,
Apple = select, DIRECT, PROXY,
Netflix = select, HK, SG, JP,
YouTube Music = select, JP,
YouTube = select, HK, SG, TW, JP,
Bahamut = select, TW, 
EMBY= select, US, 
Telegram = select,  HK, SG, TW, JP,
Speedtest = select, DIRECT, HK, SG, TW, US, JP,
HKMTMedia = select, DIRECT, HK, TW, 
HK = load-balance, {{ getNodeNames(nodeList, customFilters.HK) }}, persistent=1, evaluate-before-use = 1, url = http://www.gstatic.com/generate_204
SG = load-balance, {{ getNodeNames(nodeList, customFilters.SG) }}, persistent=1, evaluate-before-use = 1, url = http://www.gstatic.com/generate_204
JP = load-balance, {{ getNodeNames(nodeList, customFilters.JP) }}, persistent=1, evaluate-before-use = 1, url = http://www.gstatic.com/generate_204
US = load-balance, {{ getNodeNames(nodeList, customFilters.US) }}, persistent=1, evaluate-before-use = 1, url = http://www.gstatic.com/generate_204
TW = load-balance, {{ getNodeNames(nodeList, customFilters.TW) }}, persistent=1, evaluate-before-use = 1, url = http://www.gstatic.com/generate_204

[Rule]
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/TestFlight/TestFlight.list,PROXY
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Apple/Apple.list,Apple

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/Netflix/Netflix.list,Netflix

RULE-SET,https://raw.githubusercontent.com/Tartarus2014/For-own-use/master/Ruleset/Emby/Emby.list,EMBY

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Bahamut/Bahamut.list,Bahamut

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTubeMusic/YouTubeMusic.list,YouTube Music
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list,YouTube

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/Speedtest/Speedtest.list,Speedtest

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/BiliBili/BiliBili.list,HKMTMedia

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/Telegram/Telegram.list,Telegram

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/Proxy/Proxy.list,PROXY
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Proxy/Proxy_Domain.list,PROXY

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/China/China.list,DIRECT

GEOIP,CN,DIRECT
FINAL,FINAL,dns-failed

[MITM]
skip-server-cert-verify = true
tcp-connection = true
ca-passphrase = 4AB42EEF
ca-p12 = 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
