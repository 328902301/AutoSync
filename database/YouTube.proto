syntax = "proto3";


# 1、包名
package YouTube;

enum Service
{
    GFEEDBACK = 2;
	GUIDED_HELP = 4;
	ECATCHER = 6;
}

enum colorInfo
{
	COLOR_MATRIX_COEFFICIENTS_BT709 = 1;
}

message Package
{
	repeated string serviceTrackingParams = 6;
	{
		Service service = 1;

		repeated string params = 2;
		{
			required string key = 1;
			required string value = 2;
		}
	}

	repeated string captions = 10;
	{
		repeated string playerCaptionsTracklistRenderer = 51621377;
		{
			repeated string captionTracks = 1;
			{
				required string baseUrl = 1;
				repeated string name = 2;
				{
					required string simpleText = 1;
				}
            	required string vssId = 3;
            	required string languageCode = 4;
            	optional string kind = 5;
            	//optional int32 appData1 = 6;
            	required bool isTranslatable = 7;
            	//optional int32 sel2 = 8;
            	//optional int32 appSize2 = 9;
            	//optional int32 appData2 = 10;
			}
		}
    }

	repeated string streamingData = 2;
	{
		required string expiresInSeconds = 1;
		repeated string formats = 3;
		{
			required string url = 2;
			required string mimeType = 5;
			required int32 width = 7;
			required int32 height = 8;
			repeated string initRange = 9
			{
				required int32 start = 3;
				required int32 end= 4;
			}
			required int32 fps = 25
			required string qualityLabel = 26;
			repeated string colorInfo = 33;
			{
				colorInfo matrixCoefficients = 1;
				colorInfo transferCharacteristics = 2;
				colorInfo primaries = 3;
			}
		}
	}
}








message PackageList
{
       repeated Package  pk = 2;
       required int32 sel3 = 3;
}



# 1、包名
package protocobuff_Demo;

# 2、option 选项
option java_package = "com.carson.proto";
option java_outer_classname = "Demo";


# 3、消息模型
# 3.1、生成 Person 消息对象（包含多个字段）
message Person {
  required string name = 1;
  required int32 id = 2;
  optional string email = 3;

  enum PhoneType {
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }

# 该消息类型定义在 Person 消息类型的内部
# 即 Person 消息类型是 PhoneNumber 消息类型的父消息类型
  message PhoneNumber {
    required string number = 1;
    optional PhoneType type = 2 [default = HOME];
  }
  
  # 直接使用内部消息类型
  repeated PhoneNumber phone = 4;
}

# 3.2 使用外部消息类型，直接使用了 Person 消息类型作为消息字段
message AddressBook {
  repeated Person person = 1;
}

