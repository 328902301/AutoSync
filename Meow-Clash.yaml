### subscription-url=https://miaoz.xyz/api/v1/client/subscribe?token=411cc256588e50b4309c01cca225338f
port: 7890
socks-port: 7891
allow-lan: true
mode: rule
log-level: error
external-controller: 127.0.0.1:8080
dns:
  enable: true
  listen: 0.0.0.0:53
  default-nameserver:
    - 114.114.114.114
    - 8.8.8.8
  enhanced-mode: redir-host
  nameserver:
    - 114.114.114.114
    - 8.8.8.8
    - tls://dns.rubyfish.cn:853
    - https://1.1.1.1/dns-query

rules:
  - RULE-SET,Unbreak, DIRECT
  - RULE-SET,Advertising, 全局拦截
  - RULE-SET,Hijacking, REJECT
  - RULE-SET,Privacy, REJECT
  - RULE-SET,Global, 节点选择
  - RULE-SET,Streaming, 国外媒体
  - RULE-SET,StreamingSE, 港台番剧
  - RULE-SET,Apple, 苹果服务
  - RULE-SET,AppleMusic, 苹果服务
  - RULE-SET,China, DIRECT
  - GEOIP,CN, DIRECT
  - MATCH, 漏网之鱼

proxy-providers:

  MiaoZ:
    type: http
    url: "https://proxy-provider-converter-six-lilac.vercel.app/api/convert?url=https%3A%2F%2Fmiaoz.xyz%2Fapi%2Fv1%2Fclient%2Fsubscribe%3Ftoken%3D411cc256588e50b4309c01cca225338f&target=clash"
    interval: 86400
    path: ./providers/MiaoZ.yaml
    health-check:
      enable: true
      interval: 600
      lazy: true
      url: http://www.gstatic.com/generate_204

rule-providers:
  Unbreak:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Unbreak.yaml
    path: ./RuleSet/Unbreak.yaml
    interval: 86400
  Advertising:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Guard/Advertising.yaml
    path: ./RuleSet/Guard/Advertising.yaml
    interval: 86400
  Privacy:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Guard/Privacy.yaml
    path: ./RuleSet/Guard/Privacy.yaml
    interval: 86400
  Hijacking:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Guard/Hijacking.yaml
    path: ./RuleSet/Guard/Hijacking.yaml
    interval: 86400
  Streaming:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/StreamingMedia/Streaming.yaml
    path: ./RuleSet/StreamingMedia/Streaming.yaml
    interval: 86400
  StreamingSE:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/StreamingMedia/StreamingSE.yaml
    path: ./RuleSet/StreamingMedia/StreamingSE.yaml
    interval: 86400
  Global:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Global.yaml
    path: ./RuleSet/Global.yaml
    interval: 86400
  Apple:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master//Clash/RuleSet/Extra/Apple/Apple.yaml
    path: ./RuleSet/Extra/Apple.yaml
    interval: 86400
  AppleMusic:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master//Clash/RuleSet/Extra/Apple/Music.yaml
    path: ./RuleSet/Extra/Music.yaml
    interval: 86400
  China:
    type: http
    behavior: classical
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/China.yaml
    path: ./RuleSet/China.yaml
    interval: 86400

proxy-groups:
  - name:  节点选择
    type: select
    proxies:
      - 自动筛选
      - DIRECT
    use:
      - MiaoZ

  - name:  自动筛选
    type: url-test
    use:
      - MiaoZ
    url: 'http://www.gstatic.com/generate_204'
    interval: 300

  - name:  国外媒体
    type: select
    proxies:
      - 节点选择
      - DIRECT

  - name:  港台番剧
    type: select
    proxies:
      - 节点选择
      - DIRECT

  - name:  全局拦截
    type: select
    proxies:
      - REJECT
      - DIRECT

  - name:  苹果服务
    type: select
    proxies:
      - 节点选择
      - DIRECT

  - name:  漏网之鱼
    type: select
    proxies:
      - 节点选择
      - DIRECT
mitm:
  enable: true
  hostnames:
  - '*.jd.com'
  - 'www.google.cn'
  - '*.google.com'
  - api.douban.com
  - erebor.douban.com
  ca:
    passphase: 9BF8E6B6
    certificate: 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
rewrite:
- regex: ^https?://www.google.cn/(.*)
  match: url
  action: "302"
  target: https://www.google.com/$1  # redirect with params
- regex: ^http://www.google.cn
  match: url
  action: "header"  # rewrite request header Host
  target: http://www.google.com
- regex: ^https?:\/\/(www.)?jd\.com\/
  match: url
  action: "302"
  target: https://www.jd.com/
- regex: ^https?://(www.)?google.cn/search
  match: url
  action: "404"  # response with http status code 404
  target: https://www.google.com/search
- regex: ^https?:\/\/.+\.googlevideo\.com\/.+&oad
  match: url
  action: reject-image  # response with 1x1 pixel emtpy image
  target: ""
- regex: ^http://www.google.cn
  match: url
  action: "reject"  # close connection immediately
  target: ""  
- regex: ^https?:\/\/api\.douban\.com\/v\d\/app_ads\/
  match: url
  action: reject
  target: ""
- regex: ^https?:\/\/api\.douban\.com\/v2\/app_ads\/common_ads
  match: url
  action: reject-img
  target: ""
- regex: ^https?:\/\/api\.douban\.com\/v2\/app_ads\/splash
  match: url
  action: reject-img
  target: ""
