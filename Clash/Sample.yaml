mixed-port: 7890
allow-lan: false
mode: Script
log-level: debug
ipv6: false
tun:
  enable: true
  stack: gvisor
  auto-detect-interfcae: true
  auto-route: true
  dns-hijack:
      - 198.18.0.2:53

proxy-providers:
  Acrossline:
    type: http
    path: ./Server/Acrossline.yaml
    url: "机场订阅1，注意保留双引号和双引号前面的空格"
    interval: 3600
    filter: '🇭🇰|🇸🇬|🇰🇷|🇺🇸|🇯🇵'
    health-check: 
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600
  Misty:
    type: http
    path: ./Server/Misty.yaml
    url: "机场订阅2，注意保留双引号和双引号前面的空格"
    interval: 3600
    filter: '🇭🇰|🇸🇬|🇰🇷|🇺🇸|🇯🇵'
    health-check: 
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600

proxy-groups:
  - name: 全球加速
    type: select
    proxies:
      - Across
      - All in Misty
  - name: 电报信息
    type: select
    proxies:
      - Across
      - All in Misty
  - name: 微软服务
    type: select
    proxies:
      - Across
      - All in Misty
      - DIRECT
  - name: Emby
    type: select
    proxies:
      - Across
      - All in Misty
      - DIRECT
  - name: 国际媒体
    type: select
    proxies:
      - Across
      - All in Misty
  - name: 漏网之鱼
    type: select
    proxies:
      - Across
      - All in Misty
      - DIRECT

  - name: "Across"
    type: url-test
    use:
      - Acrossline
  
  - name: "All in Misty"
    type: url-test
    use:
      - Misty
  
rule-providers:
   Unbreak:
    type: http
    behavior: domain
    path: ./RuleSet/DivineEngine/Unbreak.yaml
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Unbreak.yaml
    interval: 86400

   BanAD:
    type: http
    behavior: domain
    path: ./RuleSet/ACL4SSR/BanAD.yaml
    url: https://cdn.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Providers/BanAD.yaml
    interval: 86400

   BanProgramAD:
    type: http
    behavior: classical
    path: ./RuleSet/ACL4SSR/BanProgramAD.list
    url: https://cdn.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Providers/BanProgramAD.yaml
    interval: 86400

   Microsoft:
    type: http
    behavior: classical
    path: ./RuleSet/ACL4SSR/Microsoft.yaml
    url: https://cdn.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Providers/Ruleset/Microsoft.yaml
    interval: 86400

   Emby:
    type: http
    behavior: classical
    path: ./RuleSet/Emby.yaml
    url: https://cdn.jsdelivr.net/gh/iEwha/Profiles@master/Ruleset/Emby.yaml
    interval: 86400

   Telegram:
    type: http
    behavior: classical
    path: ./RuleSet/DivineEngine/Telegram.yaml
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Extra/Telegram/Telegram.yaml
    interval: 86400

   Streaming:
    type: http
    behavior: classical
    path: ./RuleSet/DivineEngine/Streaming.yaml
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/StreamingMedia/Streaming.yaml
    interval: 86400

   Proxy:
    type: http
    behavior: classical
    path: ./RuleSet/DivineEngine/Global.yaml
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Global.yaml
    interval: 86400

   China:
    type: http
    behavior: classical
    path: ./RuleSet/DivineEngine/China.yaml
    url: https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/China.yaml
    interval: 86400

rules:
  - RULE-SET,Unbreak,DIRECT
  - RULE-SET,BanAD,REJECT
  - RULE-SET,BanProgramAD,REJECT
  - RULE-SET,Microsoft,微软服务
  - RULE-SET,Emby,Emby
  - RULE-SET,Telegram,电报信息
  - RULE-SET,Streaming,国际媒体
  - RULE-SET,Proxy,全球加速
  - RULE-SET,China,DIRECT
  - GEOIP,CN,DIRECT,no-resolve
  - MATCH,漏网之鱼

script:
  code: |
    def main(ctx, metadata):
        ruleset_action = {
            "BanAD": "REJECT",
            "BanProgramAD": "REJECT",
            "Unbreak": "DIRECT",           
            "Microsoft": "微软服务",
            "Emby": "Emby",
            "Telegram": "电报信息",
            "Streaming": "国际媒体",
            "Proxy": "全球加速",
            "China": "DIRECT",   
          }
        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])
            
        for ruleset in ruleset_action:
            if ctx.rule_providers[ruleset].match(metadata):
                return ruleset_action[ruleset]

        if metadata["dst_ip"] == "":
            return "DIRECT"

        code = ctx.geoip(metadata["dst_ip"])
        if code == "CN":
            ctx.log('[Script] Geoip CN')
            return "DIRECT"

        ctx.log('[Script] MATCH')
        return "漏网之鱼"
   
